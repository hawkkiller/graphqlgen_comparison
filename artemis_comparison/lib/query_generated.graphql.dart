// GENERATED CODE - DO NOT MODIFY BY HAND

import 'package:artemis/artemis.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:equatable/equatable.dart';
import 'package:gql/ast.dart';
import 'package:graphbrainz_example/coercers.dart';
part 'query_generated.graphql.g.dart';

@JsonSerializable(explicitToJson: true)
class Hello0$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello0$Query$Launch$LaunchSite();

  factory Hello0$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello0$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello0$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello0$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello0$Query$Launch$LaunchLinks();

  factory Hello0$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello0$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello0$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello0$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello0$Query$Launch$LaunchRocket();

  factory Hello0$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello0$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello0$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello0$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello0$Query$Launch();

  factory Hello0$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello0$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello0$Query$Launch$LaunchSite? launchSite;

  Hello0$Query$Launch$LaunchLinks? links;

  Hello0$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello0$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello0$Query extends JsonSerializable with EquatableMixin {
  Hello0$Query();

  factory Hello0$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello0$QueryFromJson(json);

  List<Hello0$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello0$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello1$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello1$Query$Launch$LaunchSite();

  factory Hello1$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello1$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello1$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello1$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello1$Query$Launch$LaunchLinks();

  factory Hello1$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello1$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello1$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello1$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello1$Query$Launch$LaunchRocket();

  factory Hello1$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello1$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello1$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello1$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello1$Query$Launch();

  factory Hello1$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello1$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello1$Query$Launch$LaunchSite? launchSite;

  Hello1$Query$Launch$LaunchLinks? links;

  Hello1$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello1$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello1$Query extends JsonSerializable with EquatableMixin {
  Hello1$Query();

  factory Hello1$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello1$QueryFromJson(json);

  List<Hello1$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello1$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello2$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello2$Query$Launch$LaunchSite();

  factory Hello2$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello2$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello2$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello2$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello2$Query$Launch$LaunchLinks();

  factory Hello2$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello2$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello2$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello2$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello2$Query$Launch$LaunchRocket();

  factory Hello2$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello2$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello2$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello2$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello2$Query$Launch();

  factory Hello2$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello2$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello2$Query$Launch$LaunchSite? launchSite;

  Hello2$Query$Launch$LaunchLinks? links;

  Hello2$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello2$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello2$Query extends JsonSerializable with EquatableMixin {
  Hello2$Query();

  factory Hello2$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello2$QueryFromJson(json);

  List<Hello2$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello2$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello3$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello3$Query$Launch$LaunchSite();

  factory Hello3$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello3$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello3$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello3$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello3$Query$Launch$LaunchLinks();

  factory Hello3$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello3$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello3$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello3$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello3$Query$Launch$LaunchRocket();

  factory Hello3$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello3$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello3$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello3$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello3$Query$Launch();

  factory Hello3$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello3$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello3$Query$Launch$LaunchSite? launchSite;

  Hello3$Query$Launch$LaunchLinks? links;

  Hello3$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello3$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello3$Query extends JsonSerializable with EquatableMixin {
  Hello3$Query();

  factory Hello3$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello3$QueryFromJson(json);

  List<Hello3$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello3$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello4$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello4$Query$Launch$LaunchSite();

  factory Hello4$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello4$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello4$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello4$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello4$Query$Launch$LaunchLinks();

  factory Hello4$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello4$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello4$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello4$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello4$Query$Launch$LaunchRocket();

  factory Hello4$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello4$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello4$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello4$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello4$Query$Launch();

  factory Hello4$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello4$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello4$Query$Launch$LaunchSite? launchSite;

  Hello4$Query$Launch$LaunchLinks? links;

  Hello4$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello4$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello4$Query extends JsonSerializable with EquatableMixin {
  Hello4$Query();

  factory Hello4$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello4$QueryFromJson(json);

  List<Hello4$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello4$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello5$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello5$Query$Launch$LaunchSite();

  factory Hello5$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello5$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello5$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello5$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello5$Query$Launch$LaunchLinks();

  factory Hello5$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello5$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello5$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello5$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello5$Query$Launch$LaunchRocket();

  factory Hello5$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello5$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello5$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello5$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello5$Query$Launch();

  factory Hello5$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello5$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello5$Query$Launch$LaunchSite? launchSite;

  Hello5$Query$Launch$LaunchLinks? links;

  Hello5$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello5$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello5$Query extends JsonSerializable with EquatableMixin {
  Hello5$Query();

  factory Hello5$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello5$QueryFromJson(json);

  List<Hello5$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello5$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello6$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello6$Query$Launch$LaunchSite();

  factory Hello6$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello6$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello6$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello6$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello6$Query$Launch$LaunchLinks();

  factory Hello6$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello6$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello6$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello6$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello6$Query$Launch$LaunchRocket();

  factory Hello6$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello6$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello6$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello6$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello6$Query$Launch();

  factory Hello6$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello6$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello6$Query$Launch$LaunchSite? launchSite;

  Hello6$Query$Launch$LaunchLinks? links;

  Hello6$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello6$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello6$Query extends JsonSerializable with EquatableMixin {
  Hello6$Query();

  factory Hello6$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello6$QueryFromJson(json);

  List<Hello6$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello6$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello7$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello7$Query$Launch$LaunchSite();

  factory Hello7$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello7$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello7$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello7$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello7$Query$Launch$LaunchLinks();

  factory Hello7$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello7$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello7$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello7$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello7$Query$Launch$LaunchRocket();

  factory Hello7$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello7$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello7$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello7$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello7$Query$Launch();

  factory Hello7$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello7$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello7$Query$Launch$LaunchSite? launchSite;

  Hello7$Query$Launch$LaunchLinks? links;

  Hello7$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello7$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello7$Query extends JsonSerializable with EquatableMixin {
  Hello7$Query();

  factory Hello7$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello7$QueryFromJson(json);

  List<Hello7$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello7$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello8$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello8$Query$Launch$LaunchSite();

  factory Hello8$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello8$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello8$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello8$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello8$Query$Launch$LaunchLinks();

  factory Hello8$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello8$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello8$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello8$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello8$Query$Launch$LaunchRocket();

  factory Hello8$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello8$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello8$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello8$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello8$Query$Launch();

  factory Hello8$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello8$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello8$Query$Launch$LaunchSite? launchSite;

  Hello8$Query$Launch$LaunchLinks? links;

  Hello8$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello8$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello8$Query extends JsonSerializable with EquatableMixin {
  Hello8$Query();

  factory Hello8$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello8$QueryFromJson(json);

  List<Hello8$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello8$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello9$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello9$Query$Launch$LaunchSite();

  factory Hello9$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello9$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() => _$Hello9$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello9$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello9$Query$Launch$LaunchLinks();

  factory Hello9$Query$Launch$LaunchLinks.fromJson(Map<String, dynamic> json) =>
      _$Hello9$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello9$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello9$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello9$Query$Launch$LaunchRocket();

  factory Hello9$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello9$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello9$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello9$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello9$Query$Launch();

  factory Hello9$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello9$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello9$Query$Launch$LaunchSite? launchSite;

  Hello9$Query$Launch$LaunchLinks? links;

  Hello9$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello9$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello9$Query extends JsonSerializable with EquatableMixin {
  Hello9$Query();

  factory Hello9$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello9$QueryFromJson(json);

  List<Hello9$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello9$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello10$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello10$Query$Launch$LaunchSite();

  factory Hello10$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello10$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello10$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello10$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello10$Query$Launch$LaunchLinks();

  factory Hello10$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello10$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello10$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello10$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello10$Query$Launch$LaunchRocket();

  factory Hello10$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello10$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello10$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello10$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello10$Query$Launch();

  factory Hello10$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello10$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello10$Query$Launch$LaunchSite? launchSite;

  Hello10$Query$Launch$LaunchLinks? links;

  Hello10$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello10$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello10$Query extends JsonSerializable with EquatableMixin {
  Hello10$Query();

  factory Hello10$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello10$QueryFromJson(json);

  List<Hello10$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello10$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello11$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello11$Query$Launch$LaunchSite();

  factory Hello11$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello11$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello11$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello11$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello11$Query$Launch$LaunchLinks();

  factory Hello11$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello11$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello11$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello11$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello11$Query$Launch$LaunchRocket();

  factory Hello11$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello11$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello11$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello11$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello11$Query$Launch();

  factory Hello11$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello11$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello11$Query$Launch$LaunchSite? launchSite;

  Hello11$Query$Launch$LaunchLinks? links;

  Hello11$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello11$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello11$Query extends JsonSerializable with EquatableMixin {
  Hello11$Query();

  factory Hello11$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello11$QueryFromJson(json);

  List<Hello11$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello11$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello12$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello12$Query$Launch$LaunchSite();

  factory Hello12$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello12$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello12$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello12$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello12$Query$Launch$LaunchLinks();

  factory Hello12$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello12$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello12$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello12$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello12$Query$Launch$LaunchRocket();

  factory Hello12$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello12$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello12$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello12$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello12$Query$Launch();

  factory Hello12$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello12$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello12$Query$Launch$LaunchSite? launchSite;

  Hello12$Query$Launch$LaunchLinks? links;

  Hello12$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello12$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello12$Query extends JsonSerializable with EquatableMixin {
  Hello12$Query();

  factory Hello12$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello12$QueryFromJson(json);

  List<Hello12$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello12$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello13$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello13$Query$Launch$LaunchSite();

  factory Hello13$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello13$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello13$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello13$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello13$Query$Launch$LaunchLinks();

  factory Hello13$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello13$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello13$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello13$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello13$Query$Launch$LaunchRocket();

  factory Hello13$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello13$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello13$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello13$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello13$Query$Launch();

  factory Hello13$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello13$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello13$Query$Launch$LaunchSite? launchSite;

  Hello13$Query$Launch$LaunchLinks? links;

  Hello13$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello13$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello13$Query extends JsonSerializable with EquatableMixin {
  Hello13$Query();

  factory Hello13$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello13$QueryFromJson(json);

  List<Hello13$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello13$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello14$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello14$Query$Launch$LaunchSite();

  factory Hello14$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello14$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello14$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello14$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello14$Query$Launch$LaunchLinks();

  factory Hello14$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello14$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello14$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello14$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello14$Query$Launch$LaunchRocket();

  factory Hello14$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello14$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello14$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello14$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello14$Query$Launch();

  factory Hello14$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello14$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello14$Query$Launch$LaunchSite? launchSite;

  Hello14$Query$Launch$LaunchLinks? links;

  Hello14$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello14$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello14$Query extends JsonSerializable with EquatableMixin {
  Hello14$Query();

  factory Hello14$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello14$QueryFromJson(json);

  List<Hello14$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello14$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello15$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello15$Query$Launch$LaunchSite();

  factory Hello15$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello15$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello15$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello15$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello15$Query$Launch$LaunchLinks();

  factory Hello15$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello15$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello15$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello15$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello15$Query$Launch$LaunchRocket();

  factory Hello15$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello15$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello15$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello15$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello15$Query$Launch();

  factory Hello15$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello15$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello15$Query$Launch$LaunchSite? launchSite;

  Hello15$Query$Launch$LaunchLinks? links;

  Hello15$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello15$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello15$Query extends JsonSerializable with EquatableMixin {
  Hello15$Query();

  factory Hello15$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello15$QueryFromJson(json);

  List<Hello15$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello15$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello16$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello16$Query$Launch$LaunchSite();

  factory Hello16$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello16$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello16$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello16$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello16$Query$Launch$LaunchLinks();

  factory Hello16$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello16$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello16$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello16$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello16$Query$Launch$LaunchRocket();

  factory Hello16$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello16$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello16$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello16$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello16$Query$Launch();

  factory Hello16$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello16$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello16$Query$Launch$LaunchSite? launchSite;

  Hello16$Query$Launch$LaunchLinks? links;

  Hello16$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello16$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello16$Query extends JsonSerializable with EquatableMixin {
  Hello16$Query();

  factory Hello16$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello16$QueryFromJson(json);

  List<Hello16$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello16$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello17$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello17$Query$Launch$LaunchSite();

  factory Hello17$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello17$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello17$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello17$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello17$Query$Launch$LaunchLinks();

  factory Hello17$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello17$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello17$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello17$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello17$Query$Launch$LaunchRocket();

  factory Hello17$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello17$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello17$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello17$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello17$Query$Launch();

  factory Hello17$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello17$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello17$Query$Launch$LaunchSite? launchSite;

  Hello17$Query$Launch$LaunchLinks? links;

  Hello17$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello17$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello17$Query extends JsonSerializable with EquatableMixin {
  Hello17$Query();

  factory Hello17$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello17$QueryFromJson(json);

  List<Hello17$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello17$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello18$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello18$Query$Launch$LaunchSite();

  factory Hello18$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello18$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello18$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello18$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello18$Query$Launch$LaunchLinks();

  factory Hello18$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello18$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello18$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello18$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello18$Query$Launch$LaunchRocket();

  factory Hello18$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello18$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello18$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello18$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello18$Query$Launch();

  factory Hello18$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello18$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello18$Query$Launch$LaunchSite? launchSite;

  Hello18$Query$Launch$LaunchLinks? links;

  Hello18$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello18$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello18$Query extends JsonSerializable with EquatableMixin {
  Hello18$Query();

  factory Hello18$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello18$QueryFromJson(json);

  List<Hello18$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello18$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello19$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello19$Query$Launch$LaunchSite();

  factory Hello19$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello19$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello19$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello19$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello19$Query$Launch$LaunchLinks();

  factory Hello19$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello19$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello19$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello19$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello19$Query$Launch$LaunchRocket();

  factory Hello19$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello19$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello19$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello19$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello19$Query$Launch();

  factory Hello19$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello19$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello19$Query$Launch$LaunchSite? launchSite;

  Hello19$Query$Launch$LaunchLinks? links;

  Hello19$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello19$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello19$Query extends JsonSerializable with EquatableMixin {
  Hello19$Query();

  factory Hello19$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello19$QueryFromJson(json);

  List<Hello19$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello19$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello20$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello20$Query$Launch$LaunchSite();

  factory Hello20$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello20$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello20$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello20$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello20$Query$Launch$LaunchLinks();

  factory Hello20$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello20$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello20$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello20$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello20$Query$Launch$LaunchRocket();

  factory Hello20$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello20$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello20$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello20$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello20$Query$Launch();

  factory Hello20$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello20$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello20$Query$Launch$LaunchSite? launchSite;

  Hello20$Query$Launch$LaunchLinks? links;

  Hello20$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello20$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello20$Query extends JsonSerializable with EquatableMixin {
  Hello20$Query();

  factory Hello20$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello20$QueryFromJson(json);

  List<Hello20$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello20$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello21$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello21$Query$Launch$LaunchSite();

  factory Hello21$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello21$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello21$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello21$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello21$Query$Launch$LaunchLinks();

  factory Hello21$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello21$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello21$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello21$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello21$Query$Launch$LaunchRocket();

  factory Hello21$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello21$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello21$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello21$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello21$Query$Launch();

  factory Hello21$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello21$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello21$Query$Launch$LaunchSite? launchSite;

  Hello21$Query$Launch$LaunchLinks? links;

  Hello21$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello21$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello21$Query extends JsonSerializable with EquatableMixin {
  Hello21$Query();

  factory Hello21$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello21$QueryFromJson(json);

  List<Hello21$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello21$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello22$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello22$Query$Launch$LaunchSite();

  factory Hello22$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello22$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello22$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello22$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello22$Query$Launch$LaunchLinks();

  factory Hello22$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello22$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello22$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello22$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello22$Query$Launch$LaunchRocket();

  factory Hello22$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello22$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello22$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello22$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello22$Query$Launch();

  factory Hello22$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello22$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello22$Query$Launch$LaunchSite? launchSite;

  Hello22$Query$Launch$LaunchLinks? links;

  Hello22$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello22$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello22$Query extends JsonSerializable with EquatableMixin {
  Hello22$Query();

  factory Hello22$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello22$QueryFromJson(json);

  List<Hello22$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello22$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello23$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello23$Query$Launch$LaunchSite();

  factory Hello23$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello23$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello23$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello23$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello23$Query$Launch$LaunchLinks();

  factory Hello23$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello23$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello23$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello23$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello23$Query$Launch$LaunchRocket();

  factory Hello23$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello23$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello23$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello23$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello23$Query$Launch();

  factory Hello23$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello23$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello23$Query$Launch$LaunchSite? launchSite;

  Hello23$Query$Launch$LaunchLinks? links;

  Hello23$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello23$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello23$Query extends JsonSerializable with EquatableMixin {
  Hello23$Query();

  factory Hello23$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello23$QueryFromJson(json);

  List<Hello23$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello23$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello24$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello24$Query$Launch$LaunchSite();

  factory Hello24$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello24$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello24$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello24$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello24$Query$Launch$LaunchLinks();

  factory Hello24$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello24$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello24$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello24$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello24$Query$Launch$LaunchRocket();

  factory Hello24$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello24$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello24$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello24$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello24$Query$Launch();

  factory Hello24$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello24$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello24$Query$Launch$LaunchSite? launchSite;

  Hello24$Query$Launch$LaunchLinks? links;

  Hello24$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello24$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello24$Query extends JsonSerializable with EquatableMixin {
  Hello24$Query();

  factory Hello24$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello24$QueryFromJson(json);

  List<Hello24$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello24$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello25$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello25$Query$Launch$LaunchSite();

  factory Hello25$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello25$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello25$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello25$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello25$Query$Launch$LaunchLinks();

  factory Hello25$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello25$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello25$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello25$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello25$Query$Launch$LaunchRocket();

  factory Hello25$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello25$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello25$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello25$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello25$Query$Launch();

  factory Hello25$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello25$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello25$Query$Launch$LaunchSite? launchSite;

  Hello25$Query$Launch$LaunchLinks? links;

  Hello25$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello25$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello25$Query extends JsonSerializable with EquatableMixin {
  Hello25$Query();

  factory Hello25$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello25$QueryFromJson(json);

  List<Hello25$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello25$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello26$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello26$Query$Launch$LaunchSite();

  factory Hello26$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello26$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello26$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello26$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello26$Query$Launch$LaunchLinks();

  factory Hello26$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello26$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello26$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello26$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello26$Query$Launch$LaunchRocket();

  factory Hello26$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello26$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello26$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello26$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello26$Query$Launch();

  factory Hello26$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello26$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello26$Query$Launch$LaunchSite? launchSite;

  Hello26$Query$Launch$LaunchLinks? links;

  Hello26$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello26$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello26$Query extends JsonSerializable with EquatableMixin {
  Hello26$Query();

  factory Hello26$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello26$QueryFromJson(json);

  List<Hello26$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello26$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello27$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello27$Query$Launch$LaunchSite();

  factory Hello27$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello27$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello27$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello27$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello27$Query$Launch$LaunchLinks();

  factory Hello27$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello27$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello27$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello27$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello27$Query$Launch$LaunchRocket();

  factory Hello27$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello27$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello27$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello27$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello27$Query$Launch();

  factory Hello27$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello27$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello27$Query$Launch$LaunchSite? launchSite;

  Hello27$Query$Launch$LaunchLinks? links;

  Hello27$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello27$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello27$Query extends JsonSerializable with EquatableMixin {
  Hello27$Query();

  factory Hello27$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello27$QueryFromJson(json);

  List<Hello27$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello27$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello28$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello28$Query$Launch$LaunchSite();

  factory Hello28$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello28$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello28$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello28$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello28$Query$Launch$LaunchLinks();

  factory Hello28$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello28$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello28$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello28$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello28$Query$Launch$LaunchRocket();

  factory Hello28$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello28$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello28$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello28$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello28$Query$Launch();

  factory Hello28$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello28$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello28$Query$Launch$LaunchSite? launchSite;

  Hello28$Query$Launch$LaunchLinks? links;

  Hello28$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello28$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello28$Query extends JsonSerializable with EquatableMixin {
  Hello28$Query();

  factory Hello28$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello28$QueryFromJson(json);

  List<Hello28$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello28$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello29$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello29$Query$Launch$LaunchSite();

  factory Hello29$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello29$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello29$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello29$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello29$Query$Launch$LaunchLinks();

  factory Hello29$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello29$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello29$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello29$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello29$Query$Launch$LaunchRocket();

  factory Hello29$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello29$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello29$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello29$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello29$Query$Launch();

  factory Hello29$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello29$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello29$Query$Launch$LaunchSite? launchSite;

  Hello29$Query$Launch$LaunchLinks? links;

  Hello29$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello29$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello29$Query extends JsonSerializable with EquatableMixin {
  Hello29$Query();

  factory Hello29$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello29$QueryFromJson(json);

  List<Hello29$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello29$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello30$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello30$Query$Launch$LaunchSite();

  factory Hello30$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello30$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello30$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello30$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello30$Query$Launch$LaunchLinks();

  factory Hello30$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello30$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello30$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello30$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello30$Query$Launch$LaunchRocket();

  factory Hello30$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello30$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello30$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello30$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello30$Query$Launch();

  factory Hello30$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello30$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello30$Query$Launch$LaunchSite? launchSite;

  Hello30$Query$Launch$LaunchLinks? links;

  Hello30$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello30$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello30$Query extends JsonSerializable with EquatableMixin {
  Hello30$Query();

  factory Hello30$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello30$QueryFromJson(json);

  List<Hello30$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello30$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello31$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello31$Query$Launch$LaunchSite();

  factory Hello31$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello31$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello31$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello31$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello31$Query$Launch$LaunchLinks();

  factory Hello31$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello31$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello31$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello31$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello31$Query$Launch$LaunchRocket();

  factory Hello31$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello31$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello31$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello31$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello31$Query$Launch();

  factory Hello31$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello31$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello31$Query$Launch$LaunchSite? launchSite;

  Hello31$Query$Launch$LaunchLinks? links;

  Hello31$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello31$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello31$Query extends JsonSerializable with EquatableMixin {
  Hello31$Query();

  factory Hello31$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello31$QueryFromJson(json);

  List<Hello31$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello31$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello32$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello32$Query$Launch$LaunchSite();

  factory Hello32$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello32$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello32$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello32$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello32$Query$Launch$LaunchLinks();

  factory Hello32$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello32$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello32$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello32$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello32$Query$Launch$LaunchRocket();

  factory Hello32$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello32$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello32$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello32$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello32$Query$Launch();

  factory Hello32$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello32$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello32$Query$Launch$LaunchSite? launchSite;

  Hello32$Query$Launch$LaunchLinks? links;

  Hello32$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello32$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello32$Query extends JsonSerializable with EquatableMixin {
  Hello32$Query();

  factory Hello32$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello32$QueryFromJson(json);

  List<Hello32$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello32$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello33$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello33$Query$Launch$LaunchSite();

  factory Hello33$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello33$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello33$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello33$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello33$Query$Launch$LaunchLinks();

  factory Hello33$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello33$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello33$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello33$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello33$Query$Launch$LaunchRocket();

  factory Hello33$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello33$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello33$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello33$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello33$Query$Launch();

  factory Hello33$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello33$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello33$Query$Launch$LaunchSite? launchSite;

  Hello33$Query$Launch$LaunchLinks? links;

  Hello33$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello33$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello33$Query extends JsonSerializable with EquatableMixin {
  Hello33$Query();

  factory Hello33$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello33$QueryFromJson(json);

  List<Hello33$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello33$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello34$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello34$Query$Launch$LaunchSite();

  factory Hello34$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello34$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello34$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello34$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello34$Query$Launch$LaunchLinks();

  factory Hello34$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello34$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello34$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello34$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello34$Query$Launch$LaunchRocket();

  factory Hello34$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello34$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello34$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello34$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello34$Query$Launch();

  factory Hello34$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello34$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello34$Query$Launch$LaunchSite? launchSite;

  Hello34$Query$Launch$LaunchLinks? links;

  Hello34$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello34$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello34$Query extends JsonSerializable with EquatableMixin {
  Hello34$Query();

  factory Hello34$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello34$QueryFromJson(json);

  List<Hello34$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello34$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello35$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello35$Query$Launch$LaunchSite();

  factory Hello35$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello35$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello35$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello35$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello35$Query$Launch$LaunchLinks();

  factory Hello35$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello35$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello35$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello35$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello35$Query$Launch$LaunchRocket();

  factory Hello35$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello35$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello35$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello35$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello35$Query$Launch();

  factory Hello35$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello35$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello35$Query$Launch$LaunchSite? launchSite;

  Hello35$Query$Launch$LaunchLinks? links;

  Hello35$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello35$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello35$Query extends JsonSerializable with EquatableMixin {
  Hello35$Query();

  factory Hello35$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello35$QueryFromJson(json);

  List<Hello35$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello35$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello36$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello36$Query$Launch$LaunchSite();

  factory Hello36$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello36$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello36$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello36$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello36$Query$Launch$LaunchLinks();

  factory Hello36$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello36$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello36$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello36$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello36$Query$Launch$LaunchRocket();

  factory Hello36$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello36$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello36$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello36$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello36$Query$Launch();

  factory Hello36$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello36$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello36$Query$Launch$LaunchSite? launchSite;

  Hello36$Query$Launch$LaunchLinks? links;

  Hello36$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello36$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello36$Query extends JsonSerializable with EquatableMixin {
  Hello36$Query();

  factory Hello36$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello36$QueryFromJson(json);

  List<Hello36$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello36$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello37$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello37$Query$Launch$LaunchSite();

  factory Hello37$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello37$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello37$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello37$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello37$Query$Launch$LaunchLinks();

  factory Hello37$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello37$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello37$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello37$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello37$Query$Launch$LaunchRocket();

  factory Hello37$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello37$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello37$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello37$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello37$Query$Launch();

  factory Hello37$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello37$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello37$Query$Launch$LaunchSite? launchSite;

  Hello37$Query$Launch$LaunchLinks? links;

  Hello37$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello37$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello37$Query extends JsonSerializable with EquatableMixin {
  Hello37$Query();

  factory Hello37$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello37$QueryFromJson(json);

  List<Hello37$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello37$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello38$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello38$Query$Launch$LaunchSite();

  factory Hello38$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello38$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello38$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello38$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello38$Query$Launch$LaunchLinks();

  factory Hello38$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello38$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello38$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello38$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello38$Query$Launch$LaunchRocket();

  factory Hello38$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello38$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello38$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello38$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello38$Query$Launch();

  factory Hello38$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello38$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello38$Query$Launch$LaunchSite? launchSite;

  Hello38$Query$Launch$LaunchLinks? links;

  Hello38$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello38$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello38$Query extends JsonSerializable with EquatableMixin {
  Hello38$Query();

  factory Hello38$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello38$QueryFromJson(json);

  List<Hello38$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello38$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello39$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello39$Query$Launch$LaunchSite();

  factory Hello39$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello39$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello39$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello39$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello39$Query$Launch$LaunchLinks();

  factory Hello39$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello39$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello39$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello39$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello39$Query$Launch$LaunchRocket();

  factory Hello39$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello39$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello39$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello39$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello39$Query$Launch();

  factory Hello39$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello39$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello39$Query$Launch$LaunchSite? launchSite;

  Hello39$Query$Launch$LaunchLinks? links;

  Hello39$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello39$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello39$Query extends JsonSerializable with EquatableMixin {
  Hello39$Query();

  factory Hello39$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello39$QueryFromJson(json);

  List<Hello39$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello39$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello40$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello40$Query$Launch$LaunchSite();

  factory Hello40$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello40$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello40$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello40$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello40$Query$Launch$LaunchLinks();

  factory Hello40$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello40$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello40$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello40$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello40$Query$Launch$LaunchRocket();

  factory Hello40$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello40$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello40$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello40$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello40$Query$Launch();

  factory Hello40$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello40$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello40$Query$Launch$LaunchSite? launchSite;

  Hello40$Query$Launch$LaunchLinks? links;

  Hello40$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello40$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello40$Query extends JsonSerializable with EquatableMixin {
  Hello40$Query();

  factory Hello40$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello40$QueryFromJson(json);

  List<Hello40$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello40$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello41$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello41$Query$Launch$LaunchSite();

  factory Hello41$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello41$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello41$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello41$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello41$Query$Launch$LaunchLinks();

  factory Hello41$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello41$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello41$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello41$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello41$Query$Launch$LaunchRocket();

  factory Hello41$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello41$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello41$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello41$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello41$Query$Launch();

  factory Hello41$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello41$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello41$Query$Launch$LaunchSite? launchSite;

  Hello41$Query$Launch$LaunchLinks? links;

  Hello41$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello41$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello41$Query extends JsonSerializable with EquatableMixin {
  Hello41$Query();

  factory Hello41$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello41$QueryFromJson(json);

  List<Hello41$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello41$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello42$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello42$Query$Launch$LaunchSite();

  factory Hello42$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello42$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello42$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello42$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello42$Query$Launch$LaunchLinks();

  factory Hello42$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello42$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello42$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello42$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello42$Query$Launch$LaunchRocket();

  factory Hello42$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello42$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello42$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello42$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello42$Query$Launch();

  factory Hello42$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello42$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello42$Query$Launch$LaunchSite? launchSite;

  Hello42$Query$Launch$LaunchLinks? links;

  Hello42$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello42$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello42$Query extends JsonSerializable with EquatableMixin {
  Hello42$Query();

  factory Hello42$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello42$QueryFromJson(json);

  List<Hello42$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello42$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello43$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello43$Query$Launch$LaunchSite();

  factory Hello43$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello43$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello43$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello43$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello43$Query$Launch$LaunchLinks();

  factory Hello43$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello43$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello43$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello43$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello43$Query$Launch$LaunchRocket();

  factory Hello43$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello43$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello43$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello43$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello43$Query$Launch();

  factory Hello43$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello43$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello43$Query$Launch$LaunchSite? launchSite;

  Hello43$Query$Launch$LaunchLinks? links;

  Hello43$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello43$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello43$Query extends JsonSerializable with EquatableMixin {
  Hello43$Query();

  factory Hello43$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello43$QueryFromJson(json);

  List<Hello43$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello43$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello44$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello44$Query$Launch$LaunchSite();

  factory Hello44$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello44$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello44$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello44$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello44$Query$Launch$LaunchLinks();

  factory Hello44$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello44$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello44$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello44$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello44$Query$Launch$LaunchRocket();

  factory Hello44$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello44$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello44$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello44$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello44$Query$Launch();

  factory Hello44$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello44$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello44$Query$Launch$LaunchSite? launchSite;

  Hello44$Query$Launch$LaunchLinks? links;

  Hello44$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello44$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello44$Query extends JsonSerializable with EquatableMixin {
  Hello44$Query();

  factory Hello44$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello44$QueryFromJson(json);

  List<Hello44$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello44$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello45$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello45$Query$Launch$LaunchSite();

  factory Hello45$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello45$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello45$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello45$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello45$Query$Launch$LaunchLinks();

  factory Hello45$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello45$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello45$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello45$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello45$Query$Launch$LaunchRocket();

  factory Hello45$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello45$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello45$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello45$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello45$Query$Launch();

  factory Hello45$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello45$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello45$Query$Launch$LaunchSite? launchSite;

  Hello45$Query$Launch$LaunchLinks? links;

  Hello45$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello45$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello45$Query extends JsonSerializable with EquatableMixin {
  Hello45$Query();

  factory Hello45$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello45$QueryFromJson(json);

  List<Hello45$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello45$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello46$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello46$Query$Launch$LaunchSite();

  factory Hello46$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello46$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello46$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello46$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello46$Query$Launch$LaunchLinks();

  factory Hello46$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello46$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello46$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello46$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello46$Query$Launch$LaunchRocket();

  factory Hello46$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello46$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello46$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello46$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello46$Query$Launch();

  factory Hello46$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello46$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello46$Query$Launch$LaunchSite? launchSite;

  Hello46$Query$Launch$LaunchLinks? links;

  Hello46$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello46$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello46$Query extends JsonSerializable with EquatableMixin {
  Hello46$Query();

  factory Hello46$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello46$QueryFromJson(json);

  List<Hello46$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello46$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello47$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello47$Query$Launch$LaunchSite();

  factory Hello47$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello47$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello47$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello47$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello47$Query$Launch$LaunchLinks();

  factory Hello47$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello47$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello47$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello47$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello47$Query$Launch$LaunchRocket();

  factory Hello47$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello47$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello47$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello47$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello47$Query$Launch();

  factory Hello47$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello47$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello47$Query$Launch$LaunchSite? launchSite;

  Hello47$Query$Launch$LaunchLinks? links;

  Hello47$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello47$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello47$Query extends JsonSerializable with EquatableMixin {
  Hello47$Query();

  factory Hello47$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello47$QueryFromJson(json);

  List<Hello47$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello47$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello48$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello48$Query$Launch$LaunchSite();

  factory Hello48$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello48$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello48$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello48$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello48$Query$Launch$LaunchLinks();

  factory Hello48$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello48$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello48$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello48$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello48$Query$Launch$LaunchRocket();

  factory Hello48$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello48$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello48$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello48$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello48$Query$Launch();

  factory Hello48$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello48$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello48$Query$Launch$LaunchSite? launchSite;

  Hello48$Query$Launch$LaunchLinks? links;

  Hello48$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello48$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello48$Query extends JsonSerializable with EquatableMixin {
  Hello48$Query();

  factory Hello48$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello48$QueryFromJson(json);

  List<Hello48$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello48$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello49$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello49$Query$Launch$LaunchSite();

  factory Hello49$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello49$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello49$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello49$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello49$Query$Launch$LaunchLinks();

  factory Hello49$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello49$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello49$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello49$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello49$Query$Launch$LaunchRocket();

  factory Hello49$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello49$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello49$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello49$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello49$Query$Launch();

  factory Hello49$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello49$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello49$Query$Launch$LaunchSite? launchSite;

  Hello49$Query$Launch$LaunchLinks? links;

  Hello49$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello49$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello49$Query extends JsonSerializable with EquatableMixin {
  Hello49$Query();

  factory Hello49$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello49$QueryFromJson(json);

  List<Hello49$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello49$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello50$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello50$Query$Launch$LaunchSite();

  factory Hello50$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello50$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello50$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello50$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello50$Query$Launch$LaunchLinks();

  factory Hello50$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello50$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello50$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello50$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello50$Query$Launch$LaunchRocket();

  factory Hello50$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello50$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello50$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello50$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello50$Query$Launch();

  factory Hello50$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello50$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello50$Query$Launch$LaunchSite? launchSite;

  Hello50$Query$Launch$LaunchLinks? links;

  Hello50$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello50$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello50$Query extends JsonSerializable with EquatableMixin {
  Hello50$Query();

  factory Hello50$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello50$QueryFromJson(json);

  List<Hello50$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello50$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello51$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello51$Query$Launch$LaunchSite();

  factory Hello51$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello51$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello51$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello51$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello51$Query$Launch$LaunchLinks();

  factory Hello51$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello51$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello51$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello51$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello51$Query$Launch$LaunchRocket();

  factory Hello51$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello51$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello51$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello51$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello51$Query$Launch();

  factory Hello51$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello51$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello51$Query$Launch$LaunchSite? launchSite;

  Hello51$Query$Launch$LaunchLinks? links;

  Hello51$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello51$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello51$Query extends JsonSerializable with EquatableMixin {
  Hello51$Query();

  factory Hello51$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello51$QueryFromJson(json);

  List<Hello51$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello51$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello52$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello52$Query$Launch$LaunchSite();

  factory Hello52$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello52$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello52$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello52$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello52$Query$Launch$LaunchLinks();

  factory Hello52$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello52$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello52$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello52$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello52$Query$Launch$LaunchRocket();

  factory Hello52$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello52$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello52$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello52$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello52$Query$Launch();

  factory Hello52$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello52$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello52$Query$Launch$LaunchSite? launchSite;

  Hello52$Query$Launch$LaunchLinks? links;

  Hello52$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello52$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello52$Query extends JsonSerializable with EquatableMixin {
  Hello52$Query();

  factory Hello52$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello52$QueryFromJson(json);

  List<Hello52$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello52$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello53$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello53$Query$Launch$LaunchSite();

  factory Hello53$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello53$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello53$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello53$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello53$Query$Launch$LaunchLinks();

  factory Hello53$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello53$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello53$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello53$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello53$Query$Launch$LaunchRocket();

  factory Hello53$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello53$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello53$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello53$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello53$Query$Launch();

  factory Hello53$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello53$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello53$Query$Launch$LaunchSite? launchSite;

  Hello53$Query$Launch$LaunchLinks? links;

  Hello53$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello53$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello53$Query extends JsonSerializable with EquatableMixin {
  Hello53$Query();

  factory Hello53$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello53$QueryFromJson(json);

  List<Hello53$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello53$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello54$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello54$Query$Launch$LaunchSite();

  factory Hello54$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello54$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello54$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello54$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello54$Query$Launch$LaunchLinks();

  factory Hello54$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello54$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello54$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello54$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello54$Query$Launch$LaunchRocket();

  factory Hello54$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello54$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello54$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello54$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello54$Query$Launch();

  factory Hello54$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello54$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello54$Query$Launch$LaunchSite? launchSite;

  Hello54$Query$Launch$LaunchLinks? links;

  Hello54$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello54$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello54$Query extends JsonSerializable with EquatableMixin {
  Hello54$Query();

  factory Hello54$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello54$QueryFromJson(json);

  List<Hello54$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello54$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello55$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello55$Query$Launch$LaunchSite();

  factory Hello55$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello55$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello55$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello55$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello55$Query$Launch$LaunchLinks();

  factory Hello55$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello55$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello55$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello55$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello55$Query$Launch$LaunchRocket();

  factory Hello55$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello55$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello55$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello55$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello55$Query$Launch();

  factory Hello55$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello55$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello55$Query$Launch$LaunchSite? launchSite;

  Hello55$Query$Launch$LaunchLinks? links;

  Hello55$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello55$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello55$Query extends JsonSerializable with EquatableMixin {
  Hello55$Query();

  factory Hello55$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello55$QueryFromJson(json);

  List<Hello55$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello55$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello56$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello56$Query$Launch$LaunchSite();

  factory Hello56$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello56$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello56$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello56$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello56$Query$Launch$LaunchLinks();

  factory Hello56$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello56$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello56$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello56$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello56$Query$Launch$LaunchRocket();

  factory Hello56$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello56$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello56$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello56$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello56$Query$Launch();

  factory Hello56$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello56$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello56$Query$Launch$LaunchSite? launchSite;

  Hello56$Query$Launch$LaunchLinks? links;

  Hello56$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello56$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello56$Query extends JsonSerializable with EquatableMixin {
  Hello56$Query();

  factory Hello56$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello56$QueryFromJson(json);

  List<Hello56$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello56$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello57$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello57$Query$Launch$LaunchSite();

  factory Hello57$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello57$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello57$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello57$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello57$Query$Launch$LaunchLinks();

  factory Hello57$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello57$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello57$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello57$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello57$Query$Launch$LaunchRocket();

  factory Hello57$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello57$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello57$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello57$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello57$Query$Launch();

  factory Hello57$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello57$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello57$Query$Launch$LaunchSite? launchSite;

  Hello57$Query$Launch$LaunchLinks? links;

  Hello57$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello57$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello57$Query extends JsonSerializable with EquatableMixin {
  Hello57$Query();

  factory Hello57$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello57$QueryFromJson(json);

  List<Hello57$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello57$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello58$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello58$Query$Launch$LaunchSite();

  factory Hello58$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello58$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello58$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello58$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello58$Query$Launch$LaunchLinks();

  factory Hello58$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello58$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello58$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello58$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello58$Query$Launch$LaunchRocket();

  factory Hello58$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello58$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello58$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello58$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello58$Query$Launch();

  factory Hello58$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello58$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello58$Query$Launch$LaunchSite? launchSite;

  Hello58$Query$Launch$LaunchLinks? links;

  Hello58$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello58$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello58$Query extends JsonSerializable with EquatableMixin {
  Hello58$Query();

  factory Hello58$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello58$QueryFromJson(json);

  List<Hello58$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello58$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello59$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello59$Query$Launch$LaunchSite();

  factory Hello59$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello59$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello59$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello59$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello59$Query$Launch$LaunchLinks();

  factory Hello59$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello59$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello59$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello59$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello59$Query$Launch$LaunchRocket();

  factory Hello59$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello59$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello59$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello59$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello59$Query$Launch();

  factory Hello59$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello59$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello59$Query$Launch$LaunchSite? launchSite;

  Hello59$Query$Launch$LaunchLinks? links;

  Hello59$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello59$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello59$Query extends JsonSerializable with EquatableMixin {
  Hello59$Query();

  factory Hello59$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello59$QueryFromJson(json);

  List<Hello59$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello59$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello60$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello60$Query$Launch$LaunchSite();

  factory Hello60$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello60$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello60$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello60$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello60$Query$Launch$LaunchLinks();

  factory Hello60$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello60$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello60$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello60$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello60$Query$Launch$LaunchRocket();

  factory Hello60$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello60$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello60$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello60$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello60$Query$Launch();

  factory Hello60$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello60$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello60$Query$Launch$LaunchSite? launchSite;

  Hello60$Query$Launch$LaunchLinks? links;

  Hello60$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello60$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello60$Query extends JsonSerializable with EquatableMixin {
  Hello60$Query();

  factory Hello60$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello60$QueryFromJson(json);

  List<Hello60$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello60$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello61$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello61$Query$Launch$LaunchSite();

  factory Hello61$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello61$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello61$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello61$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello61$Query$Launch$LaunchLinks();

  factory Hello61$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello61$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello61$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello61$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello61$Query$Launch$LaunchRocket();

  factory Hello61$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello61$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello61$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello61$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello61$Query$Launch();

  factory Hello61$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello61$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello61$Query$Launch$LaunchSite? launchSite;

  Hello61$Query$Launch$LaunchLinks? links;

  Hello61$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello61$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello61$Query extends JsonSerializable with EquatableMixin {
  Hello61$Query();

  factory Hello61$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello61$QueryFromJson(json);

  List<Hello61$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello61$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello62$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello62$Query$Launch$LaunchSite();

  factory Hello62$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello62$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello62$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello62$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello62$Query$Launch$LaunchLinks();

  factory Hello62$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello62$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello62$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello62$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello62$Query$Launch$LaunchRocket();

  factory Hello62$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello62$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello62$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello62$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello62$Query$Launch();

  factory Hello62$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello62$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello62$Query$Launch$LaunchSite? launchSite;

  Hello62$Query$Launch$LaunchLinks? links;

  Hello62$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello62$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello62$Query extends JsonSerializable with EquatableMixin {
  Hello62$Query();

  factory Hello62$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello62$QueryFromJson(json);

  List<Hello62$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello62$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello63$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello63$Query$Launch$LaunchSite();

  factory Hello63$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello63$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello63$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello63$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello63$Query$Launch$LaunchLinks();

  factory Hello63$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello63$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello63$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello63$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello63$Query$Launch$LaunchRocket();

  factory Hello63$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello63$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello63$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello63$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello63$Query$Launch();

  factory Hello63$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello63$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello63$Query$Launch$LaunchSite? launchSite;

  Hello63$Query$Launch$LaunchLinks? links;

  Hello63$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello63$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello63$Query extends JsonSerializable with EquatableMixin {
  Hello63$Query();

  factory Hello63$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello63$QueryFromJson(json);

  List<Hello63$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello63$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello64$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello64$Query$Launch$LaunchSite();

  factory Hello64$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello64$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello64$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello64$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello64$Query$Launch$LaunchLinks();

  factory Hello64$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello64$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello64$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello64$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello64$Query$Launch$LaunchRocket();

  factory Hello64$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello64$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello64$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello64$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello64$Query$Launch();

  factory Hello64$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello64$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello64$Query$Launch$LaunchSite? launchSite;

  Hello64$Query$Launch$LaunchLinks? links;

  Hello64$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello64$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello64$Query extends JsonSerializable with EquatableMixin {
  Hello64$Query();

  factory Hello64$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello64$QueryFromJson(json);

  List<Hello64$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello64$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello65$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello65$Query$Launch$LaunchSite();

  factory Hello65$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello65$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello65$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello65$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello65$Query$Launch$LaunchLinks();

  factory Hello65$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello65$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello65$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello65$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello65$Query$Launch$LaunchRocket();

  factory Hello65$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello65$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello65$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello65$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello65$Query$Launch();

  factory Hello65$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello65$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello65$Query$Launch$LaunchSite? launchSite;

  Hello65$Query$Launch$LaunchLinks? links;

  Hello65$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello65$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello65$Query extends JsonSerializable with EquatableMixin {
  Hello65$Query();

  factory Hello65$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello65$QueryFromJson(json);

  List<Hello65$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello65$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello66$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello66$Query$Launch$LaunchSite();

  factory Hello66$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello66$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello66$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello66$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello66$Query$Launch$LaunchLinks();

  factory Hello66$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello66$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello66$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello66$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello66$Query$Launch$LaunchRocket();

  factory Hello66$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello66$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello66$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello66$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello66$Query$Launch();

  factory Hello66$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello66$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello66$Query$Launch$LaunchSite? launchSite;

  Hello66$Query$Launch$LaunchLinks? links;

  Hello66$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello66$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello66$Query extends JsonSerializable with EquatableMixin {
  Hello66$Query();

  factory Hello66$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello66$QueryFromJson(json);

  List<Hello66$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello66$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello67$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello67$Query$Launch$LaunchSite();

  factory Hello67$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello67$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello67$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello67$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello67$Query$Launch$LaunchLinks();

  factory Hello67$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello67$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello67$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello67$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello67$Query$Launch$LaunchRocket();

  factory Hello67$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello67$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello67$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello67$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello67$Query$Launch();

  factory Hello67$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello67$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello67$Query$Launch$LaunchSite? launchSite;

  Hello67$Query$Launch$LaunchLinks? links;

  Hello67$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello67$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello67$Query extends JsonSerializable with EquatableMixin {
  Hello67$Query();

  factory Hello67$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello67$QueryFromJson(json);

  List<Hello67$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello67$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello68$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello68$Query$Launch$LaunchSite();

  factory Hello68$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello68$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello68$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello68$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello68$Query$Launch$LaunchLinks();

  factory Hello68$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello68$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello68$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello68$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello68$Query$Launch$LaunchRocket();

  factory Hello68$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello68$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello68$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello68$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello68$Query$Launch();

  factory Hello68$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello68$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello68$Query$Launch$LaunchSite? launchSite;

  Hello68$Query$Launch$LaunchLinks? links;

  Hello68$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello68$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello68$Query extends JsonSerializable with EquatableMixin {
  Hello68$Query();

  factory Hello68$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello68$QueryFromJson(json);

  List<Hello68$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello68$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello69$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello69$Query$Launch$LaunchSite();

  factory Hello69$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello69$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello69$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello69$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello69$Query$Launch$LaunchLinks();

  factory Hello69$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello69$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello69$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello69$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello69$Query$Launch$LaunchRocket();

  factory Hello69$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello69$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello69$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello69$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello69$Query$Launch();

  factory Hello69$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello69$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello69$Query$Launch$LaunchSite? launchSite;

  Hello69$Query$Launch$LaunchLinks? links;

  Hello69$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello69$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello69$Query extends JsonSerializable with EquatableMixin {
  Hello69$Query();

  factory Hello69$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello69$QueryFromJson(json);

  List<Hello69$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello69$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello70$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello70$Query$Launch$LaunchSite();

  factory Hello70$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello70$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello70$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello70$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello70$Query$Launch$LaunchLinks();

  factory Hello70$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello70$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello70$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello70$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello70$Query$Launch$LaunchRocket();

  factory Hello70$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello70$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello70$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello70$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello70$Query$Launch();

  factory Hello70$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello70$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello70$Query$Launch$LaunchSite? launchSite;

  Hello70$Query$Launch$LaunchLinks? links;

  Hello70$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello70$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello70$Query extends JsonSerializable with EquatableMixin {
  Hello70$Query();

  factory Hello70$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello70$QueryFromJson(json);

  List<Hello70$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello70$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello71$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello71$Query$Launch$LaunchSite();

  factory Hello71$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello71$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello71$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello71$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello71$Query$Launch$LaunchLinks();

  factory Hello71$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello71$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello71$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello71$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello71$Query$Launch$LaunchRocket();

  factory Hello71$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello71$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello71$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello71$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello71$Query$Launch();

  factory Hello71$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello71$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello71$Query$Launch$LaunchSite? launchSite;

  Hello71$Query$Launch$LaunchLinks? links;

  Hello71$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello71$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello71$Query extends JsonSerializable with EquatableMixin {
  Hello71$Query();

  factory Hello71$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello71$QueryFromJson(json);

  List<Hello71$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello71$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello72$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello72$Query$Launch$LaunchSite();

  factory Hello72$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello72$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello72$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello72$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello72$Query$Launch$LaunchLinks();

  factory Hello72$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello72$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello72$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello72$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello72$Query$Launch$LaunchRocket();

  factory Hello72$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello72$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello72$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello72$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello72$Query$Launch();

  factory Hello72$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello72$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello72$Query$Launch$LaunchSite? launchSite;

  Hello72$Query$Launch$LaunchLinks? links;

  Hello72$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello72$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello72$Query extends JsonSerializable with EquatableMixin {
  Hello72$Query();

  factory Hello72$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello72$QueryFromJson(json);

  List<Hello72$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello72$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello73$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello73$Query$Launch$LaunchSite();

  factory Hello73$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello73$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello73$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello73$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello73$Query$Launch$LaunchLinks();

  factory Hello73$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello73$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello73$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello73$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello73$Query$Launch$LaunchRocket();

  factory Hello73$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello73$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello73$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello73$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello73$Query$Launch();

  factory Hello73$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello73$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello73$Query$Launch$LaunchSite? launchSite;

  Hello73$Query$Launch$LaunchLinks? links;

  Hello73$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello73$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello73$Query extends JsonSerializable with EquatableMixin {
  Hello73$Query();

  factory Hello73$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello73$QueryFromJson(json);

  List<Hello73$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello73$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello74$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello74$Query$Launch$LaunchSite();

  factory Hello74$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello74$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello74$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello74$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello74$Query$Launch$LaunchLinks();

  factory Hello74$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello74$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello74$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello74$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello74$Query$Launch$LaunchRocket();

  factory Hello74$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello74$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello74$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello74$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello74$Query$Launch();

  factory Hello74$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello74$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello74$Query$Launch$LaunchSite? launchSite;

  Hello74$Query$Launch$LaunchLinks? links;

  Hello74$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello74$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello74$Query extends JsonSerializable with EquatableMixin {
  Hello74$Query();

  factory Hello74$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello74$QueryFromJson(json);

  List<Hello74$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello74$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello75$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello75$Query$Launch$LaunchSite();

  factory Hello75$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello75$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello75$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello75$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello75$Query$Launch$LaunchLinks();

  factory Hello75$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello75$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello75$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello75$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello75$Query$Launch$LaunchRocket();

  factory Hello75$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello75$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello75$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello75$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello75$Query$Launch();

  factory Hello75$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello75$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello75$Query$Launch$LaunchSite? launchSite;

  Hello75$Query$Launch$LaunchLinks? links;

  Hello75$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello75$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello75$Query extends JsonSerializable with EquatableMixin {
  Hello75$Query();

  factory Hello75$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello75$QueryFromJson(json);

  List<Hello75$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello75$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello76$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello76$Query$Launch$LaunchSite();

  factory Hello76$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello76$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello76$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello76$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello76$Query$Launch$LaunchLinks();

  factory Hello76$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello76$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello76$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello76$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello76$Query$Launch$LaunchRocket();

  factory Hello76$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello76$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello76$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello76$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello76$Query$Launch();

  factory Hello76$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello76$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello76$Query$Launch$LaunchSite? launchSite;

  Hello76$Query$Launch$LaunchLinks? links;

  Hello76$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello76$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello76$Query extends JsonSerializable with EquatableMixin {
  Hello76$Query();

  factory Hello76$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello76$QueryFromJson(json);

  List<Hello76$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello76$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello77$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello77$Query$Launch$LaunchSite();

  factory Hello77$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello77$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello77$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello77$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello77$Query$Launch$LaunchLinks();

  factory Hello77$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello77$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello77$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello77$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello77$Query$Launch$LaunchRocket();

  factory Hello77$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello77$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello77$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello77$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello77$Query$Launch();

  factory Hello77$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello77$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello77$Query$Launch$LaunchSite? launchSite;

  Hello77$Query$Launch$LaunchLinks? links;

  Hello77$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello77$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello77$Query extends JsonSerializable with EquatableMixin {
  Hello77$Query();

  factory Hello77$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello77$QueryFromJson(json);

  List<Hello77$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello77$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello78$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello78$Query$Launch$LaunchSite();

  factory Hello78$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello78$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello78$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello78$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello78$Query$Launch$LaunchLinks();

  factory Hello78$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello78$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello78$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello78$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello78$Query$Launch$LaunchRocket();

  factory Hello78$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello78$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello78$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello78$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello78$Query$Launch();

  factory Hello78$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello78$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello78$Query$Launch$LaunchSite? launchSite;

  Hello78$Query$Launch$LaunchLinks? links;

  Hello78$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello78$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello78$Query extends JsonSerializable with EquatableMixin {
  Hello78$Query();

  factory Hello78$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello78$QueryFromJson(json);

  List<Hello78$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello78$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello79$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello79$Query$Launch$LaunchSite();

  factory Hello79$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello79$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello79$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello79$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello79$Query$Launch$LaunchLinks();

  factory Hello79$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello79$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello79$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello79$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello79$Query$Launch$LaunchRocket();

  factory Hello79$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello79$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello79$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello79$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello79$Query$Launch();

  factory Hello79$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello79$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello79$Query$Launch$LaunchSite? launchSite;

  Hello79$Query$Launch$LaunchLinks? links;

  Hello79$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello79$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello79$Query extends JsonSerializable with EquatableMixin {
  Hello79$Query();

  factory Hello79$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello79$QueryFromJson(json);

  List<Hello79$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello79$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello80$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello80$Query$Launch$LaunchSite();

  factory Hello80$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello80$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello80$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello80$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello80$Query$Launch$LaunchLinks();

  factory Hello80$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello80$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello80$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello80$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello80$Query$Launch$LaunchRocket();

  factory Hello80$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello80$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello80$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello80$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello80$Query$Launch();

  factory Hello80$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello80$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello80$Query$Launch$LaunchSite? launchSite;

  Hello80$Query$Launch$LaunchLinks? links;

  Hello80$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello80$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello80$Query extends JsonSerializable with EquatableMixin {
  Hello80$Query();

  factory Hello80$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello80$QueryFromJson(json);

  List<Hello80$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello80$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello81$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello81$Query$Launch$LaunchSite();

  factory Hello81$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello81$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello81$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello81$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello81$Query$Launch$LaunchLinks();

  factory Hello81$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello81$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello81$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello81$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello81$Query$Launch$LaunchRocket();

  factory Hello81$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello81$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello81$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello81$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello81$Query$Launch();

  factory Hello81$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello81$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello81$Query$Launch$LaunchSite? launchSite;

  Hello81$Query$Launch$LaunchLinks? links;

  Hello81$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello81$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello81$Query extends JsonSerializable with EquatableMixin {
  Hello81$Query();

  factory Hello81$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello81$QueryFromJson(json);

  List<Hello81$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello81$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello82$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello82$Query$Launch$LaunchSite();

  factory Hello82$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello82$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello82$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello82$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello82$Query$Launch$LaunchLinks();

  factory Hello82$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello82$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello82$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello82$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello82$Query$Launch$LaunchRocket();

  factory Hello82$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello82$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello82$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello82$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello82$Query$Launch();

  factory Hello82$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello82$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello82$Query$Launch$LaunchSite? launchSite;

  Hello82$Query$Launch$LaunchLinks? links;

  Hello82$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello82$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello82$Query extends JsonSerializable with EquatableMixin {
  Hello82$Query();

  factory Hello82$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello82$QueryFromJson(json);

  List<Hello82$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello82$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello83$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello83$Query$Launch$LaunchSite();

  factory Hello83$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello83$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello83$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello83$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello83$Query$Launch$LaunchLinks();

  factory Hello83$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello83$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello83$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello83$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello83$Query$Launch$LaunchRocket();

  factory Hello83$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello83$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello83$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello83$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello83$Query$Launch();

  factory Hello83$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello83$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello83$Query$Launch$LaunchSite? launchSite;

  Hello83$Query$Launch$LaunchLinks? links;

  Hello83$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello83$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello83$Query extends JsonSerializable with EquatableMixin {
  Hello83$Query();

  factory Hello83$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello83$QueryFromJson(json);

  List<Hello83$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello83$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello84$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello84$Query$Launch$LaunchSite();

  factory Hello84$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello84$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello84$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello84$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello84$Query$Launch$LaunchLinks();

  factory Hello84$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello84$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello84$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello84$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello84$Query$Launch$LaunchRocket();

  factory Hello84$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello84$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello84$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello84$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello84$Query$Launch();

  factory Hello84$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello84$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello84$Query$Launch$LaunchSite? launchSite;

  Hello84$Query$Launch$LaunchLinks? links;

  Hello84$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello84$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello84$Query extends JsonSerializable with EquatableMixin {
  Hello84$Query();

  factory Hello84$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello84$QueryFromJson(json);

  List<Hello84$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello84$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello85$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello85$Query$Launch$LaunchSite();

  factory Hello85$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello85$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello85$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello85$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello85$Query$Launch$LaunchLinks();

  factory Hello85$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello85$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello85$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello85$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello85$Query$Launch$LaunchRocket();

  factory Hello85$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello85$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello85$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello85$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello85$Query$Launch();

  factory Hello85$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello85$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello85$Query$Launch$LaunchSite? launchSite;

  Hello85$Query$Launch$LaunchLinks? links;

  Hello85$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello85$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello85$Query extends JsonSerializable with EquatableMixin {
  Hello85$Query();

  factory Hello85$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello85$QueryFromJson(json);

  List<Hello85$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello85$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello86$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello86$Query$Launch$LaunchSite();

  factory Hello86$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello86$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello86$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello86$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello86$Query$Launch$LaunchLinks();

  factory Hello86$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello86$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello86$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello86$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello86$Query$Launch$LaunchRocket();

  factory Hello86$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello86$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello86$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello86$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello86$Query$Launch();

  factory Hello86$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello86$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello86$Query$Launch$LaunchSite? launchSite;

  Hello86$Query$Launch$LaunchLinks? links;

  Hello86$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello86$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello86$Query extends JsonSerializable with EquatableMixin {
  Hello86$Query();

  factory Hello86$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello86$QueryFromJson(json);

  List<Hello86$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello86$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello87$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello87$Query$Launch$LaunchSite();

  factory Hello87$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello87$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello87$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello87$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello87$Query$Launch$LaunchLinks();

  factory Hello87$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello87$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello87$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello87$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello87$Query$Launch$LaunchRocket();

  factory Hello87$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello87$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello87$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello87$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello87$Query$Launch();

  factory Hello87$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello87$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello87$Query$Launch$LaunchSite? launchSite;

  Hello87$Query$Launch$LaunchLinks? links;

  Hello87$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello87$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello87$Query extends JsonSerializable with EquatableMixin {
  Hello87$Query();

  factory Hello87$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello87$QueryFromJson(json);

  List<Hello87$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello87$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello88$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello88$Query$Launch$LaunchSite();

  factory Hello88$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello88$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello88$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello88$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello88$Query$Launch$LaunchLinks();

  factory Hello88$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello88$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello88$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello88$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello88$Query$Launch$LaunchRocket();

  factory Hello88$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello88$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello88$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello88$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello88$Query$Launch();

  factory Hello88$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello88$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello88$Query$Launch$LaunchSite? launchSite;

  Hello88$Query$Launch$LaunchLinks? links;

  Hello88$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello88$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello88$Query extends JsonSerializable with EquatableMixin {
  Hello88$Query();

  factory Hello88$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello88$QueryFromJson(json);

  List<Hello88$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello88$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello89$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello89$Query$Launch$LaunchSite();

  factory Hello89$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello89$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello89$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello89$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello89$Query$Launch$LaunchLinks();

  factory Hello89$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello89$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello89$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello89$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello89$Query$Launch$LaunchRocket();

  factory Hello89$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello89$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello89$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello89$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello89$Query$Launch();

  factory Hello89$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello89$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello89$Query$Launch$LaunchSite? launchSite;

  Hello89$Query$Launch$LaunchLinks? links;

  Hello89$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello89$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello89$Query extends JsonSerializable with EquatableMixin {
  Hello89$Query();

  factory Hello89$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello89$QueryFromJson(json);

  List<Hello89$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello89$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello90$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello90$Query$Launch$LaunchSite();

  factory Hello90$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello90$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello90$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello90$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello90$Query$Launch$LaunchLinks();

  factory Hello90$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello90$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello90$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello90$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello90$Query$Launch$LaunchRocket();

  factory Hello90$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello90$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello90$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello90$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello90$Query$Launch();

  factory Hello90$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello90$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello90$Query$Launch$LaunchSite? launchSite;

  Hello90$Query$Launch$LaunchLinks? links;

  Hello90$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello90$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello90$Query extends JsonSerializable with EquatableMixin {
  Hello90$Query();

  factory Hello90$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello90$QueryFromJson(json);

  List<Hello90$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello90$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello91$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello91$Query$Launch$LaunchSite();

  factory Hello91$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello91$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello91$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello91$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello91$Query$Launch$LaunchLinks();

  factory Hello91$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello91$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello91$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello91$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello91$Query$Launch$LaunchRocket();

  factory Hello91$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello91$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello91$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello91$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello91$Query$Launch();

  factory Hello91$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello91$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello91$Query$Launch$LaunchSite? launchSite;

  Hello91$Query$Launch$LaunchLinks? links;

  Hello91$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello91$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello91$Query extends JsonSerializable with EquatableMixin {
  Hello91$Query();

  factory Hello91$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello91$QueryFromJson(json);

  List<Hello91$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello91$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello92$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello92$Query$Launch$LaunchSite();

  factory Hello92$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello92$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello92$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello92$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello92$Query$Launch$LaunchLinks();

  factory Hello92$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello92$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello92$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello92$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello92$Query$Launch$LaunchRocket();

  factory Hello92$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello92$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello92$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello92$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello92$Query$Launch();

  factory Hello92$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello92$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello92$Query$Launch$LaunchSite? launchSite;

  Hello92$Query$Launch$LaunchLinks? links;

  Hello92$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello92$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello92$Query extends JsonSerializable with EquatableMixin {
  Hello92$Query();

  factory Hello92$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello92$QueryFromJson(json);

  List<Hello92$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello92$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello93$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello93$Query$Launch$LaunchSite();

  factory Hello93$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello93$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello93$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello93$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello93$Query$Launch$LaunchLinks();

  factory Hello93$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello93$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello93$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello93$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello93$Query$Launch$LaunchRocket();

  factory Hello93$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello93$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello93$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello93$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello93$Query$Launch();

  factory Hello93$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello93$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello93$Query$Launch$LaunchSite? launchSite;

  Hello93$Query$Launch$LaunchLinks? links;

  Hello93$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello93$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello93$Query extends JsonSerializable with EquatableMixin {
  Hello93$Query();

  factory Hello93$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello93$QueryFromJson(json);

  List<Hello93$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello93$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello94$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello94$Query$Launch$LaunchSite();

  factory Hello94$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello94$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello94$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello94$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello94$Query$Launch$LaunchLinks();

  factory Hello94$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello94$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello94$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello94$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello94$Query$Launch$LaunchRocket();

  factory Hello94$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello94$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello94$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello94$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello94$Query$Launch();

  factory Hello94$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello94$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello94$Query$Launch$LaunchSite? launchSite;

  Hello94$Query$Launch$LaunchLinks? links;

  Hello94$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello94$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello94$Query extends JsonSerializable with EquatableMixin {
  Hello94$Query();

  factory Hello94$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello94$QueryFromJson(json);

  List<Hello94$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello94$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello95$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello95$Query$Launch$LaunchSite();

  factory Hello95$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello95$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello95$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello95$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello95$Query$Launch$LaunchLinks();

  factory Hello95$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello95$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello95$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello95$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello95$Query$Launch$LaunchRocket();

  factory Hello95$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello95$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello95$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello95$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello95$Query$Launch();

  factory Hello95$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello95$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello95$Query$Launch$LaunchSite? launchSite;

  Hello95$Query$Launch$LaunchLinks? links;

  Hello95$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello95$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello95$Query extends JsonSerializable with EquatableMixin {
  Hello95$Query();

  factory Hello95$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello95$QueryFromJson(json);

  List<Hello95$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello95$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello96$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello96$Query$Launch$LaunchSite();

  factory Hello96$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello96$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello96$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello96$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello96$Query$Launch$LaunchLinks();

  factory Hello96$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello96$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello96$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello96$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello96$Query$Launch$LaunchRocket();

  factory Hello96$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello96$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello96$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello96$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello96$Query$Launch();

  factory Hello96$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello96$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello96$Query$Launch$LaunchSite? launchSite;

  Hello96$Query$Launch$LaunchLinks? links;

  Hello96$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello96$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello96$Query extends JsonSerializable with EquatableMixin {
  Hello96$Query();

  factory Hello96$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello96$QueryFromJson(json);

  List<Hello96$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello96$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello97$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello97$Query$Launch$LaunchSite();

  factory Hello97$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello97$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello97$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello97$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello97$Query$Launch$LaunchLinks();

  factory Hello97$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello97$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello97$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello97$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello97$Query$Launch$LaunchRocket();

  factory Hello97$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello97$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello97$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello97$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello97$Query$Launch();

  factory Hello97$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello97$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello97$Query$Launch$LaunchSite? launchSite;

  Hello97$Query$Launch$LaunchLinks? links;

  Hello97$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello97$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello97$Query extends JsonSerializable with EquatableMixin {
  Hello97$Query();

  factory Hello97$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello97$QueryFromJson(json);

  List<Hello97$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello97$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello98$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello98$Query$Launch$LaunchSite();

  factory Hello98$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello98$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello98$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello98$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello98$Query$Launch$LaunchLinks();

  factory Hello98$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello98$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello98$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello98$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello98$Query$Launch$LaunchRocket();

  factory Hello98$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello98$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello98$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello98$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello98$Query$Launch();

  factory Hello98$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello98$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello98$Query$Launch$LaunchSite? launchSite;

  Hello98$Query$Launch$LaunchLinks? links;

  Hello98$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello98$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello98$Query extends JsonSerializable with EquatableMixin {
  Hello98$Query();

  factory Hello98$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello98$QueryFromJson(json);

  List<Hello98$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello98$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello99$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello99$Query$Launch$LaunchSite();

  factory Hello99$Query$Launch$LaunchSite.fromJson(Map<String, dynamic> json) =>
      _$Hello99$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello99$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello99$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello99$Query$Launch$LaunchLinks();

  factory Hello99$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello99$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello99$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello99$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello99$Query$Launch$LaunchRocket();

  factory Hello99$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello99$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello99$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello99$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello99$Query$Launch();

  factory Hello99$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello99$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello99$Query$Launch$LaunchSite? launchSite;

  Hello99$Query$Launch$LaunchLinks? links;

  Hello99$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello99$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello99$Query extends JsonSerializable with EquatableMixin {
  Hello99$Query();

  factory Hello99$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello99$QueryFromJson(json);

  List<Hello99$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello99$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello100$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello100$Query$Launch$LaunchSite();

  factory Hello100$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello100$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello100$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello100$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello100$Query$Launch$LaunchLinks();

  factory Hello100$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello100$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello100$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello100$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello100$Query$Launch$LaunchRocket();

  factory Hello100$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello100$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello100$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello100$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello100$Query$Launch();

  factory Hello100$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello100$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello100$Query$Launch$LaunchSite? launchSite;

  Hello100$Query$Launch$LaunchLinks? links;

  Hello100$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello100$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello100$Query extends JsonSerializable with EquatableMixin {
  Hello100$Query();

  factory Hello100$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello100$QueryFromJson(json);

  List<Hello100$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello100$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello101$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello101$Query$Launch$LaunchSite();

  factory Hello101$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello101$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello101$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello101$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello101$Query$Launch$LaunchLinks();

  factory Hello101$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello101$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello101$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello101$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello101$Query$Launch$LaunchRocket();

  factory Hello101$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello101$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello101$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello101$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello101$Query$Launch();

  factory Hello101$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello101$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello101$Query$Launch$LaunchSite? launchSite;

  Hello101$Query$Launch$LaunchLinks? links;

  Hello101$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello101$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello101$Query extends JsonSerializable with EquatableMixin {
  Hello101$Query();

  factory Hello101$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello101$QueryFromJson(json);

  List<Hello101$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello101$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello102$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello102$Query$Launch$LaunchSite();

  factory Hello102$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello102$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello102$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello102$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello102$Query$Launch$LaunchLinks();

  factory Hello102$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello102$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello102$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello102$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello102$Query$Launch$LaunchRocket();

  factory Hello102$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello102$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello102$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello102$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello102$Query$Launch();

  factory Hello102$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello102$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello102$Query$Launch$LaunchSite? launchSite;

  Hello102$Query$Launch$LaunchLinks? links;

  Hello102$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello102$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello102$Query extends JsonSerializable with EquatableMixin {
  Hello102$Query();

  factory Hello102$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello102$QueryFromJson(json);

  List<Hello102$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello102$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello103$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello103$Query$Launch$LaunchSite();

  factory Hello103$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello103$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello103$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello103$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello103$Query$Launch$LaunchLinks();

  factory Hello103$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello103$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello103$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello103$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello103$Query$Launch$LaunchRocket();

  factory Hello103$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello103$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello103$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello103$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello103$Query$Launch();

  factory Hello103$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello103$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello103$Query$Launch$LaunchSite? launchSite;

  Hello103$Query$Launch$LaunchLinks? links;

  Hello103$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello103$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello103$Query extends JsonSerializable with EquatableMixin {
  Hello103$Query();

  factory Hello103$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello103$QueryFromJson(json);

  List<Hello103$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello103$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello104$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello104$Query$Launch$LaunchSite();

  factory Hello104$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello104$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello104$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello104$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello104$Query$Launch$LaunchLinks();

  factory Hello104$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello104$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello104$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello104$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello104$Query$Launch$LaunchRocket();

  factory Hello104$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello104$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello104$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello104$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello104$Query$Launch();

  factory Hello104$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello104$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello104$Query$Launch$LaunchSite? launchSite;

  Hello104$Query$Launch$LaunchLinks? links;

  Hello104$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello104$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello104$Query extends JsonSerializable with EquatableMixin {
  Hello104$Query();

  factory Hello104$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello104$QueryFromJson(json);

  List<Hello104$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello104$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello105$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello105$Query$Launch$LaunchSite();

  factory Hello105$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello105$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello105$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello105$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello105$Query$Launch$LaunchLinks();

  factory Hello105$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello105$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello105$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello105$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello105$Query$Launch$LaunchRocket();

  factory Hello105$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello105$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello105$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello105$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello105$Query$Launch();

  factory Hello105$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello105$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello105$Query$Launch$LaunchSite? launchSite;

  Hello105$Query$Launch$LaunchLinks? links;

  Hello105$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello105$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello105$Query extends JsonSerializable with EquatableMixin {
  Hello105$Query();

  factory Hello105$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello105$QueryFromJson(json);

  List<Hello105$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello105$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello106$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello106$Query$Launch$LaunchSite();

  factory Hello106$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello106$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello106$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello106$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello106$Query$Launch$LaunchLinks();

  factory Hello106$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello106$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello106$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello106$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello106$Query$Launch$LaunchRocket();

  factory Hello106$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello106$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello106$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello106$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello106$Query$Launch();

  factory Hello106$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello106$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello106$Query$Launch$LaunchSite? launchSite;

  Hello106$Query$Launch$LaunchLinks? links;

  Hello106$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello106$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello106$Query extends JsonSerializable with EquatableMixin {
  Hello106$Query();

  factory Hello106$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello106$QueryFromJson(json);

  List<Hello106$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello106$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello107$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello107$Query$Launch$LaunchSite();

  factory Hello107$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello107$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello107$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello107$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello107$Query$Launch$LaunchLinks();

  factory Hello107$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello107$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello107$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello107$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello107$Query$Launch$LaunchRocket();

  factory Hello107$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello107$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello107$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello107$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello107$Query$Launch();

  factory Hello107$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello107$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello107$Query$Launch$LaunchSite? launchSite;

  Hello107$Query$Launch$LaunchLinks? links;

  Hello107$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello107$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello107$Query extends JsonSerializable with EquatableMixin {
  Hello107$Query();

  factory Hello107$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello107$QueryFromJson(json);

  List<Hello107$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello107$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello108$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello108$Query$Launch$LaunchSite();

  factory Hello108$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello108$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello108$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello108$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello108$Query$Launch$LaunchLinks();

  factory Hello108$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello108$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello108$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello108$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello108$Query$Launch$LaunchRocket();

  factory Hello108$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello108$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello108$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello108$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello108$Query$Launch();

  factory Hello108$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello108$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello108$Query$Launch$LaunchSite? launchSite;

  Hello108$Query$Launch$LaunchLinks? links;

  Hello108$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello108$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello108$Query extends JsonSerializable with EquatableMixin {
  Hello108$Query();

  factory Hello108$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello108$QueryFromJson(json);

  List<Hello108$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello108$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello109$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello109$Query$Launch$LaunchSite();

  factory Hello109$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello109$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello109$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello109$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello109$Query$Launch$LaunchLinks();

  factory Hello109$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello109$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello109$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello109$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello109$Query$Launch$LaunchRocket();

  factory Hello109$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello109$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello109$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello109$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello109$Query$Launch();

  factory Hello109$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello109$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello109$Query$Launch$LaunchSite? launchSite;

  Hello109$Query$Launch$LaunchLinks? links;

  Hello109$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello109$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello109$Query extends JsonSerializable with EquatableMixin {
  Hello109$Query();

  factory Hello109$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello109$QueryFromJson(json);

  List<Hello109$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello109$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello110$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello110$Query$Launch$LaunchSite();

  factory Hello110$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello110$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello110$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello110$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello110$Query$Launch$LaunchLinks();

  factory Hello110$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello110$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello110$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello110$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello110$Query$Launch$LaunchRocket();

  factory Hello110$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello110$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello110$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello110$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello110$Query$Launch();

  factory Hello110$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello110$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello110$Query$Launch$LaunchSite? launchSite;

  Hello110$Query$Launch$LaunchLinks? links;

  Hello110$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello110$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello110$Query extends JsonSerializable with EquatableMixin {
  Hello110$Query();

  factory Hello110$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello110$QueryFromJson(json);

  List<Hello110$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello110$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello111$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello111$Query$Launch$LaunchSite();

  factory Hello111$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello111$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello111$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello111$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello111$Query$Launch$LaunchLinks();

  factory Hello111$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello111$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello111$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello111$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello111$Query$Launch$LaunchRocket();

  factory Hello111$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello111$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello111$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello111$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello111$Query$Launch();

  factory Hello111$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello111$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello111$Query$Launch$LaunchSite? launchSite;

  Hello111$Query$Launch$LaunchLinks? links;

  Hello111$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello111$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello111$Query extends JsonSerializable with EquatableMixin {
  Hello111$Query();

  factory Hello111$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello111$QueryFromJson(json);

  List<Hello111$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello111$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello112$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello112$Query$Launch$LaunchSite();

  factory Hello112$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello112$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello112$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello112$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello112$Query$Launch$LaunchLinks();

  factory Hello112$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello112$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello112$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello112$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello112$Query$Launch$LaunchRocket();

  factory Hello112$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello112$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello112$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello112$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello112$Query$Launch();

  factory Hello112$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello112$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello112$Query$Launch$LaunchSite? launchSite;

  Hello112$Query$Launch$LaunchLinks? links;

  Hello112$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello112$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello112$Query extends JsonSerializable with EquatableMixin {
  Hello112$Query();

  factory Hello112$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello112$QueryFromJson(json);

  List<Hello112$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello112$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello113$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello113$Query$Launch$LaunchSite();

  factory Hello113$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello113$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello113$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello113$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello113$Query$Launch$LaunchLinks();

  factory Hello113$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello113$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello113$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello113$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello113$Query$Launch$LaunchRocket();

  factory Hello113$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello113$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello113$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello113$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello113$Query$Launch();

  factory Hello113$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello113$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello113$Query$Launch$LaunchSite? launchSite;

  Hello113$Query$Launch$LaunchLinks? links;

  Hello113$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello113$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello113$Query extends JsonSerializable with EquatableMixin {
  Hello113$Query();

  factory Hello113$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello113$QueryFromJson(json);

  List<Hello113$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello113$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello114$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello114$Query$Launch$LaunchSite();

  factory Hello114$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello114$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello114$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello114$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello114$Query$Launch$LaunchLinks();

  factory Hello114$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello114$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello114$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello114$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello114$Query$Launch$LaunchRocket();

  factory Hello114$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello114$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello114$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello114$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello114$Query$Launch();

  factory Hello114$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello114$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello114$Query$Launch$LaunchSite? launchSite;

  Hello114$Query$Launch$LaunchLinks? links;

  Hello114$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello114$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello114$Query extends JsonSerializable with EquatableMixin {
  Hello114$Query();

  factory Hello114$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello114$QueryFromJson(json);

  List<Hello114$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello114$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello115$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello115$Query$Launch$LaunchSite();

  factory Hello115$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello115$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello115$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello115$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello115$Query$Launch$LaunchLinks();

  factory Hello115$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello115$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello115$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello115$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello115$Query$Launch$LaunchRocket();

  factory Hello115$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello115$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello115$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello115$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello115$Query$Launch();

  factory Hello115$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello115$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello115$Query$Launch$LaunchSite? launchSite;

  Hello115$Query$Launch$LaunchLinks? links;

  Hello115$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello115$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello115$Query extends JsonSerializable with EquatableMixin {
  Hello115$Query();

  factory Hello115$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello115$QueryFromJson(json);

  List<Hello115$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello115$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello116$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello116$Query$Launch$LaunchSite();

  factory Hello116$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello116$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello116$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello116$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello116$Query$Launch$LaunchLinks();

  factory Hello116$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello116$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello116$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello116$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello116$Query$Launch$LaunchRocket();

  factory Hello116$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello116$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello116$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello116$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello116$Query$Launch();

  factory Hello116$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello116$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello116$Query$Launch$LaunchSite? launchSite;

  Hello116$Query$Launch$LaunchLinks? links;

  Hello116$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello116$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello116$Query extends JsonSerializable with EquatableMixin {
  Hello116$Query();

  factory Hello116$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello116$QueryFromJson(json);

  List<Hello116$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello116$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello117$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello117$Query$Launch$LaunchSite();

  factory Hello117$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello117$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello117$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello117$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello117$Query$Launch$LaunchLinks();

  factory Hello117$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello117$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello117$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello117$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello117$Query$Launch$LaunchRocket();

  factory Hello117$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello117$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello117$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello117$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello117$Query$Launch();

  factory Hello117$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello117$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello117$Query$Launch$LaunchSite? launchSite;

  Hello117$Query$Launch$LaunchLinks? links;

  Hello117$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello117$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello117$Query extends JsonSerializable with EquatableMixin {
  Hello117$Query();

  factory Hello117$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello117$QueryFromJson(json);

  List<Hello117$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello117$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello118$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello118$Query$Launch$LaunchSite();

  factory Hello118$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello118$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello118$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello118$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello118$Query$Launch$LaunchLinks();

  factory Hello118$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello118$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello118$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello118$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello118$Query$Launch$LaunchRocket();

  factory Hello118$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello118$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello118$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello118$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello118$Query$Launch();

  factory Hello118$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello118$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello118$Query$Launch$LaunchSite? launchSite;

  Hello118$Query$Launch$LaunchLinks? links;

  Hello118$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello118$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello118$Query extends JsonSerializable with EquatableMixin {
  Hello118$Query();

  factory Hello118$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello118$QueryFromJson(json);

  List<Hello118$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello118$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello119$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello119$Query$Launch$LaunchSite();

  factory Hello119$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello119$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello119$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello119$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello119$Query$Launch$LaunchLinks();

  factory Hello119$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello119$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello119$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello119$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello119$Query$Launch$LaunchRocket();

  factory Hello119$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello119$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello119$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello119$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello119$Query$Launch();

  factory Hello119$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello119$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello119$Query$Launch$LaunchSite? launchSite;

  Hello119$Query$Launch$LaunchLinks? links;

  Hello119$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello119$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello119$Query extends JsonSerializable with EquatableMixin {
  Hello119$Query();

  factory Hello119$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello119$QueryFromJson(json);

  List<Hello119$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello119$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello120$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello120$Query$Launch$LaunchSite();

  factory Hello120$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello120$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello120$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello120$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello120$Query$Launch$LaunchLinks();

  factory Hello120$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello120$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello120$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello120$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello120$Query$Launch$LaunchRocket();

  factory Hello120$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello120$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello120$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello120$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello120$Query$Launch();

  factory Hello120$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello120$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello120$Query$Launch$LaunchSite? launchSite;

  Hello120$Query$Launch$LaunchLinks? links;

  Hello120$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello120$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello120$Query extends JsonSerializable with EquatableMixin {
  Hello120$Query();

  factory Hello120$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello120$QueryFromJson(json);

  List<Hello120$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello120$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello121$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello121$Query$Launch$LaunchSite();

  factory Hello121$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello121$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello121$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello121$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello121$Query$Launch$LaunchLinks();

  factory Hello121$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello121$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello121$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello121$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello121$Query$Launch$LaunchRocket();

  factory Hello121$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello121$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello121$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello121$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello121$Query$Launch();

  factory Hello121$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello121$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello121$Query$Launch$LaunchSite? launchSite;

  Hello121$Query$Launch$LaunchLinks? links;

  Hello121$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello121$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello121$Query extends JsonSerializable with EquatableMixin {
  Hello121$Query();

  factory Hello121$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello121$QueryFromJson(json);

  List<Hello121$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello121$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello122$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello122$Query$Launch$LaunchSite();

  factory Hello122$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello122$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello122$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello122$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello122$Query$Launch$LaunchLinks();

  factory Hello122$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello122$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello122$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello122$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello122$Query$Launch$LaunchRocket();

  factory Hello122$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello122$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello122$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello122$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello122$Query$Launch();

  factory Hello122$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello122$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello122$Query$Launch$LaunchSite? launchSite;

  Hello122$Query$Launch$LaunchLinks? links;

  Hello122$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello122$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello122$Query extends JsonSerializable with EquatableMixin {
  Hello122$Query();

  factory Hello122$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello122$QueryFromJson(json);

  List<Hello122$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello122$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello123$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello123$Query$Launch$LaunchSite();

  factory Hello123$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello123$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello123$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello123$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello123$Query$Launch$LaunchLinks();

  factory Hello123$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello123$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello123$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello123$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello123$Query$Launch$LaunchRocket();

  factory Hello123$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello123$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello123$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello123$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello123$Query$Launch();

  factory Hello123$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello123$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello123$Query$Launch$LaunchSite? launchSite;

  Hello123$Query$Launch$LaunchLinks? links;

  Hello123$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello123$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello123$Query extends JsonSerializable with EquatableMixin {
  Hello123$Query();

  factory Hello123$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello123$QueryFromJson(json);

  List<Hello123$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello123$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello124$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello124$Query$Launch$LaunchSite();

  factory Hello124$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello124$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello124$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello124$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello124$Query$Launch$LaunchLinks();

  factory Hello124$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello124$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello124$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello124$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello124$Query$Launch$LaunchRocket();

  factory Hello124$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello124$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello124$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello124$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello124$Query$Launch();

  factory Hello124$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello124$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello124$Query$Launch$LaunchSite? launchSite;

  Hello124$Query$Launch$LaunchLinks? links;

  Hello124$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello124$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello124$Query extends JsonSerializable with EquatableMixin {
  Hello124$Query();

  factory Hello124$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello124$QueryFromJson(json);

  List<Hello124$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello124$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello125$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello125$Query$Launch$LaunchSite();

  factory Hello125$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello125$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello125$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello125$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello125$Query$Launch$LaunchLinks();

  factory Hello125$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello125$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello125$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello125$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello125$Query$Launch$LaunchRocket();

  factory Hello125$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello125$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello125$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello125$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello125$Query$Launch();

  factory Hello125$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello125$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello125$Query$Launch$LaunchSite? launchSite;

  Hello125$Query$Launch$LaunchLinks? links;

  Hello125$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello125$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello125$Query extends JsonSerializable with EquatableMixin {
  Hello125$Query();

  factory Hello125$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello125$QueryFromJson(json);

  List<Hello125$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello125$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello126$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello126$Query$Launch$LaunchSite();

  factory Hello126$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello126$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello126$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello126$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello126$Query$Launch$LaunchLinks();

  factory Hello126$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello126$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello126$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello126$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello126$Query$Launch$LaunchRocket();

  factory Hello126$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello126$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello126$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello126$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello126$Query$Launch();

  factory Hello126$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello126$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello126$Query$Launch$LaunchSite? launchSite;

  Hello126$Query$Launch$LaunchLinks? links;

  Hello126$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello126$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello126$Query extends JsonSerializable with EquatableMixin {
  Hello126$Query();

  factory Hello126$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello126$QueryFromJson(json);

  List<Hello126$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello126$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello127$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello127$Query$Launch$LaunchSite();

  factory Hello127$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello127$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello127$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello127$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello127$Query$Launch$LaunchLinks();

  factory Hello127$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello127$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello127$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello127$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello127$Query$Launch$LaunchRocket();

  factory Hello127$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello127$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello127$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello127$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello127$Query$Launch();

  factory Hello127$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello127$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello127$Query$Launch$LaunchSite? launchSite;

  Hello127$Query$Launch$LaunchLinks? links;

  Hello127$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello127$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello127$Query extends JsonSerializable with EquatableMixin {
  Hello127$Query();

  factory Hello127$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello127$QueryFromJson(json);

  List<Hello127$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello127$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello128$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello128$Query$Launch$LaunchSite();

  factory Hello128$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello128$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello128$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello128$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello128$Query$Launch$LaunchLinks();

  factory Hello128$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello128$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello128$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello128$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello128$Query$Launch$LaunchRocket();

  factory Hello128$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello128$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello128$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello128$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello128$Query$Launch();

  factory Hello128$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello128$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello128$Query$Launch$LaunchSite? launchSite;

  Hello128$Query$Launch$LaunchLinks? links;

  Hello128$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello128$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello128$Query extends JsonSerializable with EquatableMixin {
  Hello128$Query();

  factory Hello128$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello128$QueryFromJson(json);

  List<Hello128$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello128$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello129$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello129$Query$Launch$LaunchSite();

  factory Hello129$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello129$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello129$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello129$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello129$Query$Launch$LaunchLinks();

  factory Hello129$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello129$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello129$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello129$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello129$Query$Launch$LaunchRocket();

  factory Hello129$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello129$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello129$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello129$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello129$Query$Launch();

  factory Hello129$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello129$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello129$Query$Launch$LaunchSite? launchSite;

  Hello129$Query$Launch$LaunchLinks? links;

  Hello129$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello129$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello129$Query extends JsonSerializable with EquatableMixin {
  Hello129$Query();

  factory Hello129$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello129$QueryFromJson(json);

  List<Hello129$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello129$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello130$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello130$Query$Launch$LaunchSite();

  factory Hello130$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello130$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello130$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello130$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello130$Query$Launch$LaunchLinks();

  factory Hello130$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello130$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello130$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello130$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello130$Query$Launch$LaunchRocket();

  factory Hello130$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello130$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello130$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello130$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello130$Query$Launch();

  factory Hello130$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello130$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello130$Query$Launch$LaunchSite? launchSite;

  Hello130$Query$Launch$LaunchLinks? links;

  Hello130$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello130$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello130$Query extends JsonSerializable with EquatableMixin {
  Hello130$Query();

  factory Hello130$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello130$QueryFromJson(json);

  List<Hello130$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello130$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello131$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello131$Query$Launch$LaunchSite();

  factory Hello131$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello131$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello131$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello131$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello131$Query$Launch$LaunchLinks();

  factory Hello131$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello131$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello131$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello131$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello131$Query$Launch$LaunchRocket();

  factory Hello131$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello131$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello131$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello131$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello131$Query$Launch();

  factory Hello131$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello131$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello131$Query$Launch$LaunchSite? launchSite;

  Hello131$Query$Launch$LaunchLinks? links;

  Hello131$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello131$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello131$Query extends JsonSerializable with EquatableMixin {
  Hello131$Query();

  factory Hello131$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello131$QueryFromJson(json);

  List<Hello131$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello131$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello132$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello132$Query$Launch$LaunchSite();

  factory Hello132$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello132$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello132$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello132$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello132$Query$Launch$LaunchLinks();

  factory Hello132$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello132$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello132$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello132$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello132$Query$Launch$LaunchRocket();

  factory Hello132$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello132$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello132$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello132$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello132$Query$Launch();

  factory Hello132$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello132$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello132$Query$Launch$LaunchSite? launchSite;

  Hello132$Query$Launch$LaunchLinks? links;

  Hello132$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello132$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello132$Query extends JsonSerializable with EquatableMixin {
  Hello132$Query();

  factory Hello132$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello132$QueryFromJson(json);

  List<Hello132$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello132$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello133$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello133$Query$Launch$LaunchSite();

  factory Hello133$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello133$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello133$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello133$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello133$Query$Launch$LaunchLinks();

  factory Hello133$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello133$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello133$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello133$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello133$Query$Launch$LaunchRocket();

  factory Hello133$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello133$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello133$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello133$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello133$Query$Launch();

  factory Hello133$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello133$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello133$Query$Launch$LaunchSite? launchSite;

  Hello133$Query$Launch$LaunchLinks? links;

  Hello133$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello133$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello133$Query extends JsonSerializable with EquatableMixin {
  Hello133$Query();

  factory Hello133$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello133$QueryFromJson(json);

  List<Hello133$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello133$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello134$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello134$Query$Launch$LaunchSite();

  factory Hello134$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello134$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello134$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello134$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello134$Query$Launch$LaunchLinks();

  factory Hello134$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello134$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello134$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello134$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello134$Query$Launch$LaunchRocket();

  factory Hello134$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello134$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello134$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello134$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello134$Query$Launch();

  factory Hello134$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello134$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello134$Query$Launch$LaunchSite? launchSite;

  Hello134$Query$Launch$LaunchLinks? links;

  Hello134$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello134$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello134$Query extends JsonSerializable with EquatableMixin {
  Hello134$Query();

  factory Hello134$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello134$QueryFromJson(json);

  List<Hello134$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello134$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello135$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello135$Query$Launch$LaunchSite();

  factory Hello135$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello135$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello135$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello135$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello135$Query$Launch$LaunchLinks();

  factory Hello135$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello135$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello135$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello135$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello135$Query$Launch$LaunchRocket();

  factory Hello135$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello135$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello135$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello135$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello135$Query$Launch();

  factory Hello135$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello135$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello135$Query$Launch$LaunchSite? launchSite;

  Hello135$Query$Launch$LaunchLinks? links;

  Hello135$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello135$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello135$Query extends JsonSerializable with EquatableMixin {
  Hello135$Query();

  factory Hello135$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello135$QueryFromJson(json);

  List<Hello135$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello135$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello136$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello136$Query$Launch$LaunchSite();

  factory Hello136$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello136$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello136$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello136$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello136$Query$Launch$LaunchLinks();

  factory Hello136$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello136$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello136$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello136$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello136$Query$Launch$LaunchRocket();

  factory Hello136$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello136$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello136$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello136$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello136$Query$Launch();

  factory Hello136$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello136$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello136$Query$Launch$LaunchSite? launchSite;

  Hello136$Query$Launch$LaunchLinks? links;

  Hello136$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello136$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello136$Query extends JsonSerializable with EquatableMixin {
  Hello136$Query();

  factory Hello136$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello136$QueryFromJson(json);

  List<Hello136$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello136$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello137$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello137$Query$Launch$LaunchSite();

  factory Hello137$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello137$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello137$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello137$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello137$Query$Launch$LaunchLinks();

  factory Hello137$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello137$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello137$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello137$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello137$Query$Launch$LaunchRocket();

  factory Hello137$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello137$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello137$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello137$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello137$Query$Launch();

  factory Hello137$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello137$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello137$Query$Launch$LaunchSite? launchSite;

  Hello137$Query$Launch$LaunchLinks? links;

  Hello137$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello137$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello137$Query extends JsonSerializable with EquatableMixin {
  Hello137$Query();

  factory Hello137$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello137$QueryFromJson(json);

  List<Hello137$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello137$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello138$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello138$Query$Launch$LaunchSite();

  factory Hello138$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello138$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello138$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello138$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello138$Query$Launch$LaunchLinks();

  factory Hello138$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello138$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello138$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello138$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello138$Query$Launch$LaunchRocket();

  factory Hello138$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello138$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello138$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello138$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello138$Query$Launch();

  factory Hello138$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello138$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello138$Query$Launch$LaunchSite? launchSite;

  Hello138$Query$Launch$LaunchLinks? links;

  Hello138$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello138$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello138$Query extends JsonSerializable with EquatableMixin {
  Hello138$Query();

  factory Hello138$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello138$QueryFromJson(json);

  List<Hello138$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello138$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello139$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello139$Query$Launch$LaunchSite();

  factory Hello139$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello139$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello139$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello139$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello139$Query$Launch$LaunchLinks();

  factory Hello139$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello139$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello139$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello139$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello139$Query$Launch$LaunchRocket();

  factory Hello139$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello139$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello139$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello139$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello139$Query$Launch();

  factory Hello139$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello139$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello139$Query$Launch$LaunchSite? launchSite;

  Hello139$Query$Launch$LaunchLinks? links;

  Hello139$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello139$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello139$Query extends JsonSerializable with EquatableMixin {
  Hello139$Query();

  factory Hello139$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello139$QueryFromJson(json);

  List<Hello139$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello139$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello140$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello140$Query$Launch$LaunchSite();

  factory Hello140$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello140$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello140$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello140$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello140$Query$Launch$LaunchLinks();

  factory Hello140$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello140$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello140$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello140$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello140$Query$Launch$LaunchRocket();

  factory Hello140$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello140$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello140$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello140$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello140$Query$Launch();

  factory Hello140$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello140$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello140$Query$Launch$LaunchSite? launchSite;

  Hello140$Query$Launch$LaunchLinks? links;

  Hello140$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello140$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello140$Query extends JsonSerializable with EquatableMixin {
  Hello140$Query();

  factory Hello140$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello140$QueryFromJson(json);

  List<Hello140$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello140$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello141$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello141$Query$Launch$LaunchSite();

  factory Hello141$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello141$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello141$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello141$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello141$Query$Launch$LaunchLinks();

  factory Hello141$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello141$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello141$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello141$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello141$Query$Launch$LaunchRocket();

  factory Hello141$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello141$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello141$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello141$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello141$Query$Launch();

  factory Hello141$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello141$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello141$Query$Launch$LaunchSite? launchSite;

  Hello141$Query$Launch$LaunchLinks? links;

  Hello141$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello141$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello141$Query extends JsonSerializable with EquatableMixin {
  Hello141$Query();

  factory Hello141$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello141$QueryFromJson(json);

  List<Hello141$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello141$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello142$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello142$Query$Launch$LaunchSite();

  factory Hello142$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello142$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello142$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello142$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello142$Query$Launch$LaunchLinks();

  factory Hello142$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello142$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello142$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello142$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello142$Query$Launch$LaunchRocket();

  factory Hello142$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello142$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello142$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello142$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello142$Query$Launch();

  factory Hello142$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello142$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello142$Query$Launch$LaunchSite? launchSite;

  Hello142$Query$Launch$LaunchLinks? links;

  Hello142$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello142$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello142$Query extends JsonSerializable with EquatableMixin {
  Hello142$Query();

  factory Hello142$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello142$QueryFromJson(json);

  List<Hello142$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello142$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello143$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello143$Query$Launch$LaunchSite();

  factory Hello143$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello143$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello143$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello143$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello143$Query$Launch$LaunchLinks();

  factory Hello143$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello143$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello143$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello143$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello143$Query$Launch$LaunchRocket();

  factory Hello143$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello143$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello143$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello143$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello143$Query$Launch();

  factory Hello143$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello143$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello143$Query$Launch$LaunchSite? launchSite;

  Hello143$Query$Launch$LaunchLinks? links;

  Hello143$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello143$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello143$Query extends JsonSerializable with EquatableMixin {
  Hello143$Query();

  factory Hello143$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello143$QueryFromJson(json);

  List<Hello143$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello143$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello144$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello144$Query$Launch$LaunchSite();

  factory Hello144$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello144$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello144$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello144$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello144$Query$Launch$LaunchLinks();

  factory Hello144$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello144$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello144$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello144$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello144$Query$Launch$LaunchRocket();

  factory Hello144$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello144$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello144$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello144$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello144$Query$Launch();

  factory Hello144$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello144$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello144$Query$Launch$LaunchSite? launchSite;

  Hello144$Query$Launch$LaunchLinks? links;

  Hello144$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello144$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello144$Query extends JsonSerializable with EquatableMixin {
  Hello144$Query();

  factory Hello144$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello144$QueryFromJson(json);

  List<Hello144$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello144$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello145$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello145$Query$Launch$LaunchSite();

  factory Hello145$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello145$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello145$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello145$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello145$Query$Launch$LaunchLinks();

  factory Hello145$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello145$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello145$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello145$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello145$Query$Launch$LaunchRocket();

  factory Hello145$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello145$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello145$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello145$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello145$Query$Launch();

  factory Hello145$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello145$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello145$Query$Launch$LaunchSite? launchSite;

  Hello145$Query$Launch$LaunchLinks? links;

  Hello145$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello145$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello145$Query extends JsonSerializable with EquatableMixin {
  Hello145$Query();

  factory Hello145$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello145$QueryFromJson(json);

  List<Hello145$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello145$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello146$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello146$Query$Launch$LaunchSite();

  factory Hello146$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello146$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello146$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello146$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello146$Query$Launch$LaunchLinks();

  factory Hello146$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello146$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello146$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello146$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello146$Query$Launch$LaunchRocket();

  factory Hello146$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello146$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello146$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello146$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello146$Query$Launch();

  factory Hello146$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello146$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello146$Query$Launch$LaunchSite? launchSite;

  Hello146$Query$Launch$LaunchLinks? links;

  Hello146$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello146$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello146$Query extends JsonSerializable with EquatableMixin {
  Hello146$Query();

  factory Hello146$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello146$QueryFromJson(json);

  List<Hello146$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello146$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello147$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello147$Query$Launch$LaunchSite();

  factory Hello147$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello147$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello147$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello147$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello147$Query$Launch$LaunchLinks();

  factory Hello147$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello147$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello147$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello147$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello147$Query$Launch$LaunchRocket();

  factory Hello147$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello147$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello147$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello147$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello147$Query$Launch();

  factory Hello147$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello147$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello147$Query$Launch$LaunchSite? launchSite;

  Hello147$Query$Launch$LaunchLinks? links;

  Hello147$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello147$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello147$Query extends JsonSerializable with EquatableMixin {
  Hello147$Query();

  factory Hello147$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello147$QueryFromJson(json);

  List<Hello147$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello147$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello148$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello148$Query$Launch$LaunchSite();

  factory Hello148$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello148$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello148$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello148$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello148$Query$Launch$LaunchLinks();

  factory Hello148$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello148$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello148$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello148$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello148$Query$Launch$LaunchRocket();

  factory Hello148$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello148$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello148$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello148$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello148$Query$Launch();

  factory Hello148$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello148$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello148$Query$Launch$LaunchSite? launchSite;

  Hello148$Query$Launch$LaunchLinks? links;

  Hello148$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello148$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello148$Query extends JsonSerializable with EquatableMixin {
  Hello148$Query();

  factory Hello148$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello148$QueryFromJson(json);

  List<Hello148$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello148$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello149$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello149$Query$Launch$LaunchSite();

  factory Hello149$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello149$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello149$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello149$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello149$Query$Launch$LaunchLinks();

  factory Hello149$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello149$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello149$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello149$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello149$Query$Launch$LaunchRocket();

  factory Hello149$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello149$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello149$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello149$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello149$Query$Launch();

  factory Hello149$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello149$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello149$Query$Launch$LaunchSite? launchSite;

  Hello149$Query$Launch$LaunchLinks? links;

  Hello149$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello149$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello149$Query extends JsonSerializable with EquatableMixin {
  Hello149$Query();

  factory Hello149$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello149$QueryFromJson(json);

  List<Hello149$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello149$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello150$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello150$Query$Launch$LaunchSite();

  factory Hello150$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello150$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello150$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello150$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello150$Query$Launch$LaunchLinks();

  factory Hello150$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello150$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello150$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello150$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello150$Query$Launch$LaunchRocket();

  factory Hello150$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello150$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello150$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello150$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello150$Query$Launch();

  factory Hello150$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello150$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello150$Query$Launch$LaunchSite? launchSite;

  Hello150$Query$Launch$LaunchLinks? links;

  Hello150$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello150$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello150$Query extends JsonSerializable with EquatableMixin {
  Hello150$Query();

  factory Hello150$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello150$QueryFromJson(json);

  List<Hello150$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello150$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello151$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello151$Query$Launch$LaunchSite();

  factory Hello151$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello151$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello151$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello151$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello151$Query$Launch$LaunchLinks();

  factory Hello151$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello151$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello151$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello151$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello151$Query$Launch$LaunchRocket();

  factory Hello151$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello151$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello151$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello151$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello151$Query$Launch();

  factory Hello151$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello151$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello151$Query$Launch$LaunchSite? launchSite;

  Hello151$Query$Launch$LaunchLinks? links;

  Hello151$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello151$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello151$Query extends JsonSerializable with EquatableMixin {
  Hello151$Query();

  factory Hello151$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello151$QueryFromJson(json);

  List<Hello151$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello151$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello152$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello152$Query$Launch$LaunchSite();

  factory Hello152$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello152$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello152$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello152$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello152$Query$Launch$LaunchLinks();

  factory Hello152$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello152$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello152$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello152$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello152$Query$Launch$LaunchRocket();

  factory Hello152$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello152$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello152$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello152$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello152$Query$Launch();

  factory Hello152$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello152$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello152$Query$Launch$LaunchSite? launchSite;

  Hello152$Query$Launch$LaunchLinks? links;

  Hello152$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello152$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello152$Query extends JsonSerializable with EquatableMixin {
  Hello152$Query();

  factory Hello152$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello152$QueryFromJson(json);

  List<Hello152$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello152$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello153$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello153$Query$Launch$LaunchSite();

  factory Hello153$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello153$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello153$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello153$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello153$Query$Launch$LaunchLinks();

  factory Hello153$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello153$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello153$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello153$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello153$Query$Launch$LaunchRocket();

  factory Hello153$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello153$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello153$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello153$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello153$Query$Launch();

  factory Hello153$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello153$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello153$Query$Launch$LaunchSite? launchSite;

  Hello153$Query$Launch$LaunchLinks? links;

  Hello153$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello153$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello153$Query extends JsonSerializable with EquatableMixin {
  Hello153$Query();

  factory Hello153$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello153$QueryFromJson(json);

  List<Hello153$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello153$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello154$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello154$Query$Launch$LaunchSite();

  factory Hello154$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello154$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello154$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello154$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello154$Query$Launch$LaunchLinks();

  factory Hello154$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello154$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello154$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello154$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello154$Query$Launch$LaunchRocket();

  factory Hello154$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello154$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello154$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello154$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello154$Query$Launch();

  factory Hello154$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello154$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello154$Query$Launch$LaunchSite? launchSite;

  Hello154$Query$Launch$LaunchLinks? links;

  Hello154$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello154$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello154$Query extends JsonSerializable with EquatableMixin {
  Hello154$Query();

  factory Hello154$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello154$QueryFromJson(json);

  List<Hello154$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello154$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello155$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello155$Query$Launch$LaunchSite();

  factory Hello155$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello155$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello155$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello155$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello155$Query$Launch$LaunchLinks();

  factory Hello155$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello155$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello155$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello155$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello155$Query$Launch$LaunchRocket();

  factory Hello155$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello155$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello155$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello155$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello155$Query$Launch();

  factory Hello155$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello155$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello155$Query$Launch$LaunchSite? launchSite;

  Hello155$Query$Launch$LaunchLinks? links;

  Hello155$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello155$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello155$Query extends JsonSerializable with EquatableMixin {
  Hello155$Query();

  factory Hello155$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello155$QueryFromJson(json);

  List<Hello155$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello155$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello156$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello156$Query$Launch$LaunchSite();

  factory Hello156$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello156$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello156$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello156$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello156$Query$Launch$LaunchLinks();

  factory Hello156$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello156$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello156$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello156$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello156$Query$Launch$LaunchRocket();

  factory Hello156$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello156$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello156$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello156$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello156$Query$Launch();

  factory Hello156$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello156$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello156$Query$Launch$LaunchSite? launchSite;

  Hello156$Query$Launch$LaunchLinks? links;

  Hello156$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello156$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello156$Query extends JsonSerializable with EquatableMixin {
  Hello156$Query();

  factory Hello156$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello156$QueryFromJson(json);

  List<Hello156$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello156$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello157$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello157$Query$Launch$LaunchSite();

  factory Hello157$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello157$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello157$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello157$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello157$Query$Launch$LaunchLinks();

  factory Hello157$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello157$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello157$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello157$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello157$Query$Launch$LaunchRocket();

  factory Hello157$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello157$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello157$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello157$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello157$Query$Launch();

  factory Hello157$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello157$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello157$Query$Launch$LaunchSite? launchSite;

  Hello157$Query$Launch$LaunchLinks? links;

  Hello157$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello157$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello157$Query extends JsonSerializable with EquatableMixin {
  Hello157$Query();

  factory Hello157$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello157$QueryFromJson(json);

  List<Hello157$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello157$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello158$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello158$Query$Launch$LaunchSite();

  factory Hello158$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello158$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello158$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello158$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello158$Query$Launch$LaunchLinks();

  factory Hello158$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello158$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello158$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello158$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello158$Query$Launch$LaunchRocket();

  factory Hello158$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello158$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello158$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello158$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello158$Query$Launch();

  factory Hello158$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello158$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello158$Query$Launch$LaunchSite? launchSite;

  Hello158$Query$Launch$LaunchLinks? links;

  Hello158$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello158$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello158$Query extends JsonSerializable with EquatableMixin {
  Hello158$Query();

  factory Hello158$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello158$QueryFromJson(json);

  List<Hello158$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello158$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello159$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello159$Query$Launch$LaunchSite();

  factory Hello159$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello159$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello159$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello159$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello159$Query$Launch$LaunchLinks();

  factory Hello159$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello159$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello159$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello159$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello159$Query$Launch$LaunchRocket();

  factory Hello159$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello159$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello159$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello159$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello159$Query$Launch();

  factory Hello159$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello159$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello159$Query$Launch$LaunchSite? launchSite;

  Hello159$Query$Launch$LaunchLinks? links;

  Hello159$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello159$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello159$Query extends JsonSerializable with EquatableMixin {
  Hello159$Query();

  factory Hello159$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello159$QueryFromJson(json);

  List<Hello159$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello159$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello160$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello160$Query$Launch$LaunchSite();

  factory Hello160$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello160$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello160$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello160$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello160$Query$Launch$LaunchLinks();

  factory Hello160$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello160$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello160$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello160$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello160$Query$Launch$LaunchRocket();

  factory Hello160$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello160$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello160$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello160$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello160$Query$Launch();

  factory Hello160$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello160$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello160$Query$Launch$LaunchSite? launchSite;

  Hello160$Query$Launch$LaunchLinks? links;

  Hello160$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello160$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello160$Query extends JsonSerializable with EquatableMixin {
  Hello160$Query();

  factory Hello160$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello160$QueryFromJson(json);

  List<Hello160$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello160$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello161$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello161$Query$Launch$LaunchSite();

  factory Hello161$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello161$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello161$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello161$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello161$Query$Launch$LaunchLinks();

  factory Hello161$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello161$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello161$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello161$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello161$Query$Launch$LaunchRocket();

  factory Hello161$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello161$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello161$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello161$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello161$Query$Launch();

  factory Hello161$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello161$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello161$Query$Launch$LaunchSite? launchSite;

  Hello161$Query$Launch$LaunchLinks? links;

  Hello161$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello161$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello161$Query extends JsonSerializable with EquatableMixin {
  Hello161$Query();

  factory Hello161$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello161$QueryFromJson(json);

  List<Hello161$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello161$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello162$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello162$Query$Launch$LaunchSite();

  factory Hello162$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello162$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello162$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello162$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello162$Query$Launch$LaunchLinks();

  factory Hello162$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello162$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello162$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello162$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello162$Query$Launch$LaunchRocket();

  factory Hello162$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello162$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello162$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello162$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello162$Query$Launch();

  factory Hello162$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello162$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello162$Query$Launch$LaunchSite? launchSite;

  Hello162$Query$Launch$LaunchLinks? links;

  Hello162$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello162$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello162$Query extends JsonSerializable with EquatableMixin {
  Hello162$Query();

  factory Hello162$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello162$QueryFromJson(json);

  List<Hello162$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello162$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello163$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello163$Query$Launch$LaunchSite();

  factory Hello163$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello163$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello163$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello163$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello163$Query$Launch$LaunchLinks();

  factory Hello163$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello163$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello163$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello163$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello163$Query$Launch$LaunchRocket();

  factory Hello163$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello163$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello163$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello163$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello163$Query$Launch();

  factory Hello163$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello163$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello163$Query$Launch$LaunchSite? launchSite;

  Hello163$Query$Launch$LaunchLinks? links;

  Hello163$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello163$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello163$Query extends JsonSerializable with EquatableMixin {
  Hello163$Query();

  factory Hello163$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello163$QueryFromJson(json);

  List<Hello163$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello163$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello164$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello164$Query$Launch$LaunchSite();

  factory Hello164$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello164$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello164$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello164$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello164$Query$Launch$LaunchLinks();

  factory Hello164$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello164$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello164$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello164$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello164$Query$Launch$LaunchRocket();

  factory Hello164$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello164$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello164$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello164$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello164$Query$Launch();

  factory Hello164$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello164$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello164$Query$Launch$LaunchSite? launchSite;

  Hello164$Query$Launch$LaunchLinks? links;

  Hello164$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello164$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello164$Query extends JsonSerializable with EquatableMixin {
  Hello164$Query();

  factory Hello164$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello164$QueryFromJson(json);

  List<Hello164$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello164$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello165$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello165$Query$Launch$LaunchSite();

  factory Hello165$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello165$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello165$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello165$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello165$Query$Launch$LaunchLinks();

  factory Hello165$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello165$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello165$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello165$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello165$Query$Launch$LaunchRocket();

  factory Hello165$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello165$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello165$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello165$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello165$Query$Launch();

  factory Hello165$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello165$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello165$Query$Launch$LaunchSite? launchSite;

  Hello165$Query$Launch$LaunchLinks? links;

  Hello165$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello165$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello165$Query extends JsonSerializable with EquatableMixin {
  Hello165$Query();

  factory Hello165$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello165$QueryFromJson(json);

  List<Hello165$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello165$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello166$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello166$Query$Launch$LaunchSite();

  factory Hello166$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello166$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello166$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello166$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello166$Query$Launch$LaunchLinks();

  factory Hello166$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello166$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello166$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello166$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello166$Query$Launch$LaunchRocket();

  factory Hello166$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello166$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello166$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello166$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello166$Query$Launch();

  factory Hello166$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello166$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello166$Query$Launch$LaunchSite? launchSite;

  Hello166$Query$Launch$LaunchLinks? links;

  Hello166$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello166$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello166$Query extends JsonSerializable with EquatableMixin {
  Hello166$Query();

  factory Hello166$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello166$QueryFromJson(json);

  List<Hello166$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello166$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello167$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello167$Query$Launch$LaunchSite();

  factory Hello167$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello167$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello167$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello167$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello167$Query$Launch$LaunchLinks();

  factory Hello167$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello167$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello167$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello167$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello167$Query$Launch$LaunchRocket();

  factory Hello167$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello167$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello167$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello167$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello167$Query$Launch();

  factory Hello167$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello167$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello167$Query$Launch$LaunchSite? launchSite;

  Hello167$Query$Launch$LaunchLinks? links;

  Hello167$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello167$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello167$Query extends JsonSerializable with EquatableMixin {
  Hello167$Query();

  factory Hello167$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello167$QueryFromJson(json);

  List<Hello167$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello167$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello168$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello168$Query$Launch$LaunchSite();

  factory Hello168$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello168$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello168$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello168$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello168$Query$Launch$LaunchLinks();

  factory Hello168$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello168$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello168$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello168$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello168$Query$Launch$LaunchRocket();

  factory Hello168$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello168$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello168$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello168$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello168$Query$Launch();

  factory Hello168$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello168$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello168$Query$Launch$LaunchSite? launchSite;

  Hello168$Query$Launch$LaunchLinks? links;

  Hello168$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello168$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello168$Query extends JsonSerializable with EquatableMixin {
  Hello168$Query();

  factory Hello168$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello168$QueryFromJson(json);

  List<Hello168$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello168$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello169$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello169$Query$Launch$LaunchSite();

  factory Hello169$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello169$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello169$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello169$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello169$Query$Launch$LaunchLinks();

  factory Hello169$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello169$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello169$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello169$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello169$Query$Launch$LaunchRocket();

  factory Hello169$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello169$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello169$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello169$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello169$Query$Launch();

  factory Hello169$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello169$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello169$Query$Launch$LaunchSite? launchSite;

  Hello169$Query$Launch$LaunchLinks? links;

  Hello169$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello169$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello169$Query extends JsonSerializable with EquatableMixin {
  Hello169$Query();

  factory Hello169$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello169$QueryFromJson(json);

  List<Hello169$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello169$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello170$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello170$Query$Launch$LaunchSite();

  factory Hello170$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello170$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello170$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello170$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello170$Query$Launch$LaunchLinks();

  factory Hello170$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello170$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello170$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello170$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello170$Query$Launch$LaunchRocket();

  factory Hello170$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello170$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello170$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello170$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello170$Query$Launch();

  factory Hello170$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello170$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello170$Query$Launch$LaunchSite? launchSite;

  Hello170$Query$Launch$LaunchLinks? links;

  Hello170$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello170$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello170$Query extends JsonSerializable with EquatableMixin {
  Hello170$Query();

  factory Hello170$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello170$QueryFromJson(json);

  List<Hello170$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello170$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello171$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello171$Query$Launch$LaunchSite();

  factory Hello171$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello171$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello171$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello171$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello171$Query$Launch$LaunchLinks();

  factory Hello171$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello171$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello171$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello171$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello171$Query$Launch$LaunchRocket();

  factory Hello171$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello171$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello171$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello171$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello171$Query$Launch();

  factory Hello171$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello171$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello171$Query$Launch$LaunchSite? launchSite;

  Hello171$Query$Launch$LaunchLinks? links;

  Hello171$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello171$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello171$Query extends JsonSerializable with EquatableMixin {
  Hello171$Query();

  factory Hello171$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello171$QueryFromJson(json);

  List<Hello171$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello171$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello172$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello172$Query$Launch$LaunchSite();

  factory Hello172$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello172$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello172$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello172$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello172$Query$Launch$LaunchLinks();

  factory Hello172$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello172$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello172$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello172$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello172$Query$Launch$LaunchRocket();

  factory Hello172$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello172$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello172$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello172$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello172$Query$Launch();

  factory Hello172$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello172$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello172$Query$Launch$LaunchSite? launchSite;

  Hello172$Query$Launch$LaunchLinks? links;

  Hello172$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello172$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello172$Query extends JsonSerializable with EquatableMixin {
  Hello172$Query();

  factory Hello172$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello172$QueryFromJson(json);

  List<Hello172$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello172$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello173$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello173$Query$Launch$LaunchSite();

  factory Hello173$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello173$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello173$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello173$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello173$Query$Launch$LaunchLinks();

  factory Hello173$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello173$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello173$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello173$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello173$Query$Launch$LaunchRocket();

  factory Hello173$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello173$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello173$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello173$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello173$Query$Launch();

  factory Hello173$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello173$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello173$Query$Launch$LaunchSite? launchSite;

  Hello173$Query$Launch$LaunchLinks? links;

  Hello173$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello173$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello173$Query extends JsonSerializable with EquatableMixin {
  Hello173$Query();

  factory Hello173$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello173$QueryFromJson(json);

  List<Hello173$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello173$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello174$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello174$Query$Launch$LaunchSite();

  factory Hello174$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello174$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello174$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello174$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello174$Query$Launch$LaunchLinks();

  factory Hello174$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello174$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello174$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello174$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello174$Query$Launch$LaunchRocket();

  factory Hello174$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello174$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello174$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello174$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello174$Query$Launch();

  factory Hello174$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello174$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello174$Query$Launch$LaunchSite? launchSite;

  Hello174$Query$Launch$LaunchLinks? links;

  Hello174$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello174$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello174$Query extends JsonSerializable with EquatableMixin {
  Hello174$Query();

  factory Hello174$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello174$QueryFromJson(json);

  List<Hello174$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello174$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello175$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello175$Query$Launch$LaunchSite();

  factory Hello175$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello175$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello175$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello175$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello175$Query$Launch$LaunchLinks();

  factory Hello175$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello175$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello175$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello175$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello175$Query$Launch$LaunchRocket();

  factory Hello175$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello175$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello175$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello175$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello175$Query$Launch();

  factory Hello175$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello175$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello175$Query$Launch$LaunchSite? launchSite;

  Hello175$Query$Launch$LaunchLinks? links;

  Hello175$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello175$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello175$Query extends JsonSerializable with EquatableMixin {
  Hello175$Query();

  factory Hello175$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello175$QueryFromJson(json);

  List<Hello175$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello175$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello176$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello176$Query$Launch$LaunchSite();

  factory Hello176$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello176$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello176$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello176$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello176$Query$Launch$LaunchLinks();

  factory Hello176$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello176$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello176$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello176$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello176$Query$Launch$LaunchRocket();

  factory Hello176$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello176$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello176$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello176$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello176$Query$Launch();

  factory Hello176$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello176$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello176$Query$Launch$LaunchSite? launchSite;

  Hello176$Query$Launch$LaunchLinks? links;

  Hello176$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello176$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello176$Query extends JsonSerializable with EquatableMixin {
  Hello176$Query();

  factory Hello176$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello176$QueryFromJson(json);

  List<Hello176$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello176$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello177$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello177$Query$Launch$LaunchSite();

  factory Hello177$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello177$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello177$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello177$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello177$Query$Launch$LaunchLinks();

  factory Hello177$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello177$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello177$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello177$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello177$Query$Launch$LaunchRocket();

  factory Hello177$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello177$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello177$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello177$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello177$Query$Launch();

  factory Hello177$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello177$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello177$Query$Launch$LaunchSite? launchSite;

  Hello177$Query$Launch$LaunchLinks? links;

  Hello177$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello177$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello177$Query extends JsonSerializable with EquatableMixin {
  Hello177$Query();

  factory Hello177$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello177$QueryFromJson(json);

  List<Hello177$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello177$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello178$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello178$Query$Launch$LaunchSite();

  factory Hello178$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello178$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello178$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello178$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello178$Query$Launch$LaunchLinks();

  factory Hello178$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello178$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello178$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello178$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello178$Query$Launch$LaunchRocket();

  factory Hello178$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello178$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello178$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello178$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello178$Query$Launch();

  factory Hello178$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello178$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello178$Query$Launch$LaunchSite? launchSite;

  Hello178$Query$Launch$LaunchLinks? links;

  Hello178$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello178$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello178$Query extends JsonSerializable with EquatableMixin {
  Hello178$Query();

  factory Hello178$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello178$QueryFromJson(json);

  List<Hello178$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello178$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello179$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello179$Query$Launch$LaunchSite();

  factory Hello179$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello179$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello179$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello179$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello179$Query$Launch$LaunchLinks();

  factory Hello179$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello179$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello179$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello179$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello179$Query$Launch$LaunchRocket();

  factory Hello179$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello179$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello179$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello179$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello179$Query$Launch();

  factory Hello179$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello179$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello179$Query$Launch$LaunchSite? launchSite;

  Hello179$Query$Launch$LaunchLinks? links;

  Hello179$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello179$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello179$Query extends JsonSerializable with EquatableMixin {
  Hello179$Query();

  factory Hello179$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello179$QueryFromJson(json);

  List<Hello179$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello179$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello180$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello180$Query$Launch$LaunchSite();

  factory Hello180$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello180$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello180$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello180$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello180$Query$Launch$LaunchLinks();

  factory Hello180$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello180$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello180$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello180$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello180$Query$Launch$LaunchRocket();

  factory Hello180$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello180$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello180$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello180$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello180$Query$Launch();

  factory Hello180$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello180$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello180$Query$Launch$LaunchSite? launchSite;

  Hello180$Query$Launch$LaunchLinks? links;

  Hello180$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello180$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello180$Query extends JsonSerializable with EquatableMixin {
  Hello180$Query();

  factory Hello180$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello180$QueryFromJson(json);

  List<Hello180$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello180$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello181$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello181$Query$Launch$LaunchSite();

  factory Hello181$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello181$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello181$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello181$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello181$Query$Launch$LaunchLinks();

  factory Hello181$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello181$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello181$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello181$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello181$Query$Launch$LaunchRocket();

  factory Hello181$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello181$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello181$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello181$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello181$Query$Launch();

  factory Hello181$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello181$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello181$Query$Launch$LaunchSite? launchSite;

  Hello181$Query$Launch$LaunchLinks? links;

  Hello181$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello181$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello181$Query extends JsonSerializable with EquatableMixin {
  Hello181$Query();

  factory Hello181$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello181$QueryFromJson(json);

  List<Hello181$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello181$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello182$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello182$Query$Launch$LaunchSite();

  factory Hello182$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello182$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello182$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello182$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello182$Query$Launch$LaunchLinks();

  factory Hello182$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello182$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello182$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello182$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello182$Query$Launch$LaunchRocket();

  factory Hello182$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello182$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello182$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello182$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello182$Query$Launch();

  factory Hello182$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello182$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello182$Query$Launch$LaunchSite? launchSite;

  Hello182$Query$Launch$LaunchLinks? links;

  Hello182$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello182$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello182$Query extends JsonSerializable with EquatableMixin {
  Hello182$Query();

  factory Hello182$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello182$QueryFromJson(json);

  List<Hello182$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello182$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello183$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello183$Query$Launch$LaunchSite();

  factory Hello183$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello183$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello183$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello183$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello183$Query$Launch$LaunchLinks();

  factory Hello183$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello183$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello183$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello183$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello183$Query$Launch$LaunchRocket();

  factory Hello183$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello183$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello183$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello183$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello183$Query$Launch();

  factory Hello183$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello183$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello183$Query$Launch$LaunchSite? launchSite;

  Hello183$Query$Launch$LaunchLinks? links;

  Hello183$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello183$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello183$Query extends JsonSerializable with EquatableMixin {
  Hello183$Query();

  factory Hello183$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello183$QueryFromJson(json);

  List<Hello183$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello183$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello184$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello184$Query$Launch$LaunchSite();

  factory Hello184$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello184$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello184$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello184$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello184$Query$Launch$LaunchLinks();

  factory Hello184$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello184$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello184$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello184$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello184$Query$Launch$LaunchRocket();

  factory Hello184$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello184$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello184$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello184$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello184$Query$Launch();

  factory Hello184$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello184$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello184$Query$Launch$LaunchSite? launchSite;

  Hello184$Query$Launch$LaunchLinks? links;

  Hello184$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello184$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello184$Query extends JsonSerializable with EquatableMixin {
  Hello184$Query();

  factory Hello184$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello184$QueryFromJson(json);

  List<Hello184$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello184$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello185$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello185$Query$Launch$LaunchSite();

  factory Hello185$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello185$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello185$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello185$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello185$Query$Launch$LaunchLinks();

  factory Hello185$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello185$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello185$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello185$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello185$Query$Launch$LaunchRocket();

  factory Hello185$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello185$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello185$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello185$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello185$Query$Launch();

  factory Hello185$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello185$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello185$Query$Launch$LaunchSite? launchSite;

  Hello185$Query$Launch$LaunchLinks? links;

  Hello185$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello185$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello185$Query extends JsonSerializable with EquatableMixin {
  Hello185$Query();

  factory Hello185$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello185$QueryFromJson(json);

  List<Hello185$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello185$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello186$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello186$Query$Launch$LaunchSite();

  factory Hello186$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello186$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello186$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello186$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello186$Query$Launch$LaunchLinks();

  factory Hello186$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello186$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello186$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello186$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello186$Query$Launch$LaunchRocket();

  factory Hello186$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello186$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello186$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello186$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello186$Query$Launch();

  factory Hello186$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello186$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello186$Query$Launch$LaunchSite? launchSite;

  Hello186$Query$Launch$LaunchLinks? links;

  Hello186$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello186$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello186$Query extends JsonSerializable with EquatableMixin {
  Hello186$Query();

  factory Hello186$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello186$QueryFromJson(json);

  List<Hello186$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello186$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello187$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello187$Query$Launch$LaunchSite();

  factory Hello187$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello187$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello187$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello187$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello187$Query$Launch$LaunchLinks();

  factory Hello187$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello187$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello187$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello187$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello187$Query$Launch$LaunchRocket();

  factory Hello187$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello187$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello187$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello187$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello187$Query$Launch();

  factory Hello187$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello187$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello187$Query$Launch$LaunchSite? launchSite;

  Hello187$Query$Launch$LaunchLinks? links;

  Hello187$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello187$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello187$Query extends JsonSerializable with EquatableMixin {
  Hello187$Query();

  factory Hello187$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello187$QueryFromJson(json);

  List<Hello187$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello187$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello188$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello188$Query$Launch$LaunchSite();

  factory Hello188$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello188$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello188$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello188$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello188$Query$Launch$LaunchLinks();

  factory Hello188$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello188$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello188$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello188$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello188$Query$Launch$LaunchRocket();

  factory Hello188$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello188$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello188$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello188$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello188$Query$Launch();

  factory Hello188$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello188$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello188$Query$Launch$LaunchSite? launchSite;

  Hello188$Query$Launch$LaunchLinks? links;

  Hello188$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello188$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello188$Query extends JsonSerializable with EquatableMixin {
  Hello188$Query();

  factory Hello188$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello188$QueryFromJson(json);

  List<Hello188$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello188$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello189$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello189$Query$Launch$LaunchSite();

  factory Hello189$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello189$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello189$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello189$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello189$Query$Launch$LaunchLinks();

  factory Hello189$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello189$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello189$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello189$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello189$Query$Launch$LaunchRocket();

  factory Hello189$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello189$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello189$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello189$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello189$Query$Launch();

  factory Hello189$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello189$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello189$Query$Launch$LaunchSite? launchSite;

  Hello189$Query$Launch$LaunchLinks? links;

  Hello189$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello189$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello189$Query extends JsonSerializable with EquatableMixin {
  Hello189$Query();

  factory Hello189$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello189$QueryFromJson(json);

  List<Hello189$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello189$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello190$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello190$Query$Launch$LaunchSite();

  factory Hello190$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello190$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello190$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello190$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello190$Query$Launch$LaunchLinks();

  factory Hello190$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello190$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello190$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello190$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello190$Query$Launch$LaunchRocket();

  factory Hello190$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello190$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello190$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello190$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello190$Query$Launch();

  factory Hello190$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello190$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello190$Query$Launch$LaunchSite? launchSite;

  Hello190$Query$Launch$LaunchLinks? links;

  Hello190$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello190$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello190$Query extends JsonSerializable with EquatableMixin {
  Hello190$Query();

  factory Hello190$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello190$QueryFromJson(json);

  List<Hello190$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello190$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello191$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello191$Query$Launch$LaunchSite();

  factory Hello191$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello191$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello191$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello191$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello191$Query$Launch$LaunchLinks();

  factory Hello191$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello191$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello191$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello191$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello191$Query$Launch$LaunchRocket();

  factory Hello191$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello191$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello191$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello191$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello191$Query$Launch();

  factory Hello191$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello191$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello191$Query$Launch$LaunchSite? launchSite;

  Hello191$Query$Launch$LaunchLinks? links;

  Hello191$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello191$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello191$Query extends JsonSerializable with EquatableMixin {
  Hello191$Query();

  factory Hello191$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello191$QueryFromJson(json);

  List<Hello191$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello191$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello192$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello192$Query$Launch$LaunchSite();

  factory Hello192$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello192$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello192$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello192$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello192$Query$Launch$LaunchLinks();

  factory Hello192$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello192$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello192$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello192$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello192$Query$Launch$LaunchRocket();

  factory Hello192$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello192$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello192$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello192$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello192$Query$Launch();

  factory Hello192$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello192$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello192$Query$Launch$LaunchSite? launchSite;

  Hello192$Query$Launch$LaunchLinks? links;

  Hello192$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello192$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello192$Query extends JsonSerializable with EquatableMixin {
  Hello192$Query();

  factory Hello192$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello192$QueryFromJson(json);

  List<Hello192$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello192$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello193$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello193$Query$Launch$LaunchSite();

  factory Hello193$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello193$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello193$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello193$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello193$Query$Launch$LaunchLinks();

  factory Hello193$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello193$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello193$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello193$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello193$Query$Launch$LaunchRocket();

  factory Hello193$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello193$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello193$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello193$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello193$Query$Launch();

  factory Hello193$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello193$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello193$Query$Launch$LaunchSite? launchSite;

  Hello193$Query$Launch$LaunchLinks? links;

  Hello193$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello193$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello193$Query extends JsonSerializable with EquatableMixin {
  Hello193$Query();

  factory Hello193$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello193$QueryFromJson(json);

  List<Hello193$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello193$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello194$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello194$Query$Launch$LaunchSite();

  factory Hello194$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello194$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello194$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello194$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello194$Query$Launch$LaunchLinks();

  factory Hello194$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello194$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello194$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello194$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello194$Query$Launch$LaunchRocket();

  factory Hello194$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello194$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello194$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello194$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello194$Query$Launch();

  factory Hello194$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello194$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello194$Query$Launch$LaunchSite? launchSite;

  Hello194$Query$Launch$LaunchLinks? links;

  Hello194$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello194$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello194$Query extends JsonSerializable with EquatableMixin {
  Hello194$Query();

  factory Hello194$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello194$QueryFromJson(json);

  List<Hello194$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello194$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello195$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello195$Query$Launch$LaunchSite();

  factory Hello195$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello195$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello195$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello195$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello195$Query$Launch$LaunchLinks();

  factory Hello195$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello195$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello195$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello195$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello195$Query$Launch$LaunchRocket();

  factory Hello195$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello195$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello195$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello195$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello195$Query$Launch();

  factory Hello195$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello195$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello195$Query$Launch$LaunchSite? launchSite;

  Hello195$Query$Launch$LaunchLinks? links;

  Hello195$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello195$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello195$Query extends JsonSerializable with EquatableMixin {
  Hello195$Query();

  factory Hello195$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello195$QueryFromJson(json);

  List<Hello195$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello195$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello196$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello196$Query$Launch$LaunchSite();

  factory Hello196$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello196$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello196$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello196$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello196$Query$Launch$LaunchLinks();

  factory Hello196$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello196$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello196$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello196$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello196$Query$Launch$LaunchRocket();

  factory Hello196$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello196$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello196$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello196$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello196$Query$Launch();

  factory Hello196$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello196$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello196$Query$Launch$LaunchSite? launchSite;

  Hello196$Query$Launch$LaunchLinks? links;

  Hello196$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello196$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello196$Query extends JsonSerializable with EquatableMixin {
  Hello196$Query();

  factory Hello196$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello196$QueryFromJson(json);

  List<Hello196$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello196$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello197$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello197$Query$Launch$LaunchSite();

  factory Hello197$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello197$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello197$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello197$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello197$Query$Launch$LaunchLinks();

  factory Hello197$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello197$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello197$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello197$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello197$Query$Launch$LaunchRocket();

  factory Hello197$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello197$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello197$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello197$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello197$Query$Launch();

  factory Hello197$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello197$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello197$Query$Launch$LaunchSite? launchSite;

  Hello197$Query$Launch$LaunchLinks? links;

  Hello197$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello197$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello197$Query extends JsonSerializable with EquatableMixin {
  Hello197$Query();

  factory Hello197$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello197$QueryFromJson(json);

  List<Hello197$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello197$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello198$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello198$Query$Launch$LaunchSite();

  factory Hello198$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello198$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello198$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello198$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello198$Query$Launch$LaunchLinks();

  factory Hello198$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello198$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello198$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello198$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello198$Query$Launch$LaunchRocket();

  factory Hello198$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello198$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello198$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello198$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello198$Query$Launch();

  factory Hello198$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello198$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello198$Query$Launch$LaunchSite? launchSite;

  Hello198$Query$Launch$LaunchLinks? links;

  Hello198$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello198$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello198$Query extends JsonSerializable with EquatableMixin {
  Hello198$Query();

  factory Hello198$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello198$QueryFromJson(json);

  List<Hello198$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello198$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello199$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello199$Query$Launch$LaunchSite();

  factory Hello199$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello199$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello199$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello199$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello199$Query$Launch$LaunchLinks();

  factory Hello199$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello199$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello199$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello199$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello199$Query$Launch$LaunchRocket();

  factory Hello199$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello199$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello199$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello199$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello199$Query$Launch();

  factory Hello199$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello199$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello199$Query$Launch$LaunchSite? launchSite;

  Hello199$Query$Launch$LaunchLinks? links;

  Hello199$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello199$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello199$Query extends JsonSerializable with EquatableMixin {
  Hello199$Query();

  factory Hello199$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello199$QueryFromJson(json);

  List<Hello199$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello199$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello200$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello200$Query$Launch$LaunchSite();

  factory Hello200$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello200$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello200$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello200$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello200$Query$Launch$LaunchLinks();

  factory Hello200$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello200$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello200$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello200$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello200$Query$Launch$LaunchRocket();

  factory Hello200$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello200$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello200$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello200$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello200$Query$Launch();

  factory Hello200$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello200$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello200$Query$Launch$LaunchSite? launchSite;

  Hello200$Query$Launch$LaunchLinks? links;

  Hello200$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello200$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello200$Query extends JsonSerializable with EquatableMixin {
  Hello200$Query();

  factory Hello200$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello200$QueryFromJson(json);

  List<Hello200$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello200$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello201$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello201$Query$Launch$LaunchSite();

  factory Hello201$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello201$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello201$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello201$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello201$Query$Launch$LaunchLinks();

  factory Hello201$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello201$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello201$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello201$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello201$Query$Launch$LaunchRocket();

  factory Hello201$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello201$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello201$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello201$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello201$Query$Launch();

  factory Hello201$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello201$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello201$Query$Launch$LaunchSite? launchSite;

  Hello201$Query$Launch$LaunchLinks? links;

  Hello201$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello201$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello201$Query extends JsonSerializable with EquatableMixin {
  Hello201$Query();

  factory Hello201$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello201$QueryFromJson(json);

  List<Hello201$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello201$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello202$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello202$Query$Launch$LaunchSite();

  factory Hello202$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello202$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello202$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello202$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello202$Query$Launch$LaunchLinks();

  factory Hello202$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello202$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello202$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello202$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello202$Query$Launch$LaunchRocket();

  factory Hello202$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello202$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello202$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello202$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello202$Query$Launch();

  factory Hello202$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello202$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello202$Query$Launch$LaunchSite? launchSite;

  Hello202$Query$Launch$LaunchLinks? links;

  Hello202$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello202$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello202$Query extends JsonSerializable with EquatableMixin {
  Hello202$Query();

  factory Hello202$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello202$QueryFromJson(json);

  List<Hello202$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello202$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello203$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello203$Query$Launch$LaunchSite();

  factory Hello203$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello203$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello203$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello203$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello203$Query$Launch$LaunchLinks();

  factory Hello203$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello203$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello203$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello203$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello203$Query$Launch$LaunchRocket();

  factory Hello203$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello203$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello203$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello203$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello203$Query$Launch();

  factory Hello203$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello203$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello203$Query$Launch$LaunchSite? launchSite;

  Hello203$Query$Launch$LaunchLinks? links;

  Hello203$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello203$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello203$Query extends JsonSerializable with EquatableMixin {
  Hello203$Query();

  factory Hello203$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello203$QueryFromJson(json);

  List<Hello203$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello203$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello204$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello204$Query$Launch$LaunchSite();

  factory Hello204$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello204$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello204$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello204$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello204$Query$Launch$LaunchLinks();

  factory Hello204$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello204$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello204$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello204$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello204$Query$Launch$LaunchRocket();

  factory Hello204$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello204$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello204$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello204$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello204$Query$Launch();

  factory Hello204$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello204$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello204$Query$Launch$LaunchSite? launchSite;

  Hello204$Query$Launch$LaunchLinks? links;

  Hello204$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello204$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello204$Query extends JsonSerializable with EquatableMixin {
  Hello204$Query();

  factory Hello204$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello204$QueryFromJson(json);

  List<Hello204$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello204$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello205$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello205$Query$Launch$LaunchSite();

  factory Hello205$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello205$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello205$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello205$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello205$Query$Launch$LaunchLinks();

  factory Hello205$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello205$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello205$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello205$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello205$Query$Launch$LaunchRocket();

  factory Hello205$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello205$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello205$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello205$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello205$Query$Launch();

  factory Hello205$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello205$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello205$Query$Launch$LaunchSite? launchSite;

  Hello205$Query$Launch$LaunchLinks? links;

  Hello205$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello205$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello205$Query extends JsonSerializable with EquatableMixin {
  Hello205$Query();

  factory Hello205$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello205$QueryFromJson(json);

  List<Hello205$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello205$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello206$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello206$Query$Launch$LaunchSite();

  factory Hello206$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello206$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello206$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello206$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello206$Query$Launch$LaunchLinks();

  factory Hello206$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello206$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello206$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello206$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello206$Query$Launch$LaunchRocket();

  factory Hello206$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello206$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello206$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello206$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello206$Query$Launch();

  factory Hello206$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello206$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello206$Query$Launch$LaunchSite? launchSite;

  Hello206$Query$Launch$LaunchLinks? links;

  Hello206$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello206$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello206$Query extends JsonSerializable with EquatableMixin {
  Hello206$Query();

  factory Hello206$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello206$QueryFromJson(json);

  List<Hello206$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello206$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello207$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello207$Query$Launch$LaunchSite();

  factory Hello207$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello207$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello207$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello207$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello207$Query$Launch$LaunchLinks();

  factory Hello207$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello207$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello207$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello207$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello207$Query$Launch$LaunchRocket();

  factory Hello207$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello207$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello207$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello207$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello207$Query$Launch();

  factory Hello207$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello207$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello207$Query$Launch$LaunchSite? launchSite;

  Hello207$Query$Launch$LaunchLinks? links;

  Hello207$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello207$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello207$Query extends JsonSerializable with EquatableMixin {
  Hello207$Query();

  factory Hello207$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello207$QueryFromJson(json);

  List<Hello207$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello207$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello208$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello208$Query$Launch$LaunchSite();

  factory Hello208$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello208$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello208$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello208$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello208$Query$Launch$LaunchLinks();

  factory Hello208$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello208$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello208$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello208$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello208$Query$Launch$LaunchRocket();

  factory Hello208$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello208$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello208$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello208$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello208$Query$Launch();

  factory Hello208$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello208$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello208$Query$Launch$LaunchSite? launchSite;

  Hello208$Query$Launch$LaunchLinks? links;

  Hello208$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello208$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello208$Query extends JsonSerializable with EquatableMixin {
  Hello208$Query();

  factory Hello208$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello208$QueryFromJson(json);

  List<Hello208$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello208$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello209$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello209$Query$Launch$LaunchSite();

  factory Hello209$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello209$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello209$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello209$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello209$Query$Launch$LaunchLinks();

  factory Hello209$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello209$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello209$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello209$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello209$Query$Launch$LaunchRocket();

  factory Hello209$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello209$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello209$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello209$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello209$Query$Launch();

  factory Hello209$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello209$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello209$Query$Launch$LaunchSite? launchSite;

  Hello209$Query$Launch$LaunchLinks? links;

  Hello209$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello209$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello209$Query extends JsonSerializable with EquatableMixin {
  Hello209$Query();

  factory Hello209$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello209$QueryFromJson(json);

  List<Hello209$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello209$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello210$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello210$Query$Launch$LaunchSite();

  factory Hello210$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello210$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello210$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello210$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello210$Query$Launch$LaunchLinks();

  factory Hello210$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello210$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello210$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello210$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello210$Query$Launch$LaunchRocket();

  factory Hello210$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello210$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello210$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello210$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello210$Query$Launch();

  factory Hello210$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello210$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello210$Query$Launch$LaunchSite? launchSite;

  Hello210$Query$Launch$LaunchLinks? links;

  Hello210$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello210$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello210$Query extends JsonSerializable with EquatableMixin {
  Hello210$Query();

  factory Hello210$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello210$QueryFromJson(json);

  List<Hello210$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello210$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello211$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello211$Query$Launch$LaunchSite();

  factory Hello211$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello211$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello211$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello211$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello211$Query$Launch$LaunchLinks();

  factory Hello211$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello211$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello211$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello211$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello211$Query$Launch$LaunchRocket();

  factory Hello211$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello211$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello211$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello211$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello211$Query$Launch();

  factory Hello211$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello211$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello211$Query$Launch$LaunchSite? launchSite;

  Hello211$Query$Launch$LaunchLinks? links;

  Hello211$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello211$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello211$Query extends JsonSerializable with EquatableMixin {
  Hello211$Query();

  factory Hello211$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello211$QueryFromJson(json);

  List<Hello211$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello211$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello212$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello212$Query$Launch$LaunchSite();

  factory Hello212$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello212$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello212$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello212$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello212$Query$Launch$LaunchLinks();

  factory Hello212$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello212$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello212$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello212$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello212$Query$Launch$LaunchRocket();

  factory Hello212$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello212$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello212$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello212$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello212$Query$Launch();

  factory Hello212$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello212$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello212$Query$Launch$LaunchSite? launchSite;

  Hello212$Query$Launch$LaunchLinks? links;

  Hello212$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello212$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello212$Query extends JsonSerializable with EquatableMixin {
  Hello212$Query();

  factory Hello212$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello212$QueryFromJson(json);

  List<Hello212$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello212$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello213$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello213$Query$Launch$LaunchSite();

  factory Hello213$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello213$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello213$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello213$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello213$Query$Launch$LaunchLinks();

  factory Hello213$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello213$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello213$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello213$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello213$Query$Launch$LaunchRocket();

  factory Hello213$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello213$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello213$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello213$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello213$Query$Launch();

  factory Hello213$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello213$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello213$Query$Launch$LaunchSite? launchSite;

  Hello213$Query$Launch$LaunchLinks? links;

  Hello213$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello213$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello213$Query extends JsonSerializable with EquatableMixin {
  Hello213$Query();

  factory Hello213$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello213$QueryFromJson(json);

  List<Hello213$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello213$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello214$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello214$Query$Launch$LaunchSite();

  factory Hello214$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello214$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello214$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello214$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello214$Query$Launch$LaunchLinks();

  factory Hello214$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello214$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello214$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello214$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello214$Query$Launch$LaunchRocket();

  factory Hello214$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello214$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello214$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello214$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello214$Query$Launch();

  factory Hello214$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello214$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello214$Query$Launch$LaunchSite? launchSite;

  Hello214$Query$Launch$LaunchLinks? links;

  Hello214$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello214$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello214$Query extends JsonSerializable with EquatableMixin {
  Hello214$Query();

  factory Hello214$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello214$QueryFromJson(json);

  List<Hello214$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello214$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello215$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello215$Query$Launch$LaunchSite();

  factory Hello215$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello215$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello215$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello215$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello215$Query$Launch$LaunchLinks();

  factory Hello215$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello215$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello215$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello215$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello215$Query$Launch$LaunchRocket();

  factory Hello215$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello215$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello215$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello215$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello215$Query$Launch();

  factory Hello215$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello215$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello215$Query$Launch$LaunchSite? launchSite;

  Hello215$Query$Launch$LaunchLinks? links;

  Hello215$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello215$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello215$Query extends JsonSerializable with EquatableMixin {
  Hello215$Query();

  factory Hello215$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello215$QueryFromJson(json);

  List<Hello215$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello215$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello216$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello216$Query$Launch$LaunchSite();

  factory Hello216$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello216$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello216$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello216$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello216$Query$Launch$LaunchLinks();

  factory Hello216$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello216$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello216$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello216$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello216$Query$Launch$LaunchRocket();

  factory Hello216$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello216$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello216$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello216$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello216$Query$Launch();

  factory Hello216$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello216$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello216$Query$Launch$LaunchSite? launchSite;

  Hello216$Query$Launch$LaunchLinks? links;

  Hello216$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello216$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello216$Query extends JsonSerializable with EquatableMixin {
  Hello216$Query();

  factory Hello216$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello216$QueryFromJson(json);

  List<Hello216$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello216$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello217$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello217$Query$Launch$LaunchSite();

  factory Hello217$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello217$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello217$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello217$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello217$Query$Launch$LaunchLinks();

  factory Hello217$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello217$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello217$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello217$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello217$Query$Launch$LaunchRocket();

  factory Hello217$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello217$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello217$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello217$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello217$Query$Launch();

  factory Hello217$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello217$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello217$Query$Launch$LaunchSite? launchSite;

  Hello217$Query$Launch$LaunchLinks? links;

  Hello217$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello217$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello217$Query extends JsonSerializable with EquatableMixin {
  Hello217$Query();

  factory Hello217$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello217$QueryFromJson(json);

  List<Hello217$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello217$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello218$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello218$Query$Launch$LaunchSite();

  factory Hello218$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello218$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello218$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello218$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello218$Query$Launch$LaunchLinks();

  factory Hello218$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello218$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello218$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello218$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello218$Query$Launch$LaunchRocket();

  factory Hello218$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello218$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello218$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello218$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello218$Query$Launch();

  factory Hello218$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello218$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello218$Query$Launch$LaunchSite? launchSite;

  Hello218$Query$Launch$LaunchLinks? links;

  Hello218$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello218$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello218$Query extends JsonSerializable with EquatableMixin {
  Hello218$Query();

  factory Hello218$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello218$QueryFromJson(json);

  List<Hello218$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello218$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello219$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello219$Query$Launch$LaunchSite();

  factory Hello219$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello219$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello219$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello219$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello219$Query$Launch$LaunchLinks();

  factory Hello219$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello219$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello219$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello219$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello219$Query$Launch$LaunchRocket();

  factory Hello219$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello219$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello219$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello219$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello219$Query$Launch();

  factory Hello219$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello219$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello219$Query$Launch$LaunchSite? launchSite;

  Hello219$Query$Launch$LaunchLinks? links;

  Hello219$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello219$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello219$Query extends JsonSerializable with EquatableMixin {
  Hello219$Query();

  factory Hello219$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello219$QueryFromJson(json);

  List<Hello219$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello219$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello220$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello220$Query$Launch$LaunchSite();

  factory Hello220$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello220$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello220$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello220$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello220$Query$Launch$LaunchLinks();

  factory Hello220$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello220$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello220$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello220$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello220$Query$Launch$LaunchRocket();

  factory Hello220$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello220$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello220$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello220$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello220$Query$Launch();

  factory Hello220$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello220$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello220$Query$Launch$LaunchSite? launchSite;

  Hello220$Query$Launch$LaunchLinks? links;

  Hello220$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello220$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello220$Query extends JsonSerializable with EquatableMixin {
  Hello220$Query();

  factory Hello220$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello220$QueryFromJson(json);

  List<Hello220$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello220$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello221$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello221$Query$Launch$LaunchSite();

  factory Hello221$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello221$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello221$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello221$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello221$Query$Launch$LaunchLinks();

  factory Hello221$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello221$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello221$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello221$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello221$Query$Launch$LaunchRocket();

  factory Hello221$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello221$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello221$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello221$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello221$Query$Launch();

  factory Hello221$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello221$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello221$Query$Launch$LaunchSite? launchSite;

  Hello221$Query$Launch$LaunchLinks? links;

  Hello221$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello221$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello221$Query extends JsonSerializable with EquatableMixin {
  Hello221$Query();

  factory Hello221$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello221$QueryFromJson(json);

  List<Hello221$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello221$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello222$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello222$Query$Launch$LaunchSite();

  factory Hello222$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello222$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello222$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello222$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello222$Query$Launch$LaunchLinks();

  factory Hello222$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello222$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello222$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello222$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello222$Query$Launch$LaunchRocket();

  factory Hello222$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello222$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello222$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello222$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello222$Query$Launch();

  factory Hello222$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello222$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello222$Query$Launch$LaunchSite? launchSite;

  Hello222$Query$Launch$LaunchLinks? links;

  Hello222$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello222$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello222$Query extends JsonSerializable with EquatableMixin {
  Hello222$Query();

  factory Hello222$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello222$QueryFromJson(json);

  List<Hello222$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello222$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello223$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello223$Query$Launch$LaunchSite();

  factory Hello223$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello223$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello223$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello223$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello223$Query$Launch$LaunchLinks();

  factory Hello223$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello223$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello223$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello223$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello223$Query$Launch$LaunchRocket();

  factory Hello223$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello223$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello223$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello223$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello223$Query$Launch();

  factory Hello223$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello223$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello223$Query$Launch$LaunchSite? launchSite;

  Hello223$Query$Launch$LaunchLinks? links;

  Hello223$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello223$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello223$Query extends JsonSerializable with EquatableMixin {
  Hello223$Query();

  factory Hello223$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello223$QueryFromJson(json);

  List<Hello223$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello223$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello224$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello224$Query$Launch$LaunchSite();

  factory Hello224$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello224$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello224$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello224$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello224$Query$Launch$LaunchLinks();

  factory Hello224$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello224$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello224$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello224$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello224$Query$Launch$LaunchRocket();

  factory Hello224$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello224$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello224$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello224$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello224$Query$Launch();

  factory Hello224$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello224$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello224$Query$Launch$LaunchSite? launchSite;

  Hello224$Query$Launch$LaunchLinks? links;

  Hello224$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello224$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello224$Query extends JsonSerializable with EquatableMixin {
  Hello224$Query();

  factory Hello224$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello224$QueryFromJson(json);

  List<Hello224$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello224$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello225$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello225$Query$Launch$LaunchSite();

  factory Hello225$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello225$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello225$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello225$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello225$Query$Launch$LaunchLinks();

  factory Hello225$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello225$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello225$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello225$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello225$Query$Launch$LaunchRocket();

  factory Hello225$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello225$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello225$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello225$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello225$Query$Launch();

  factory Hello225$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello225$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello225$Query$Launch$LaunchSite? launchSite;

  Hello225$Query$Launch$LaunchLinks? links;

  Hello225$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello225$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello225$Query extends JsonSerializable with EquatableMixin {
  Hello225$Query();

  factory Hello225$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello225$QueryFromJson(json);

  List<Hello225$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello225$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello226$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello226$Query$Launch$LaunchSite();

  factory Hello226$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello226$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello226$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello226$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello226$Query$Launch$LaunchLinks();

  factory Hello226$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello226$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello226$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello226$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello226$Query$Launch$LaunchRocket();

  factory Hello226$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello226$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello226$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello226$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello226$Query$Launch();

  factory Hello226$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello226$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello226$Query$Launch$LaunchSite? launchSite;

  Hello226$Query$Launch$LaunchLinks? links;

  Hello226$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello226$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello226$Query extends JsonSerializable with EquatableMixin {
  Hello226$Query();

  factory Hello226$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello226$QueryFromJson(json);

  List<Hello226$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello226$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello227$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello227$Query$Launch$LaunchSite();

  factory Hello227$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello227$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello227$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello227$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello227$Query$Launch$LaunchLinks();

  factory Hello227$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello227$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello227$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello227$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello227$Query$Launch$LaunchRocket();

  factory Hello227$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello227$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello227$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello227$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello227$Query$Launch();

  factory Hello227$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello227$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello227$Query$Launch$LaunchSite? launchSite;

  Hello227$Query$Launch$LaunchLinks? links;

  Hello227$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello227$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello227$Query extends JsonSerializable with EquatableMixin {
  Hello227$Query();

  factory Hello227$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello227$QueryFromJson(json);

  List<Hello227$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello227$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello228$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello228$Query$Launch$LaunchSite();

  factory Hello228$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello228$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello228$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello228$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello228$Query$Launch$LaunchLinks();

  factory Hello228$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello228$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello228$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello228$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello228$Query$Launch$LaunchRocket();

  factory Hello228$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello228$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello228$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello228$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello228$Query$Launch();

  factory Hello228$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello228$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello228$Query$Launch$LaunchSite? launchSite;

  Hello228$Query$Launch$LaunchLinks? links;

  Hello228$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello228$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello228$Query extends JsonSerializable with EquatableMixin {
  Hello228$Query();

  factory Hello228$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello228$QueryFromJson(json);

  List<Hello228$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello228$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello229$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello229$Query$Launch$LaunchSite();

  factory Hello229$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello229$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello229$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello229$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello229$Query$Launch$LaunchLinks();

  factory Hello229$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello229$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello229$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello229$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello229$Query$Launch$LaunchRocket();

  factory Hello229$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello229$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello229$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello229$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello229$Query$Launch();

  factory Hello229$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello229$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello229$Query$Launch$LaunchSite? launchSite;

  Hello229$Query$Launch$LaunchLinks? links;

  Hello229$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello229$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello229$Query extends JsonSerializable with EquatableMixin {
  Hello229$Query();

  factory Hello229$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello229$QueryFromJson(json);

  List<Hello229$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello229$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello230$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello230$Query$Launch$LaunchSite();

  factory Hello230$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello230$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello230$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello230$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello230$Query$Launch$LaunchLinks();

  factory Hello230$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello230$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello230$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello230$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello230$Query$Launch$LaunchRocket();

  factory Hello230$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello230$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello230$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello230$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello230$Query$Launch();

  factory Hello230$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello230$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello230$Query$Launch$LaunchSite? launchSite;

  Hello230$Query$Launch$LaunchLinks? links;

  Hello230$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello230$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello230$Query extends JsonSerializable with EquatableMixin {
  Hello230$Query();

  factory Hello230$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello230$QueryFromJson(json);

  List<Hello230$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello230$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello231$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello231$Query$Launch$LaunchSite();

  factory Hello231$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello231$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello231$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello231$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello231$Query$Launch$LaunchLinks();

  factory Hello231$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello231$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello231$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello231$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello231$Query$Launch$LaunchRocket();

  factory Hello231$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello231$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello231$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello231$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello231$Query$Launch();

  factory Hello231$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello231$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello231$Query$Launch$LaunchSite? launchSite;

  Hello231$Query$Launch$LaunchLinks? links;

  Hello231$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello231$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello231$Query extends JsonSerializable with EquatableMixin {
  Hello231$Query();

  factory Hello231$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello231$QueryFromJson(json);

  List<Hello231$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello231$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello232$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello232$Query$Launch$LaunchSite();

  factory Hello232$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello232$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello232$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello232$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello232$Query$Launch$LaunchLinks();

  factory Hello232$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello232$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello232$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello232$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello232$Query$Launch$LaunchRocket();

  factory Hello232$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello232$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello232$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello232$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello232$Query$Launch();

  factory Hello232$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello232$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello232$Query$Launch$LaunchSite? launchSite;

  Hello232$Query$Launch$LaunchLinks? links;

  Hello232$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello232$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello232$Query extends JsonSerializable with EquatableMixin {
  Hello232$Query();

  factory Hello232$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello232$QueryFromJson(json);

  List<Hello232$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello232$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello233$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello233$Query$Launch$LaunchSite();

  factory Hello233$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello233$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello233$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello233$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello233$Query$Launch$LaunchLinks();

  factory Hello233$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello233$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello233$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello233$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello233$Query$Launch$LaunchRocket();

  factory Hello233$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello233$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello233$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello233$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello233$Query$Launch();

  factory Hello233$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello233$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello233$Query$Launch$LaunchSite? launchSite;

  Hello233$Query$Launch$LaunchLinks? links;

  Hello233$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello233$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello233$Query extends JsonSerializable with EquatableMixin {
  Hello233$Query();

  factory Hello233$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello233$QueryFromJson(json);

  List<Hello233$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello233$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello234$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello234$Query$Launch$LaunchSite();

  factory Hello234$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello234$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello234$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello234$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello234$Query$Launch$LaunchLinks();

  factory Hello234$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello234$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello234$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello234$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello234$Query$Launch$LaunchRocket();

  factory Hello234$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello234$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello234$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello234$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello234$Query$Launch();

  factory Hello234$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello234$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello234$Query$Launch$LaunchSite? launchSite;

  Hello234$Query$Launch$LaunchLinks? links;

  Hello234$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello234$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello234$Query extends JsonSerializable with EquatableMixin {
  Hello234$Query();

  factory Hello234$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello234$QueryFromJson(json);

  List<Hello234$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello234$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello235$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello235$Query$Launch$LaunchSite();

  factory Hello235$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello235$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello235$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello235$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello235$Query$Launch$LaunchLinks();

  factory Hello235$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello235$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello235$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello235$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello235$Query$Launch$LaunchRocket();

  factory Hello235$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello235$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello235$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello235$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello235$Query$Launch();

  factory Hello235$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello235$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello235$Query$Launch$LaunchSite? launchSite;

  Hello235$Query$Launch$LaunchLinks? links;

  Hello235$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello235$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello235$Query extends JsonSerializable with EquatableMixin {
  Hello235$Query();

  factory Hello235$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello235$QueryFromJson(json);

  List<Hello235$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello235$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello236$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello236$Query$Launch$LaunchSite();

  factory Hello236$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello236$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello236$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello236$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello236$Query$Launch$LaunchLinks();

  factory Hello236$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello236$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello236$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello236$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello236$Query$Launch$LaunchRocket();

  factory Hello236$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello236$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello236$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello236$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello236$Query$Launch();

  factory Hello236$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello236$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello236$Query$Launch$LaunchSite? launchSite;

  Hello236$Query$Launch$LaunchLinks? links;

  Hello236$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello236$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello236$Query extends JsonSerializable with EquatableMixin {
  Hello236$Query();

  factory Hello236$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello236$QueryFromJson(json);

  List<Hello236$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello236$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello237$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello237$Query$Launch$LaunchSite();

  factory Hello237$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello237$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello237$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello237$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello237$Query$Launch$LaunchLinks();

  factory Hello237$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello237$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello237$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello237$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello237$Query$Launch$LaunchRocket();

  factory Hello237$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello237$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello237$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello237$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello237$Query$Launch();

  factory Hello237$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello237$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello237$Query$Launch$LaunchSite? launchSite;

  Hello237$Query$Launch$LaunchLinks? links;

  Hello237$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello237$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello237$Query extends JsonSerializable with EquatableMixin {
  Hello237$Query();

  factory Hello237$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello237$QueryFromJson(json);

  List<Hello237$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello237$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello238$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello238$Query$Launch$LaunchSite();

  factory Hello238$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello238$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello238$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello238$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello238$Query$Launch$LaunchLinks();

  factory Hello238$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello238$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello238$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello238$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello238$Query$Launch$LaunchRocket();

  factory Hello238$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello238$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello238$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello238$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello238$Query$Launch();

  factory Hello238$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello238$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello238$Query$Launch$LaunchSite? launchSite;

  Hello238$Query$Launch$LaunchLinks? links;

  Hello238$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello238$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello238$Query extends JsonSerializable with EquatableMixin {
  Hello238$Query();

  factory Hello238$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello238$QueryFromJson(json);

  List<Hello238$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello238$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello239$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello239$Query$Launch$LaunchSite();

  factory Hello239$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello239$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello239$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello239$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello239$Query$Launch$LaunchLinks();

  factory Hello239$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello239$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello239$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello239$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello239$Query$Launch$LaunchRocket();

  factory Hello239$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello239$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello239$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello239$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello239$Query$Launch();

  factory Hello239$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello239$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello239$Query$Launch$LaunchSite? launchSite;

  Hello239$Query$Launch$LaunchLinks? links;

  Hello239$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello239$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello239$Query extends JsonSerializable with EquatableMixin {
  Hello239$Query();

  factory Hello239$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello239$QueryFromJson(json);

  List<Hello239$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello239$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello240$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello240$Query$Launch$LaunchSite();

  factory Hello240$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello240$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello240$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello240$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello240$Query$Launch$LaunchLinks();

  factory Hello240$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello240$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello240$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello240$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello240$Query$Launch$LaunchRocket();

  factory Hello240$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello240$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello240$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello240$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello240$Query$Launch();

  factory Hello240$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello240$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello240$Query$Launch$LaunchSite? launchSite;

  Hello240$Query$Launch$LaunchLinks? links;

  Hello240$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello240$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello240$Query extends JsonSerializable with EquatableMixin {
  Hello240$Query();

  factory Hello240$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello240$QueryFromJson(json);

  List<Hello240$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello240$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello241$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello241$Query$Launch$LaunchSite();

  factory Hello241$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello241$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello241$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello241$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello241$Query$Launch$LaunchLinks();

  factory Hello241$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello241$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello241$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello241$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello241$Query$Launch$LaunchRocket();

  factory Hello241$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello241$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello241$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello241$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello241$Query$Launch();

  factory Hello241$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello241$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello241$Query$Launch$LaunchSite? launchSite;

  Hello241$Query$Launch$LaunchLinks? links;

  Hello241$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello241$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello241$Query extends JsonSerializable with EquatableMixin {
  Hello241$Query();

  factory Hello241$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello241$QueryFromJson(json);

  List<Hello241$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello241$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello242$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello242$Query$Launch$LaunchSite();

  factory Hello242$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello242$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello242$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello242$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello242$Query$Launch$LaunchLinks();

  factory Hello242$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello242$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello242$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello242$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello242$Query$Launch$LaunchRocket();

  factory Hello242$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello242$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello242$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello242$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello242$Query$Launch();

  factory Hello242$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello242$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello242$Query$Launch$LaunchSite? launchSite;

  Hello242$Query$Launch$LaunchLinks? links;

  Hello242$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello242$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello242$Query extends JsonSerializable with EquatableMixin {
  Hello242$Query();

  factory Hello242$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello242$QueryFromJson(json);

  List<Hello242$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello242$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello243$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello243$Query$Launch$LaunchSite();

  factory Hello243$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello243$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello243$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello243$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello243$Query$Launch$LaunchLinks();

  factory Hello243$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello243$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello243$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello243$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello243$Query$Launch$LaunchRocket();

  factory Hello243$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello243$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello243$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello243$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello243$Query$Launch();

  factory Hello243$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello243$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello243$Query$Launch$LaunchSite? launchSite;

  Hello243$Query$Launch$LaunchLinks? links;

  Hello243$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello243$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello243$Query extends JsonSerializable with EquatableMixin {
  Hello243$Query();

  factory Hello243$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello243$QueryFromJson(json);

  List<Hello243$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello243$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello244$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello244$Query$Launch$LaunchSite();

  factory Hello244$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello244$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello244$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello244$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello244$Query$Launch$LaunchLinks();

  factory Hello244$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello244$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello244$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello244$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello244$Query$Launch$LaunchRocket();

  factory Hello244$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello244$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello244$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello244$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello244$Query$Launch();

  factory Hello244$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello244$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello244$Query$Launch$LaunchSite? launchSite;

  Hello244$Query$Launch$LaunchLinks? links;

  Hello244$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello244$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello244$Query extends JsonSerializable with EquatableMixin {
  Hello244$Query();

  factory Hello244$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello244$QueryFromJson(json);

  List<Hello244$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello244$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello245$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello245$Query$Launch$LaunchSite();

  factory Hello245$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello245$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello245$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello245$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello245$Query$Launch$LaunchLinks();

  factory Hello245$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello245$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello245$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello245$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello245$Query$Launch$LaunchRocket();

  factory Hello245$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello245$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello245$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello245$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello245$Query$Launch();

  factory Hello245$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello245$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello245$Query$Launch$LaunchSite? launchSite;

  Hello245$Query$Launch$LaunchLinks? links;

  Hello245$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello245$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello245$Query extends JsonSerializable with EquatableMixin {
  Hello245$Query();

  factory Hello245$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello245$QueryFromJson(json);

  List<Hello245$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello245$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello246$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello246$Query$Launch$LaunchSite();

  factory Hello246$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello246$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello246$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello246$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello246$Query$Launch$LaunchLinks();

  factory Hello246$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello246$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello246$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello246$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello246$Query$Launch$LaunchRocket();

  factory Hello246$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello246$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello246$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello246$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello246$Query$Launch();

  factory Hello246$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello246$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello246$Query$Launch$LaunchSite? launchSite;

  Hello246$Query$Launch$LaunchLinks? links;

  Hello246$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello246$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello246$Query extends JsonSerializable with EquatableMixin {
  Hello246$Query();

  factory Hello246$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello246$QueryFromJson(json);

  List<Hello246$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello246$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello247$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello247$Query$Launch$LaunchSite();

  factory Hello247$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello247$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello247$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello247$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello247$Query$Launch$LaunchLinks();

  factory Hello247$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello247$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello247$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello247$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello247$Query$Launch$LaunchRocket();

  factory Hello247$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello247$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello247$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello247$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello247$Query$Launch();

  factory Hello247$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello247$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello247$Query$Launch$LaunchSite? launchSite;

  Hello247$Query$Launch$LaunchLinks? links;

  Hello247$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello247$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello247$Query extends JsonSerializable with EquatableMixin {
  Hello247$Query();

  factory Hello247$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello247$QueryFromJson(json);

  List<Hello247$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello247$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello248$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello248$Query$Launch$LaunchSite();

  factory Hello248$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello248$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello248$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello248$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello248$Query$Launch$LaunchLinks();

  factory Hello248$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello248$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello248$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello248$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello248$Query$Launch$LaunchRocket();

  factory Hello248$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello248$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello248$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello248$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello248$Query$Launch();

  factory Hello248$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello248$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello248$Query$Launch$LaunchSite? launchSite;

  Hello248$Query$Launch$LaunchLinks? links;

  Hello248$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello248$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello248$Query extends JsonSerializable with EquatableMixin {
  Hello248$Query();

  factory Hello248$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello248$QueryFromJson(json);

  List<Hello248$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello248$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello249$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello249$Query$Launch$LaunchSite();

  factory Hello249$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello249$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello249$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello249$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello249$Query$Launch$LaunchLinks();

  factory Hello249$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello249$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello249$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello249$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello249$Query$Launch$LaunchRocket();

  factory Hello249$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello249$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello249$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello249$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello249$Query$Launch();

  factory Hello249$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello249$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello249$Query$Launch$LaunchSite? launchSite;

  Hello249$Query$Launch$LaunchLinks? links;

  Hello249$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello249$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello249$Query extends JsonSerializable with EquatableMixin {
  Hello249$Query();

  factory Hello249$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello249$QueryFromJson(json);

  List<Hello249$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello249$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello250$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello250$Query$Launch$LaunchSite();

  factory Hello250$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello250$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello250$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello250$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello250$Query$Launch$LaunchLinks();

  factory Hello250$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello250$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello250$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello250$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello250$Query$Launch$LaunchRocket();

  factory Hello250$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello250$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello250$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello250$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello250$Query$Launch();

  factory Hello250$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello250$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello250$Query$Launch$LaunchSite? launchSite;

  Hello250$Query$Launch$LaunchLinks? links;

  Hello250$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello250$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello250$Query extends JsonSerializable with EquatableMixin {
  Hello250$Query();

  factory Hello250$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello250$QueryFromJson(json);

  List<Hello250$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello250$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello251$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello251$Query$Launch$LaunchSite();

  factory Hello251$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello251$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello251$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello251$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello251$Query$Launch$LaunchLinks();

  factory Hello251$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello251$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello251$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello251$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello251$Query$Launch$LaunchRocket();

  factory Hello251$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello251$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello251$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello251$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello251$Query$Launch();

  factory Hello251$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello251$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello251$Query$Launch$LaunchSite? launchSite;

  Hello251$Query$Launch$LaunchLinks? links;

  Hello251$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello251$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello251$Query extends JsonSerializable with EquatableMixin {
  Hello251$Query();

  factory Hello251$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello251$QueryFromJson(json);

  List<Hello251$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello251$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello252$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello252$Query$Launch$LaunchSite();

  factory Hello252$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello252$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello252$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello252$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello252$Query$Launch$LaunchLinks();

  factory Hello252$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello252$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello252$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello252$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello252$Query$Launch$LaunchRocket();

  factory Hello252$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello252$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello252$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello252$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello252$Query$Launch();

  factory Hello252$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello252$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello252$Query$Launch$LaunchSite? launchSite;

  Hello252$Query$Launch$LaunchLinks? links;

  Hello252$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello252$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello252$Query extends JsonSerializable with EquatableMixin {
  Hello252$Query();

  factory Hello252$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello252$QueryFromJson(json);

  List<Hello252$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello252$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello253$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello253$Query$Launch$LaunchSite();

  factory Hello253$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello253$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello253$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello253$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello253$Query$Launch$LaunchLinks();

  factory Hello253$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello253$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello253$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello253$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello253$Query$Launch$LaunchRocket();

  factory Hello253$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello253$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello253$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello253$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello253$Query$Launch();

  factory Hello253$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello253$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello253$Query$Launch$LaunchSite? launchSite;

  Hello253$Query$Launch$LaunchLinks? links;

  Hello253$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello253$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello253$Query extends JsonSerializable with EquatableMixin {
  Hello253$Query();

  factory Hello253$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello253$QueryFromJson(json);

  List<Hello253$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello253$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello254$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello254$Query$Launch$LaunchSite();

  factory Hello254$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello254$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello254$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello254$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello254$Query$Launch$LaunchLinks();

  factory Hello254$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello254$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello254$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello254$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello254$Query$Launch$LaunchRocket();

  factory Hello254$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello254$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello254$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello254$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello254$Query$Launch();

  factory Hello254$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello254$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello254$Query$Launch$LaunchSite? launchSite;

  Hello254$Query$Launch$LaunchLinks? links;

  Hello254$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello254$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello254$Query extends JsonSerializable with EquatableMixin {
  Hello254$Query();

  factory Hello254$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello254$QueryFromJson(json);

  List<Hello254$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello254$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello255$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello255$Query$Launch$LaunchSite();

  factory Hello255$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello255$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello255$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello255$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello255$Query$Launch$LaunchLinks();

  factory Hello255$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello255$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello255$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello255$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello255$Query$Launch$LaunchRocket();

  factory Hello255$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello255$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello255$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello255$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello255$Query$Launch();

  factory Hello255$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello255$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello255$Query$Launch$LaunchSite? launchSite;

  Hello255$Query$Launch$LaunchLinks? links;

  Hello255$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello255$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello255$Query extends JsonSerializable with EquatableMixin {
  Hello255$Query();

  factory Hello255$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello255$QueryFromJson(json);

  List<Hello255$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello255$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello256$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello256$Query$Launch$LaunchSite();

  factory Hello256$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello256$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello256$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello256$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello256$Query$Launch$LaunchLinks();

  factory Hello256$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello256$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello256$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello256$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello256$Query$Launch$LaunchRocket();

  factory Hello256$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello256$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello256$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello256$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello256$Query$Launch();

  factory Hello256$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello256$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello256$Query$Launch$LaunchSite? launchSite;

  Hello256$Query$Launch$LaunchLinks? links;

  Hello256$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello256$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello256$Query extends JsonSerializable with EquatableMixin {
  Hello256$Query();

  factory Hello256$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello256$QueryFromJson(json);

  List<Hello256$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello256$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello257$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello257$Query$Launch$LaunchSite();

  factory Hello257$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello257$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello257$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello257$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello257$Query$Launch$LaunchLinks();

  factory Hello257$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello257$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello257$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello257$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello257$Query$Launch$LaunchRocket();

  factory Hello257$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello257$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello257$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello257$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello257$Query$Launch();

  factory Hello257$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello257$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello257$Query$Launch$LaunchSite? launchSite;

  Hello257$Query$Launch$LaunchLinks? links;

  Hello257$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello257$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello257$Query extends JsonSerializable with EquatableMixin {
  Hello257$Query();

  factory Hello257$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello257$QueryFromJson(json);

  List<Hello257$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello257$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello258$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello258$Query$Launch$LaunchSite();

  factory Hello258$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello258$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello258$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello258$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello258$Query$Launch$LaunchLinks();

  factory Hello258$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello258$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello258$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello258$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello258$Query$Launch$LaunchRocket();

  factory Hello258$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello258$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello258$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello258$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello258$Query$Launch();

  factory Hello258$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello258$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello258$Query$Launch$LaunchSite? launchSite;

  Hello258$Query$Launch$LaunchLinks? links;

  Hello258$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello258$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello258$Query extends JsonSerializable with EquatableMixin {
  Hello258$Query();

  factory Hello258$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello258$QueryFromJson(json);

  List<Hello258$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello258$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello259$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello259$Query$Launch$LaunchSite();

  factory Hello259$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello259$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello259$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello259$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello259$Query$Launch$LaunchLinks();

  factory Hello259$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello259$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello259$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello259$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello259$Query$Launch$LaunchRocket();

  factory Hello259$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello259$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello259$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello259$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello259$Query$Launch();

  factory Hello259$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello259$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello259$Query$Launch$LaunchSite? launchSite;

  Hello259$Query$Launch$LaunchLinks? links;

  Hello259$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello259$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello259$Query extends JsonSerializable with EquatableMixin {
  Hello259$Query();

  factory Hello259$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello259$QueryFromJson(json);

  List<Hello259$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello259$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello260$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello260$Query$Launch$LaunchSite();

  factory Hello260$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello260$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello260$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello260$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello260$Query$Launch$LaunchLinks();

  factory Hello260$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello260$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello260$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello260$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello260$Query$Launch$LaunchRocket();

  factory Hello260$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello260$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello260$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello260$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello260$Query$Launch();

  factory Hello260$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello260$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello260$Query$Launch$LaunchSite? launchSite;

  Hello260$Query$Launch$LaunchLinks? links;

  Hello260$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello260$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello260$Query extends JsonSerializable with EquatableMixin {
  Hello260$Query();

  factory Hello260$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello260$QueryFromJson(json);

  List<Hello260$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello260$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello261$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello261$Query$Launch$LaunchSite();

  factory Hello261$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello261$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello261$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello261$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello261$Query$Launch$LaunchLinks();

  factory Hello261$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello261$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello261$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello261$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello261$Query$Launch$LaunchRocket();

  factory Hello261$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello261$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello261$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello261$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello261$Query$Launch();

  factory Hello261$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello261$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello261$Query$Launch$LaunchSite? launchSite;

  Hello261$Query$Launch$LaunchLinks? links;

  Hello261$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello261$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello261$Query extends JsonSerializable with EquatableMixin {
  Hello261$Query();

  factory Hello261$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello261$QueryFromJson(json);

  List<Hello261$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello261$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello262$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello262$Query$Launch$LaunchSite();

  factory Hello262$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello262$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello262$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello262$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello262$Query$Launch$LaunchLinks();

  factory Hello262$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello262$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello262$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello262$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello262$Query$Launch$LaunchRocket();

  factory Hello262$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello262$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello262$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello262$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello262$Query$Launch();

  factory Hello262$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello262$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello262$Query$Launch$LaunchSite? launchSite;

  Hello262$Query$Launch$LaunchLinks? links;

  Hello262$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello262$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello262$Query extends JsonSerializable with EquatableMixin {
  Hello262$Query();

  factory Hello262$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello262$QueryFromJson(json);

  List<Hello262$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello262$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello263$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello263$Query$Launch$LaunchSite();

  factory Hello263$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello263$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello263$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello263$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello263$Query$Launch$LaunchLinks();

  factory Hello263$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello263$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello263$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello263$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello263$Query$Launch$LaunchRocket();

  factory Hello263$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello263$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello263$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello263$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello263$Query$Launch();

  factory Hello263$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello263$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello263$Query$Launch$LaunchSite? launchSite;

  Hello263$Query$Launch$LaunchLinks? links;

  Hello263$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello263$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello263$Query extends JsonSerializable with EquatableMixin {
  Hello263$Query();

  factory Hello263$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello263$QueryFromJson(json);

  List<Hello263$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello263$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello264$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello264$Query$Launch$LaunchSite();

  factory Hello264$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello264$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello264$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello264$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello264$Query$Launch$LaunchLinks();

  factory Hello264$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello264$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello264$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello264$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello264$Query$Launch$LaunchRocket();

  factory Hello264$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello264$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello264$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello264$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello264$Query$Launch();

  factory Hello264$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello264$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello264$Query$Launch$LaunchSite? launchSite;

  Hello264$Query$Launch$LaunchLinks? links;

  Hello264$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello264$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello264$Query extends JsonSerializable with EquatableMixin {
  Hello264$Query();

  factory Hello264$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello264$QueryFromJson(json);

  List<Hello264$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello264$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello265$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello265$Query$Launch$LaunchSite();

  factory Hello265$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello265$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello265$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello265$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello265$Query$Launch$LaunchLinks();

  factory Hello265$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello265$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello265$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello265$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello265$Query$Launch$LaunchRocket();

  factory Hello265$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello265$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello265$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello265$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello265$Query$Launch();

  factory Hello265$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello265$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello265$Query$Launch$LaunchSite? launchSite;

  Hello265$Query$Launch$LaunchLinks? links;

  Hello265$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello265$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello265$Query extends JsonSerializable with EquatableMixin {
  Hello265$Query();

  factory Hello265$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello265$QueryFromJson(json);

  List<Hello265$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello265$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello266$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello266$Query$Launch$LaunchSite();

  factory Hello266$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello266$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello266$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello266$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello266$Query$Launch$LaunchLinks();

  factory Hello266$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello266$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello266$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello266$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello266$Query$Launch$LaunchRocket();

  factory Hello266$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello266$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello266$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello266$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello266$Query$Launch();

  factory Hello266$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello266$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello266$Query$Launch$LaunchSite? launchSite;

  Hello266$Query$Launch$LaunchLinks? links;

  Hello266$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello266$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello266$Query extends JsonSerializable with EquatableMixin {
  Hello266$Query();

  factory Hello266$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello266$QueryFromJson(json);

  List<Hello266$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello266$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello267$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello267$Query$Launch$LaunchSite();

  factory Hello267$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello267$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello267$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello267$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello267$Query$Launch$LaunchLinks();

  factory Hello267$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello267$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello267$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello267$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello267$Query$Launch$LaunchRocket();

  factory Hello267$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello267$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello267$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello267$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello267$Query$Launch();

  factory Hello267$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello267$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello267$Query$Launch$LaunchSite? launchSite;

  Hello267$Query$Launch$LaunchLinks? links;

  Hello267$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello267$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello267$Query extends JsonSerializable with EquatableMixin {
  Hello267$Query();

  factory Hello267$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello267$QueryFromJson(json);

  List<Hello267$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello267$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello268$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello268$Query$Launch$LaunchSite();

  factory Hello268$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello268$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello268$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello268$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello268$Query$Launch$LaunchLinks();

  factory Hello268$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello268$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello268$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello268$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello268$Query$Launch$LaunchRocket();

  factory Hello268$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello268$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello268$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello268$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello268$Query$Launch();

  factory Hello268$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello268$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello268$Query$Launch$LaunchSite? launchSite;

  Hello268$Query$Launch$LaunchLinks? links;

  Hello268$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello268$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello268$Query extends JsonSerializable with EquatableMixin {
  Hello268$Query();

  factory Hello268$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello268$QueryFromJson(json);

  List<Hello268$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello268$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello269$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello269$Query$Launch$LaunchSite();

  factory Hello269$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello269$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello269$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello269$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello269$Query$Launch$LaunchLinks();

  factory Hello269$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello269$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello269$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello269$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello269$Query$Launch$LaunchRocket();

  factory Hello269$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello269$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello269$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello269$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello269$Query$Launch();

  factory Hello269$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello269$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello269$Query$Launch$LaunchSite? launchSite;

  Hello269$Query$Launch$LaunchLinks? links;

  Hello269$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello269$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello269$Query extends JsonSerializable with EquatableMixin {
  Hello269$Query();

  factory Hello269$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello269$QueryFromJson(json);

  List<Hello269$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello269$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello270$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello270$Query$Launch$LaunchSite();

  factory Hello270$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello270$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello270$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello270$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello270$Query$Launch$LaunchLinks();

  factory Hello270$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello270$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello270$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello270$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello270$Query$Launch$LaunchRocket();

  factory Hello270$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello270$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello270$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello270$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello270$Query$Launch();

  factory Hello270$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello270$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello270$Query$Launch$LaunchSite? launchSite;

  Hello270$Query$Launch$LaunchLinks? links;

  Hello270$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello270$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello270$Query extends JsonSerializable with EquatableMixin {
  Hello270$Query();

  factory Hello270$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello270$QueryFromJson(json);

  List<Hello270$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello270$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello271$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello271$Query$Launch$LaunchSite();

  factory Hello271$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello271$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello271$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello271$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello271$Query$Launch$LaunchLinks();

  factory Hello271$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello271$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello271$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello271$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello271$Query$Launch$LaunchRocket();

  factory Hello271$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello271$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello271$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello271$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello271$Query$Launch();

  factory Hello271$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello271$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello271$Query$Launch$LaunchSite? launchSite;

  Hello271$Query$Launch$LaunchLinks? links;

  Hello271$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello271$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello271$Query extends JsonSerializable with EquatableMixin {
  Hello271$Query();

  factory Hello271$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello271$QueryFromJson(json);

  List<Hello271$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello271$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello272$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello272$Query$Launch$LaunchSite();

  factory Hello272$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello272$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello272$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello272$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello272$Query$Launch$LaunchLinks();

  factory Hello272$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello272$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello272$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello272$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello272$Query$Launch$LaunchRocket();

  factory Hello272$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello272$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello272$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello272$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello272$Query$Launch();

  factory Hello272$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello272$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello272$Query$Launch$LaunchSite? launchSite;

  Hello272$Query$Launch$LaunchLinks? links;

  Hello272$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello272$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello272$Query extends JsonSerializable with EquatableMixin {
  Hello272$Query();

  factory Hello272$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello272$QueryFromJson(json);

  List<Hello272$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello272$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello273$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello273$Query$Launch$LaunchSite();

  factory Hello273$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello273$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello273$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello273$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello273$Query$Launch$LaunchLinks();

  factory Hello273$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello273$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello273$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello273$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello273$Query$Launch$LaunchRocket();

  factory Hello273$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello273$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello273$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello273$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello273$Query$Launch();

  factory Hello273$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello273$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello273$Query$Launch$LaunchSite? launchSite;

  Hello273$Query$Launch$LaunchLinks? links;

  Hello273$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello273$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello273$Query extends JsonSerializable with EquatableMixin {
  Hello273$Query();

  factory Hello273$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello273$QueryFromJson(json);

  List<Hello273$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello273$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello274$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello274$Query$Launch$LaunchSite();

  factory Hello274$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello274$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello274$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello274$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello274$Query$Launch$LaunchLinks();

  factory Hello274$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello274$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello274$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello274$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello274$Query$Launch$LaunchRocket();

  factory Hello274$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello274$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello274$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello274$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello274$Query$Launch();

  factory Hello274$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello274$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello274$Query$Launch$LaunchSite? launchSite;

  Hello274$Query$Launch$LaunchLinks? links;

  Hello274$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello274$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello274$Query extends JsonSerializable with EquatableMixin {
  Hello274$Query();

  factory Hello274$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello274$QueryFromJson(json);

  List<Hello274$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello274$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello275$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello275$Query$Launch$LaunchSite();

  factory Hello275$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello275$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello275$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello275$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello275$Query$Launch$LaunchLinks();

  factory Hello275$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello275$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello275$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello275$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello275$Query$Launch$LaunchRocket();

  factory Hello275$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello275$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello275$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello275$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello275$Query$Launch();

  factory Hello275$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello275$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello275$Query$Launch$LaunchSite? launchSite;

  Hello275$Query$Launch$LaunchLinks? links;

  Hello275$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello275$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello275$Query extends JsonSerializable with EquatableMixin {
  Hello275$Query();

  factory Hello275$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello275$QueryFromJson(json);

  List<Hello275$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello275$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello276$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello276$Query$Launch$LaunchSite();

  factory Hello276$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello276$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello276$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello276$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello276$Query$Launch$LaunchLinks();

  factory Hello276$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello276$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello276$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello276$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello276$Query$Launch$LaunchRocket();

  factory Hello276$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello276$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello276$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello276$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello276$Query$Launch();

  factory Hello276$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello276$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello276$Query$Launch$LaunchSite? launchSite;

  Hello276$Query$Launch$LaunchLinks? links;

  Hello276$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello276$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello276$Query extends JsonSerializable with EquatableMixin {
  Hello276$Query();

  factory Hello276$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello276$QueryFromJson(json);

  List<Hello276$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello276$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello277$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello277$Query$Launch$LaunchSite();

  factory Hello277$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello277$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello277$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello277$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello277$Query$Launch$LaunchLinks();

  factory Hello277$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello277$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello277$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello277$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello277$Query$Launch$LaunchRocket();

  factory Hello277$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello277$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello277$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello277$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello277$Query$Launch();

  factory Hello277$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello277$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello277$Query$Launch$LaunchSite? launchSite;

  Hello277$Query$Launch$LaunchLinks? links;

  Hello277$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello277$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello277$Query extends JsonSerializable with EquatableMixin {
  Hello277$Query();

  factory Hello277$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello277$QueryFromJson(json);

  List<Hello277$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello277$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello278$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello278$Query$Launch$LaunchSite();

  factory Hello278$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello278$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello278$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello278$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello278$Query$Launch$LaunchLinks();

  factory Hello278$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello278$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello278$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello278$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello278$Query$Launch$LaunchRocket();

  factory Hello278$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello278$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello278$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello278$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello278$Query$Launch();

  factory Hello278$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello278$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello278$Query$Launch$LaunchSite? launchSite;

  Hello278$Query$Launch$LaunchLinks? links;

  Hello278$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello278$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello278$Query extends JsonSerializable with EquatableMixin {
  Hello278$Query();

  factory Hello278$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello278$QueryFromJson(json);

  List<Hello278$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello278$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello279$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello279$Query$Launch$LaunchSite();

  factory Hello279$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello279$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello279$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello279$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello279$Query$Launch$LaunchLinks();

  factory Hello279$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello279$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello279$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello279$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello279$Query$Launch$LaunchRocket();

  factory Hello279$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello279$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello279$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello279$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello279$Query$Launch();

  factory Hello279$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello279$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello279$Query$Launch$LaunchSite? launchSite;

  Hello279$Query$Launch$LaunchLinks? links;

  Hello279$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello279$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello279$Query extends JsonSerializable with EquatableMixin {
  Hello279$Query();

  factory Hello279$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello279$QueryFromJson(json);

  List<Hello279$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello279$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello280$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello280$Query$Launch$LaunchSite();

  factory Hello280$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello280$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello280$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello280$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello280$Query$Launch$LaunchLinks();

  factory Hello280$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello280$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello280$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello280$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello280$Query$Launch$LaunchRocket();

  factory Hello280$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello280$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello280$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello280$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello280$Query$Launch();

  factory Hello280$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello280$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello280$Query$Launch$LaunchSite? launchSite;

  Hello280$Query$Launch$LaunchLinks? links;

  Hello280$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello280$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello280$Query extends JsonSerializable with EquatableMixin {
  Hello280$Query();

  factory Hello280$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello280$QueryFromJson(json);

  List<Hello280$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello280$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello281$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello281$Query$Launch$LaunchSite();

  factory Hello281$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello281$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello281$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello281$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello281$Query$Launch$LaunchLinks();

  factory Hello281$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello281$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello281$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello281$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello281$Query$Launch$LaunchRocket();

  factory Hello281$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello281$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello281$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello281$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello281$Query$Launch();

  factory Hello281$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello281$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello281$Query$Launch$LaunchSite? launchSite;

  Hello281$Query$Launch$LaunchLinks? links;

  Hello281$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello281$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello281$Query extends JsonSerializable with EquatableMixin {
  Hello281$Query();

  factory Hello281$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello281$QueryFromJson(json);

  List<Hello281$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello281$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello282$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello282$Query$Launch$LaunchSite();

  factory Hello282$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello282$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello282$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello282$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello282$Query$Launch$LaunchLinks();

  factory Hello282$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello282$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello282$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello282$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello282$Query$Launch$LaunchRocket();

  factory Hello282$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello282$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello282$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello282$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello282$Query$Launch();

  factory Hello282$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello282$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello282$Query$Launch$LaunchSite? launchSite;

  Hello282$Query$Launch$LaunchLinks? links;

  Hello282$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello282$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello282$Query extends JsonSerializable with EquatableMixin {
  Hello282$Query();

  factory Hello282$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello282$QueryFromJson(json);

  List<Hello282$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello282$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello283$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello283$Query$Launch$LaunchSite();

  factory Hello283$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello283$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello283$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello283$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello283$Query$Launch$LaunchLinks();

  factory Hello283$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello283$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello283$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello283$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello283$Query$Launch$LaunchRocket();

  factory Hello283$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello283$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello283$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello283$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello283$Query$Launch();

  factory Hello283$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello283$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello283$Query$Launch$LaunchSite? launchSite;

  Hello283$Query$Launch$LaunchLinks? links;

  Hello283$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello283$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello283$Query extends JsonSerializable with EquatableMixin {
  Hello283$Query();

  factory Hello283$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello283$QueryFromJson(json);

  List<Hello283$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello283$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello284$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello284$Query$Launch$LaunchSite();

  factory Hello284$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello284$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello284$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello284$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello284$Query$Launch$LaunchLinks();

  factory Hello284$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello284$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello284$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello284$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello284$Query$Launch$LaunchRocket();

  factory Hello284$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello284$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello284$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello284$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello284$Query$Launch();

  factory Hello284$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello284$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello284$Query$Launch$LaunchSite? launchSite;

  Hello284$Query$Launch$LaunchLinks? links;

  Hello284$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello284$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello284$Query extends JsonSerializable with EquatableMixin {
  Hello284$Query();

  factory Hello284$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello284$QueryFromJson(json);

  List<Hello284$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello284$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello285$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello285$Query$Launch$LaunchSite();

  factory Hello285$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello285$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello285$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello285$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello285$Query$Launch$LaunchLinks();

  factory Hello285$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello285$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello285$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello285$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello285$Query$Launch$LaunchRocket();

  factory Hello285$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello285$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello285$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello285$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello285$Query$Launch();

  factory Hello285$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello285$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello285$Query$Launch$LaunchSite? launchSite;

  Hello285$Query$Launch$LaunchLinks? links;

  Hello285$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello285$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello285$Query extends JsonSerializable with EquatableMixin {
  Hello285$Query();

  factory Hello285$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello285$QueryFromJson(json);

  List<Hello285$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello285$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello286$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello286$Query$Launch$LaunchSite();

  factory Hello286$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello286$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello286$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello286$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello286$Query$Launch$LaunchLinks();

  factory Hello286$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello286$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello286$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello286$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello286$Query$Launch$LaunchRocket();

  factory Hello286$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello286$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello286$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello286$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello286$Query$Launch();

  factory Hello286$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello286$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello286$Query$Launch$LaunchSite? launchSite;

  Hello286$Query$Launch$LaunchLinks? links;

  Hello286$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello286$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello286$Query extends JsonSerializable with EquatableMixin {
  Hello286$Query();

  factory Hello286$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello286$QueryFromJson(json);

  List<Hello286$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello286$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello287$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello287$Query$Launch$LaunchSite();

  factory Hello287$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello287$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello287$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello287$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello287$Query$Launch$LaunchLinks();

  factory Hello287$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello287$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello287$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello287$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello287$Query$Launch$LaunchRocket();

  factory Hello287$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello287$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello287$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello287$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello287$Query$Launch();

  factory Hello287$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello287$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello287$Query$Launch$LaunchSite? launchSite;

  Hello287$Query$Launch$LaunchLinks? links;

  Hello287$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello287$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello287$Query extends JsonSerializable with EquatableMixin {
  Hello287$Query();

  factory Hello287$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello287$QueryFromJson(json);

  List<Hello287$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello287$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello288$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello288$Query$Launch$LaunchSite();

  factory Hello288$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello288$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello288$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello288$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello288$Query$Launch$LaunchLinks();

  factory Hello288$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello288$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello288$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello288$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello288$Query$Launch$LaunchRocket();

  factory Hello288$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello288$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello288$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello288$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello288$Query$Launch();

  factory Hello288$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello288$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello288$Query$Launch$LaunchSite? launchSite;

  Hello288$Query$Launch$LaunchLinks? links;

  Hello288$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello288$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello288$Query extends JsonSerializable with EquatableMixin {
  Hello288$Query();

  factory Hello288$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello288$QueryFromJson(json);

  List<Hello288$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello288$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello289$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello289$Query$Launch$LaunchSite();

  factory Hello289$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello289$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello289$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello289$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello289$Query$Launch$LaunchLinks();

  factory Hello289$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello289$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello289$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello289$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello289$Query$Launch$LaunchRocket();

  factory Hello289$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello289$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello289$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello289$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello289$Query$Launch();

  factory Hello289$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello289$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello289$Query$Launch$LaunchSite? launchSite;

  Hello289$Query$Launch$LaunchLinks? links;

  Hello289$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello289$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello289$Query extends JsonSerializable with EquatableMixin {
  Hello289$Query();

  factory Hello289$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello289$QueryFromJson(json);

  List<Hello289$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello289$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello290$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello290$Query$Launch$LaunchSite();

  factory Hello290$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello290$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello290$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello290$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello290$Query$Launch$LaunchLinks();

  factory Hello290$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello290$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello290$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello290$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello290$Query$Launch$LaunchRocket();

  factory Hello290$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello290$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello290$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello290$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello290$Query$Launch();

  factory Hello290$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello290$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello290$Query$Launch$LaunchSite? launchSite;

  Hello290$Query$Launch$LaunchLinks? links;

  Hello290$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello290$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello290$Query extends JsonSerializable with EquatableMixin {
  Hello290$Query();

  factory Hello290$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello290$QueryFromJson(json);

  List<Hello290$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello290$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello291$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello291$Query$Launch$LaunchSite();

  factory Hello291$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello291$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello291$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello291$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello291$Query$Launch$LaunchLinks();

  factory Hello291$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello291$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello291$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello291$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello291$Query$Launch$LaunchRocket();

  factory Hello291$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello291$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello291$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello291$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello291$Query$Launch();

  factory Hello291$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello291$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello291$Query$Launch$LaunchSite? launchSite;

  Hello291$Query$Launch$LaunchLinks? links;

  Hello291$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello291$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello291$Query extends JsonSerializable with EquatableMixin {
  Hello291$Query();

  factory Hello291$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello291$QueryFromJson(json);

  List<Hello291$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello291$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello292$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello292$Query$Launch$LaunchSite();

  factory Hello292$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello292$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello292$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello292$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello292$Query$Launch$LaunchLinks();

  factory Hello292$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello292$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello292$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello292$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello292$Query$Launch$LaunchRocket();

  factory Hello292$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello292$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello292$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello292$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello292$Query$Launch();

  factory Hello292$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello292$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello292$Query$Launch$LaunchSite? launchSite;

  Hello292$Query$Launch$LaunchLinks? links;

  Hello292$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello292$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello292$Query extends JsonSerializable with EquatableMixin {
  Hello292$Query();

  factory Hello292$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello292$QueryFromJson(json);

  List<Hello292$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello292$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello293$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello293$Query$Launch$LaunchSite();

  factory Hello293$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello293$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello293$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello293$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello293$Query$Launch$LaunchLinks();

  factory Hello293$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello293$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello293$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello293$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello293$Query$Launch$LaunchRocket();

  factory Hello293$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello293$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello293$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello293$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello293$Query$Launch();

  factory Hello293$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello293$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello293$Query$Launch$LaunchSite? launchSite;

  Hello293$Query$Launch$LaunchLinks? links;

  Hello293$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello293$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello293$Query extends JsonSerializable with EquatableMixin {
  Hello293$Query();

  factory Hello293$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello293$QueryFromJson(json);

  List<Hello293$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello293$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello294$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello294$Query$Launch$LaunchSite();

  factory Hello294$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello294$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello294$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello294$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello294$Query$Launch$LaunchLinks();

  factory Hello294$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello294$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello294$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello294$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello294$Query$Launch$LaunchRocket();

  factory Hello294$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello294$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello294$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello294$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello294$Query$Launch();

  factory Hello294$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello294$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello294$Query$Launch$LaunchSite? launchSite;

  Hello294$Query$Launch$LaunchLinks? links;

  Hello294$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello294$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello294$Query extends JsonSerializable with EquatableMixin {
  Hello294$Query();

  factory Hello294$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello294$QueryFromJson(json);

  List<Hello294$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello294$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello295$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello295$Query$Launch$LaunchSite();

  factory Hello295$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello295$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello295$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello295$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello295$Query$Launch$LaunchLinks();

  factory Hello295$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello295$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello295$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello295$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello295$Query$Launch$LaunchRocket();

  factory Hello295$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello295$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello295$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello295$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello295$Query$Launch();

  factory Hello295$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello295$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello295$Query$Launch$LaunchSite? launchSite;

  Hello295$Query$Launch$LaunchLinks? links;

  Hello295$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello295$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello295$Query extends JsonSerializable with EquatableMixin {
  Hello295$Query();

  factory Hello295$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello295$QueryFromJson(json);

  List<Hello295$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello295$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello296$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello296$Query$Launch$LaunchSite();

  factory Hello296$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello296$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello296$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello296$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello296$Query$Launch$LaunchLinks();

  factory Hello296$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello296$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello296$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello296$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello296$Query$Launch$LaunchRocket();

  factory Hello296$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello296$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello296$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello296$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello296$Query$Launch();

  factory Hello296$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello296$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello296$Query$Launch$LaunchSite? launchSite;

  Hello296$Query$Launch$LaunchLinks? links;

  Hello296$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello296$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello296$Query extends JsonSerializable with EquatableMixin {
  Hello296$Query();

  factory Hello296$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello296$QueryFromJson(json);

  List<Hello296$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello296$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello297$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello297$Query$Launch$LaunchSite();

  factory Hello297$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello297$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello297$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello297$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello297$Query$Launch$LaunchLinks();

  factory Hello297$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello297$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello297$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello297$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello297$Query$Launch$LaunchRocket();

  factory Hello297$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello297$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello297$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello297$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello297$Query$Launch();

  factory Hello297$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello297$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello297$Query$Launch$LaunchSite? launchSite;

  Hello297$Query$Launch$LaunchLinks? links;

  Hello297$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello297$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello297$Query extends JsonSerializable with EquatableMixin {
  Hello297$Query();

  factory Hello297$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello297$QueryFromJson(json);

  List<Hello297$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello297$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello298$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello298$Query$Launch$LaunchSite();

  factory Hello298$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello298$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello298$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello298$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello298$Query$Launch$LaunchLinks();

  factory Hello298$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello298$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello298$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello298$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello298$Query$Launch$LaunchRocket();

  factory Hello298$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello298$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello298$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello298$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello298$Query$Launch();

  factory Hello298$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello298$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello298$Query$Launch$LaunchSite? launchSite;

  Hello298$Query$Launch$LaunchLinks? links;

  Hello298$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello298$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello298$Query extends JsonSerializable with EquatableMixin {
  Hello298$Query();

  factory Hello298$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello298$QueryFromJson(json);

  List<Hello298$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello298$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello299$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello299$Query$Launch$LaunchSite();

  factory Hello299$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello299$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello299$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello299$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello299$Query$Launch$LaunchLinks();

  factory Hello299$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello299$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello299$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello299$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello299$Query$Launch$LaunchRocket();

  factory Hello299$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello299$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello299$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello299$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello299$Query$Launch();

  factory Hello299$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello299$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello299$Query$Launch$LaunchSite? launchSite;

  Hello299$Query$Launch$LaunchLinks? links;

  Hello299$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello299$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello299$Query extends JsonSerializable with EquatableMixin {
  Hello299$Query();

  factory Hello299$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello299$QueryFromJson(json);

  List<Hello299$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello299$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello300$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello300$Query$Launch$LaunchSite();

  factory Hello300$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello300$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello300$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello300$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello300$Query$Launch$LaunchLinks();

  factory Hello300$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello300$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello300$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello300$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello300$Query$Launch$LaunchRocket();

  factory Hello300$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello300$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello300$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello300$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello300$Query$Launch();

  factory Hello300$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello300$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello300$Query$Launch$LaunchSite? launchSite;

  Hello300$Query$Launch$LaunchLinks? links;

  Hello300$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello300$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello300$Query extends JsonSerializable with EquatableMixin {
  Hello300$Query();

  factory Hello300$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello300$QueryFromJson(json);

  List<Hello300$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello300$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello301$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello301$Query$Launch$LaunchSite();

  factory Hello301$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello301$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello301$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello301$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello301$Query$Launch$LaunchLinks();

  factory Hello301$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello301$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello301$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello301$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello301$Query$Launch$LaunchRocket();

  factory Hello301$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello301$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello301$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello301$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello301$Query$Launch();

  factory Hello301$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello301$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello301$Query$Launch$LaunchSite? launchSite;

  Hello301$Query$Launch$LaunchLinks? links;

  Hello301$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello301$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello301$Query extends JsonSerializable with EquatableMixin {
  Hello301$Query();

  factory Hello301$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello301$QueryFromJson(json);

  List<Hello301$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello301$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello302$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello302$Query$Launch$LaunchSite();

  factory Hello302$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello302$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello302$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello302$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello302$Query$Launch$LaunchLinks();

  factory Hello302$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello302$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello302$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello302$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello302$Query$Launch$LaunchRocket();

  factory Hello302$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello302$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello302$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello302$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello302$Query$Launch();

  factory Hello302$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello302$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello302$Query$Launch$LaunchSite? launchSite;

  Hello302$Query$Launch$LaunchLinks? links;

  Hello302$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello302$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello302$Query extends JsonSerializable with EquatableMixin {
  Hello302$Query();

  factory Hello302$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello302$QueryFromJson(json);

  List<Hello302$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello302$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello303$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello303$Query$Launch$LaunchSite();

  factory Hello303$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello303$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello303$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello303$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello303$Query$Launch$LaunchLinks();

  factory Hello303$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello303$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello303$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello303$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello303$Query$Launch$LaunchRocket();

  factory Hello303$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello303$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello303$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello303$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello303$Query$Launch();

  factory Hello303$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello303$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello303$Query$Launch$LaunchSite? launchSite;

  Hello303$Query$Launch$LaunchLinks? links;

  Hello303$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello303$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello303$Query extends JsonSerializable with EquatableMixin {
  Hello303$Query();

  factory Hello303$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello303$QueryFromJson(json);

  List<Hello303$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello303$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello304$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello304$Query$Launch$LaunchSite();

  factory Hello304$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello304$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello304$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello304$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello304$Query$Launch$LaunchLinks();

  factory Hello304$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello304$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello304$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello304$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello304$Query$Launch$LaunchRocket();

  factory Hello304$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello304$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello304$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello304$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello304$Query$Launch();

  factory Hello304$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello304$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello304$Query$Launch$LaunchSite? launchSite;

  Hello304$Query$Launch$LaunchLinks? links;

  Hello304$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello304$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello304$Query extends JsonSerializable with EquatableMixin {
  Hello304$Query();

  factory Hello304$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello304$QueryFromJson(json);

  List<Hello304$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello304$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello305$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello305$Query$Launch$LaunchSite();

  factory Hello305$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello305$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello305$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello305$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello305$Query$Launch$LaunchLinks();

  factory Hello305$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello305$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello305$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello305$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello305$Query$Launch$LaunchRocket();

  factory Hello305$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello305$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello305$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello305$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello305$Query$Launch();

  factory Hello305$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello305$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello305$Query$Launch$LaunchSite? launchSite;

  Hello305$Query$Launch$LaunchLinks? links;

  Hello305$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello305$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello305$Query extends JsonSerializable with EquatableMixin {
  Hello305$Query();

  factory Hello305$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello305$QueryFromJson(json);

  List<Hello305$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello305$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello306$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello306$Query$Launch$LaunchSite();

  factory Hello306$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello306$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello306$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello306$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello306$Query$Launch$LaunchLinks();

  factory Hello306$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello306$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello306$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello306$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello306$Query$Launch$LaunchRocket();

  factory Hello306$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello306$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello306$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello306$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello306$Query$Launch();

  factory Hello306$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello306$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello306$Query$Launch$LaunchSite? launchSite;

  Hello306$Query$Launch$LaunchLinks? links;

  Hello306$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello306$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello306$Query extends JsonSerializable with EquatableMixin {
  Hello306$Query();

  factory Hello306$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello306$QueryFromJson(json);

  List<Hello306$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello306$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello307$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello307$Query$Launch$LaunchSite();

  factory Hello307$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello307$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello307$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello307$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello307$Query$Launch$LaunchLinks();

  factory Hello307$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello307$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello307$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello307$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello307$Query$Launch$LaunchRocket();

  factory Hello307$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello307$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello307$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello307$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello307$Query$Launch();

  factory Hello307$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello307$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello307$Query$Launch$LaunchSite? launchSite;

  Hello307$Query$Launch$LaunchLinks? links;

  Hello307$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello307$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello307$Query extends JsonSerializable with EquatableMixin {
  Hello307$Query();

  factory Hello307$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello307$QueryFromJson(json);

  List<Hello307$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello307$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello308$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello308$Query$Launch$LaunchSite();

  factory Hello308$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello308$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello308$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello308$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello308$Query$Launch$LaunchLinks();

  factory Hello308$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello308$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello308$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello308$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello308$Query$Launch$LaunchRocket();

  factory Hello308$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello308$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello308$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello308$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello308$Query$Launch();

  factory Hello308$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello308$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello308$Query$Launch$LaunchSite? launchSite;

  Hello308$Query$Launch$LaunchLinks? links;

  Hello308$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello308$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello308$Query extends JsonSerializable with EquatableMixin {
  Hello308$Query();

  factory Hello308$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello308$QueryFromJson(json);

  List<Hello308$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello308$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello309$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello309$Query$Launch$LaunchSite();

  factory Hello309$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello309$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello309$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello309$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello309$Query$Launch$LaunchLinks();

  factory Hello309$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello309$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello309$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello309$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello309$Query$Launch$LaunchRocket();

  factory Hello309$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello309$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello309$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello309$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello309$Query$Launch();

  factory Hello309$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello309$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello309$Query$Launch$LaunchSite? launchSite;

  Hello309$Query$Launch$LaunchLinks? links;

  Hello309$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello309$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello309$Query extends JsonSerializable with EquatableMixin {
  Hello309$Query();

  factory Hello309$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello309$QueryFromJson(json);

  List<Hello309$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello309$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello310$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello310$Query$Launch$LaunchSite();

  factory Hello310$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello310$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello310$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello310$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello310$Query$Launch$LaunchLinks();

  factory Hello310$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello310$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello310$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello310$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello310$Query$Launch$LaunchRocket();

  factory Hello310$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello310$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello310$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello310$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello310$Query$Launch();

  factory Hello310$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello310$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello310$Query$Launch$LaunchSite? launchSite;

  Hello310$Query$Launch$LaunchLinks? links;

  Hello310$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello310$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello310$Query extends JsonSerializable with EquatableMixin {
  Hello310$Query();

  factory Hello310$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello310$QueryFromJson(json);

  List<Hello310$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello310$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello311$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello311$Query$Launch$LaunchSite();

  factory Hello311$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello311$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello311$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello311$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello311$Query$Launch$LaunchLinks();

  factory Hello311$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello311$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello311$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello311$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello311$Query$Launch$LaunchRocket();

  factory Hello311$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello311$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello311$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello311$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello311$Query$Launch();

  factory Hello311$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello311$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello311$Query$Launch$LaunchSite? launchSite;

  Hello311$Query$Launch$LaunchLinks? links;

  Hello311$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello311$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello311$Query extends JsonSerializable with EquatableMixin {
  Hello311$Query();

  factory Hello311$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello311$QueryFromJson(json);

  List<Hello311$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello311$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello312$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello312$Query$Launch$LaunchSite();

  factory Hello312$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello312$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello312$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello312$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello312$Query$Launch$LaunchLinks();

  factory Hello312$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello312$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello312$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello312$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello312$Query$Launch$LaunchRocket();

  factory Hello312$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello312$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello312$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello312$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello312$Query$Launch();

  factory Hello312$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello312$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello312$Query$Launch$LaunchSite? launchSite;

  Hello312$Query$Launch$LaunchLinks? links;

  Hello312$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello312$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello312$Query extends JsonSerializable with EquatableMixin {
  Hello312$Query();

  factory Hello312$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello312$QueryFromJson(json);

  List<Hello312$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello312$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello313$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello313$Query$Launch$LaunchSite();

  factory Hello313$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello313$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello313$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello313$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello313$Query$Launch$LaunchLinks();

  factory Hello313$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello313$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello313$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello313$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello313$Query$Launch$LaunchRocket();

  factory Hello313$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello313$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello313$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello313$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello313$Query$Launch();

  factory Hello313$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello313$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello313$Query$Launch$LaunchSite? launchSite;

  Hello313$Query$Launch$LaunchLinks? links;

  Hello313$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello313$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello313$Query extends JsonSerializable with EquatableMixin {
  Hello313$Query();

  factory Hello313$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello313$QueryFromJson(json);

  List<Hello313$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello313$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello314$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello314$Query$Launch$LaunchSite();

  factory Hello314$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello314$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello314$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello314$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello314$Query$Launch$LaunchLinks();

  factory Hello314$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello314$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello314$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello314$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello314$Query$Launch$LaunchRocket();

  factory Hello314$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello314$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello314$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello314$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello314$Query$Launch();

  factory Hello314$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello314$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello314$Query$Launch$LaunchSite? launchSite;

  Hello314$Query$Launch$LaunchLinks? links;

  Hello314$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello314$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello314$Query extends JsonSerializable with EquatableMixin {
  Hello314$Query();

  factory Hello314$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello314$QueryFromJson(json);

  List<Hello314$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello314$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello315$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello315$Query$Launch$LaunchSite();

  factory Hello315$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello315$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello315$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello315$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello315$Query$Launch$LaunchLinks();

  factory Hello315$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello315$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello315$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello315$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello315$Query$Launch$LaunchRocket();

  factory Hello315$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello315$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello315$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello315$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello315$Query$Launch();

  factory Hello315$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello315$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello315$Query$Launch$LaunchSite? launchSite;

  Hello315$Query$Launch$LaunchLinks? links;

  Hello315$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello315$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello315$Query extends JsonSerializable with EquatableMixin {
  Hello315$Query();

  factory Hello315$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello315$QueryFromJson(json);

  List<Hello315$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello315$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello316$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello316$Query$Launch$LaunchSite();

  factory Hello316$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello316$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello316$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello316$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello316$Query$Launch$LaunchLinks();

  factory Hello316$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello316$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello316$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello316$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello316$Query$Launch$LaunchRocket();

  factory Hello316$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello316$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello316$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello316$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello316$Query$Launch();

  factory Hello316$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello316$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello316$Query$Launch$LaunchSite? launchSite;

  Hello316$Query$Launch$LaunchLinks? links;

  Hello316$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello316$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello316$Query extends JsonSerializable with EquatableMixin {
  Hello316$Query();

  factory Hello316$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello316$QueryFromJson(json);

  List<Hello316$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello316$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello317$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello317$Query$Launch$LaunchSite();

  factory Hello317$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello317$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello317$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello317$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello317$Query$Launch$LaunchLinks();

  factory Hello317$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello317$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello317$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello317$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello317$Query$Launch$LaunchRocket();

  factory Hello317$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello317$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello317$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello317$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello317$Query$Launch();

  factory Hello317$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello317$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello317$Query$Launch$LaunchSite? launchSite;

  Hello317$Query$Launch$LaunchLinks? links;

  Hello317$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello317$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello317$Query extends JsonSerializable with EquatableMixin {
  Hello317$Query();

  factory Hello317$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello317$QueryFromJson(json);

  List<Hello317$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello317$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello318$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello318$Query$Launch$LaunchSite();

  factory Hello318$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello318$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello318$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello318$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello318$Query$Launch$LaunchLinks();

  factory Hello318$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello318$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello318$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello318$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello318$Query$Launch$LaunchRocket();

  factory Hello318$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello318$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello318$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello318$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello318$Query$Launch();

  factory Hello318$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello318$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello318$Query$Launch$LaunchSite? launchSite;

  Hello318$Query$Launch$LaunchLinks? links;

  Hello318$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello318$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello318$Query extends JsonSerializable with EquatableMixin {
  Hello318$Query();

  factory Hello318$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello318$QueryFromJson(json);

  List<Hello318$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello318$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello319$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello319$Query$Launch$LaunchSite();

  factory Hello319$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello319$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello319$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello319$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello319$Query$Launch$LaunchLinks();

  factory Hello319$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello319$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello319$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello319$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello319$Query$Launch$LaunchRocket();

  factory Hello319$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello319$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello319$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello319$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello319$Query$Launch();

  factory Hello319$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello319$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello319$Query$Launch$LaunchSite? launchSite;

  Hello319$Query$Launch$LaunchLinks? links;

  Hello319$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello319$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello319$Query extends JsonSerializable with EquatableMixin {
  Hello319$Query();

  factory Hello319$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello319$QueryFromJson(json);

  List<Hello319$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello319$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello320$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello320$Query$Launch$LaunchSite();

  factory Hello320$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello320$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello320$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello320$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello320$Query$Launch$LaunchLinks();

  factory Hello320$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello320$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello320$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello320$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello320$Query$Launch$LaunchRocket();

  factory Hello320$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello320$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello320$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello320$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello320$Query$Launch();

  factory Hello320$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello320$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello320$Query$Launch$LaunchSite? launchSite;

  Hello320$Query$Launch$LaunchLinks? links;

  Hello320$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello320$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello320$Query extends JsonSerializable with EquatableMixin {
  Hello320$Query();

  factory Hello320$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello320$QueryFromJson(json);

  List<Hello320$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello320$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello321$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello321$Query$Launch$LaunchSite();

  factory Hello321$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello321$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello321$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello321$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello321$Query$Launch$LaunchLinks();

  factory Hello321$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello321$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello321$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello321$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello321$Query$Launch$LaunchRocket();

  factory Hello321$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello321$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello321$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello321$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello321$Query$Launch();

  factory Hello321$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello321$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello321$Query$Launch$LaunchSite? launchSite;

  Hello321$Query$Launch$LaunchLinks? links;

  Hello321$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello321$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello321$Query extends JsonSerializable with EquatableMixin {
  Hello321$Query();

  factory Hello321$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello321$QueryFromJson(json);

  List<Hello321$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello321$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello322$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello322$Query$Launch$LaunchSite();

  factory Hello322$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello322$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello322$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello322$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello322$Query$Launch$LaunchLinks();

  factory Hello322$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello322$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello322$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello322$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello322$Query$Launch$LaunchRocket();

  factory Hello322$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello322$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello322$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello322$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello322$Query$Launch();

  factory Hello322$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello322$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello322$Query$Launch$LaunchSite? launchSite;

  Hello322$Query$Launch$LaunchLinks? links;

  Hello322$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello322$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello322$Query extends JsonSerializable with EquatableMixin {
  Hello322$Query();

  factory Hello322$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello322$QueryFromJson(json);

  List<Hello322$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello322$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello323$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello323$Query$Launch$LaunchSite();

  factory Hello323$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello323$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello323$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello323$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello323$Query$Launch$LaunchLinks();

  factory Hello323$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello323$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello323$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello323$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello323$Query$Launch$LaunchRocket();

  factory Hello323$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello323$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello323$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello323$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello323$Query$Launch();

  factory Hello323$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello323$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello323$Query$Launch$LaunchSite? launchSite;

  Hello323$Query$Launch$LaunchLinks? links;

  Hello323$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello323$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello323$Query extends JsonSerializable with EquatableMixin {
  Hello323$Query();

  factory Hello323$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello323$QueryFromJson(json);

  List<Hello323$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello323$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello324$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello324$Query$Launch$LaunchSite();

  factory Hello324$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello324$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello324$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello324$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello324$Query$Launch$LaunchLinks();

  factory Hello324$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello324$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello324$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello324$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello324$Query$Launch$LaunchRocket();

  factory Hello324$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello324$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello324$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello324$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello324$Query$Launch();

  factory Hello324$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello324$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello324$Query$Launch$LaunchSite? launchSite;

  Hello324$Query$Launch$LaunchLinks? links;

  Hello324$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello324$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello324$Query extends JsonSerializable with EquatableMixin {
  Hello324$Query();

  factory Hello324$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello324$QueryFromJson(json);

  List<Hello324$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello324$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello325$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello325$Query$Launch$LaunchSite();

  factory Hello325$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello325$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello325$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello325$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello325$Query$Launch$LaunchLinks();

  factory Hello325$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello325$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello325$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello325$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello325$Query$Launch$LaunchRocket();

  factory Hello325$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello325$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello325$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello325$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello325$Query$Launch();

  factory Hello325$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello325$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello325$Query$Launch$LaunchSite? launchSite;

  Hello325$Query$Launch$LaunchLinks? links;

  Hello325$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello325$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello325$Query extends JsonSerializable with EquatableMixin {
  Hello325$Query();

  factory Hello325$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello325$QueryFromJson(json);

  List<Hello325$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello325$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello326$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello326$Query$Launch$LaunchSite();

  factory Hello326$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello326$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello326$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello326$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello326$Query$Launch$LaunchLinks();

  factory Hello326$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello326$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello326$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello326$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello326$Query$Launch$LaunchRocket();

  factory Hello326$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello326$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello326$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello326$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello326$Query$Launch();

  factory Hello326$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello326$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello326$Query$Launch$LaunchSite? launchSite;

  Hello326$Query$Launch$LaunchLinks? links;

  Hello326$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello326$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello326$Query extends JsonSerializable with EquatableMixin {
  Hello326$Query();

  factory Hello326$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello326$QueryFromJson(json);

  List<Hello326$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello326$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello327$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello327$Query$Launch$LaunchSite();

  factory Hello327$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello327$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello327$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello327$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello327$Query$Launch$LaunchLinks();

  factory Hello327$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello327$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello327$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello327$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello327$Query$Launch$LaunchRocket();

  factory Hello327$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello327$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello327$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello327$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello327$Query$Launch();

  factory Hello327$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello327$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello327$Query$Launch$LaunchSite? launchSite;

  Hello327$Query$Launch$LaunchLinks? links;

  Hello327$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello327$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello327$Query extends JsonSerializable with EquatableMixin {
  Hello327$Query();

  factory Hello327$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello327$QueryFromJson(json);

  List<Hello327$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello327$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello328$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello328$Query$Launch$LaunchSite();

  factory Hello328$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello328$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello328$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello328$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello328$Query$Launch$LaunchLinks();

  factory Hello328$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello328$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello328$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello328$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello328$Query$Launch$LaunchRocket();

  factory Hello328$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello328$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello328$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello328$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello328$Query$Launch();

  factory Hello328$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello328$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello328$Query$Launch$LaunchSite? launchSite;

  Hello328$Query$Launch$LaunchLinks? links;

  Hello328$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello328$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello328$Query extends JsonSerializable with EquatableMixin {
  Hello328$Query();

  factory Hello328$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello328$QueryFromJson(json);

  List<Hello328$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello328$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello329$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello329$Query$Launch$LaunchSite();

  factory Hello329$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello329$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello329$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello329$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello329$Query$Launch$LaunchLinks();

  factory Hello329$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello329$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello329$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello329$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello329$Query$Launch$LaunchRocket();

  factory Hello329$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello329$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello329$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello329$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello329$Query$Launch();

  factory Hello329$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello329$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello329$Query$Launch$LaunchSite? launchSite;

  Hello329$Query$Launch$LaunchLinks? links;

  Hello329$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello329$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello329$Query extends JsonSerializable with EquatableMixin {
  Hello329$Query();

  factory Hello329$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello329$QueryFromJson(json);

  List<Hello329$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello329$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello330$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello330$Query$Launch$LaunchSite();

  factory Hello330$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello330$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello330$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello330$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello330$Query$Launch$LaunchLinks();

  factory Hello330$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello330$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello330$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello330$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello330$Query$Launch$LaunchRocket();

  factory Hello330$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello330$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello330$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello330$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello330$Query$Launch();

  factory Hello330$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello330$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello330$Query$Launch$LaunchSite? launchSite;

  Hello330$Query$Launch$LaunchLinks? links;

  Hello330$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello330$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello330$Query extends JsonSerializable with EquatableMixin {
  Hello330$Query();

  factory Hello330$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello330$QueryFromJson(json);

  List<Hello330$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello330$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello331$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello331$Query$Launch$LaunchSite();

  factory Hello331$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello331$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello331$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello331$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello331$Query$Launch$LaunchLinks();

  factory Hello331$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello331$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello331$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello331$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello331$Query$Launch$LaunchRocket();

  factory Hello331$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello331$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello331$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello331$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello331$Query$Launch();

  factory Hello331$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello331$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello331$Query$Launch$LaunchSite? launchSite;

  Hello331$Query$Launch$LaunchLinks? links;

  Hello331$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello331$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello331$Query extends JsonSerializable with EquatableMixin {
  Hello331$Query();

  factory Hello331$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello331$QueryFromJson(json);

  List<Hello331$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello331$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello332$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello332$Query$Launch$LaunchSite();

  factory Hello332$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello332$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello332$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello332$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello332$Query$Launch$LaunchLinks();

  factory Hello332$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello332$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello332$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello332$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello332$Query$Launch$LaunchRocket();

  factory Hello332$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello332$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello332$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello332$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello332$Query$Launch();

  factory Hello332$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello332$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello332$Query$Launch$LaunchSite? launchSite;

  Hello332$Query$Launch$LaunchLinks? links;

  Hello332$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello332$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello332$Query extends JsonSerializable with EquatableMixin {
  Hello332$Query();

  factory Hello332$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello332$QueryFromJson(json);

  List<Hello332$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello332$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello333$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello333$Query$Launch$LaunchSite();

  factory Hello333$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello333$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello333$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello333$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello333$Query$Launch$LaunchLinks();

  factory Hello333$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello333$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello333$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello333$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello333$Query$Launch$LaunchRocket();

  factory Hello333$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello333$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello333$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello333$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello333$Query$Launch();

  factory Hello333$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello333$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello333$Query$Launch$LaunchSite? launchSite;

  Hello333$Query$Launch$LaunchLinks? links;

  Hello333$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello333$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello333$Query extends JsonSerializable with EquatableMixin {
  Hello333$Query();

  factory Hello333$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello333$QueryFromJson(json);

  List<Hello333$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello333$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello334$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello334$Query$Launch$LaunchSite();

  factory Hello334$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello334$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello334$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello334$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello334$Query$Launch$LaunchLinks();

  factory Hello334$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello334$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello334$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello334$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello334$Query$Launch$LaunchRocket();

  factory Hello334$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello334$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello334$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello334$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello334$Query$Launch();

  factory Hello334$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello334$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello334$Query$Launch$LaunchSite? launchSite;

  Hello334$Query$Launch$LaunchLinks? links;

  Hello334$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello334$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello334$Query extends JsonSerializable with EquatableMixin {
  Hello334$Query();

  factory Hello334$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello334$QueryFromJson(json);

  List<Hello334$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello334$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello335$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello335$Query$Launch$LaunchSite();

  factory Hello335$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello335$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello335$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello335$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello335$Query$Launch$LaunchLinks();

  factory Hello335$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello335$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello335$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello335$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello335$Query$Launch$LaunchRocket();

  factory Hello335$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello335$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello335$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello335$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello335$Query$Launch();

  factory Hello335$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello335$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello335$Query$Launch$LaunchSite? launchSite;

  Hello335$Query$Launch$LaunchLinks? links;

  Hello335$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello335$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello335$Query extends JsonSerializable with EquatableMixin {
  Hello335$Query();

  factory Hello335$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello335$QueryFromJson(json);

  List<Hello335$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello335$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello336$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello336$Query$Launch$LaunchSite();

  factory Hello336$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello336$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello336$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello336$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello336$Query$Launch$LaunchLinks();

  factory Hello336$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello336$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello336$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello336$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello336$Query$Launch$LaunchRocket();

  factory Hello336$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello336$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello336$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello336$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello336$Query$Launch();

  factory Hello336$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello336$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello336$Query$Launch$LaunchSite? launchSite;

  Hello336$Query$Launch$LaunchLinks? links;

  Hello336$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello336$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello336$Query extends JsonSerializable with EquatableMixin {
  Hello336$Query();

  factory Hello336$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello336$QueryFromJson(json);

  List<Hello336$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello336$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello337$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello337$Query$Launch$LaunchSite();

  factory Hello337$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello337$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello337$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello337$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello337$Query$Launch$LaunchLinks();

  factory Hello337$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello337$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello337$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello337$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello337$Query$Launch$LaunchRocket();

  factory Hello337$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello337$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello337$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello337$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello337$Query$Launch();

  factory Hello337$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello337$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello337$Query$Launch$LaunchSite? launchSite;

  Hello337$Query$Launch$LaunchLinks? links;

  Hello337$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello337$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello337$Query extends JsonSerializable with EquatableMixin {
  Hello337$Query();

  factory Hello337$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello337$QueryFromJson(json);

  List<Hello337$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello337$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello338$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello338$Query$Launch$LaunchSite();

  factory Hello338$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello338$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello338$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello338$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello338$Query$Launch$LaunchLinks();

  factory Hello338$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello338$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello338$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello338$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello338$Query$Launch$LaunchRocket();

  factory Hello338$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello338$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello338$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello338$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello338$Query$Launch();

  factory Hello338$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello338$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello338$Query$Launch$LaunchSite? launchSite;

  Hello338$Query$Launch$LaunchLinks? links;

  Hello338$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello338$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello338$Query extends JsonSerializable with EquatableMixin {
  Hello338$Query();

  factory Hello338$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello338$QueryFromJson(json);

  List<Hello338$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello338$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello339$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello339$Query$Launch$LaunchSite();

  factory Hello339$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello339$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello339$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello339$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello339$Query$Launch$LaunchLinks();

  factory Hello339$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello339$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello339$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello339$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello339$Query$Launch$LaunchRocket();

  factory Hello339$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello339$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello339$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello339$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello339$Query$Launch();

  factory Hello339$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello339$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello339$Query$Launch$LaunchSite? launchSite;

  Hello339$Query$Launch$LaunchLinks? links;

  Hello339$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello339$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello339$Query extends JsonSerializable with EquatableMixin {
  Hello339$Query();

  factory Hello339$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello339$QueryFromJson(json);

  List<Hello339$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello339$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello340$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello340$Query$Launch$LaunchSite();

  factory Hello340$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello340$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello340$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello340$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello340$Query$Launch$LaunchLinks();

  factory Hello340$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello340$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello340$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello340$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello340$Query$Launch$LaunchRocket();

  factory Hello340$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello340$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello340$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello340$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello340$Query$Launch();

  factory Hello340$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello340$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello340$Query$Launch$LaunchSite? launchSite;

  Hello340$Query$Launch$LaunchLinks? links;

  Hello340$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello340$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello340$Query extends JsonSerializable with EquatableMixin {
  Hello340$Query();

  factory Hello340$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello340$QueryFromJson(json);

  List<Hello340$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello340$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello341$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello341$Query$Launch$LaunchSite();

  factory Hello341$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello341$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello341$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello341$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello341$Query$Launch$LaunchLinks();

  factory Hello341$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello341$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello341$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello341$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello341$Query$Launch$LaunchRocket();

  factory Hello341$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello341$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello341$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello341$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello341$Query$Launch();

  factory Hello341$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello341$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello341$Query$Launch$LaunchSite? launchSite;

  Hello341$Query$Launch$LaunchLinks? links;

  Hello341$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello341$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello341$Query extends JsonSerializable with EquatableMixin {
  Hello341$Query();

  factory Hello341$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello341$QueryFromJson(json);

  List<Hello341$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello341$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello342$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello342$Query$Launch$LaunchSite();

  factory Hello342$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello342$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello342$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello342$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello342$Query$Launch$LaunchLinks();

  factory Hello342$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello342$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello342$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello342$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello342$Query$Launch$LaunchRocket();

  factory Hello342$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello342$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello342$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello342$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello342$Query$Launch();

  factory Hello342$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello342$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello342$Query$Launch$LaunchSite? launchSite;

  Hello342$Query$Launch$LaunchLinks? links;

  Hello342$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello342$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello342$Query extends JsonSerializable with EquatableMixin {
  Hello342$Query();

  factory Hello342$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello342$QueryFromJson(json);

  List<Hello342$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello342$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello343$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello343$Query$Launch$LaunchSite();

  factory Hello343$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello343$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello343$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello343$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello343$Query$Launch$LaunchLinks();

  factory Hello343$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello343$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello343$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello343$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello343$Query$Launch$LaunchRocket();

  factory Hello343$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello343$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello343$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello343$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello343$Query$Launch();

  factory Hello343$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello343$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello343$Query$Launch$LaunchSite? launchSite;

  Hello343$Query$Launch$LaunchLinks? links;

  Hello343$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello343$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello343$Query extends JsonSerializable with EquatableMixin {
  Hello343$Query();

  factory Hello343$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello343$QueryFromJson(json);

  List<Hello343$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello343$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello344$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello344$Query$Launch$LaunchSite();

  factory Hello344$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello344$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello344$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello344$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello344$Query$Launch$LaunchLinks();

  factory Hello344$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello344$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello344$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello344$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello344$Query$Launch$LaunchRocket();

  factory Hello344$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello344$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello344$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello344$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello344$Query$Launch();

  factory Hello344$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello344$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello344$Query$Launch$LaunchSite? launchSite;

  Hello344$Query$Launch$LaunchLinks? links;

  Hello344$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello344$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello344$Query extends JsonSerializable with EquatableMixin {
  Hello344$Query();

  factory Hello344$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello344$QueryFromJson(json);

  List<Hello344$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello344$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello345$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello345$Query$Launch$LaunchSite();

  factory Hello345$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello345$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello345$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello345$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello345$Query$Launch$LaunchLinks();

  factory Hello345$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello345$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello345$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello345$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello345$Query$Launch$LaunchRocket();

  factory Hello345$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello345$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello345$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello345$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello345$Query$Launch();

  factory Hello345$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello345$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello345$Query$Launch$LaunchSite? launchSite;

  Hello345$Query$Launch$LaunchLinks? links;

  Hello345$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello345$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello345$Query extends JsonSerializable with EquatableMixin {
  Hello345$Query();

  factory Hello345$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello345$QueryFromJson(json);

  List<Hello345$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello345$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello346$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello346$Query$Launch$LaunchSite();

  factory Hello346$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello346$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello346$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello346$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello346$Query$Launch$LaunchLinks();

  factory Hello346$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello346$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello346$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello346$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello346$Query$Launch$LaunchRocket();

  factory Hello346$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello346$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello346$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello346$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello346$Query$Launch();

  factory Hello346$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello346$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello346$Query$Launch$LaunchSite? launchSite;

  Hello346$Query$Launch$LaunchLinks? links;

  Hello346$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello346$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello346$Query extends JsonSerializable with EquatableMixin {
  Hello346$Query();

  factory Hello346$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello346$QueryFromJson(json);

  List<Hello346$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello346$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello347$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello347$Query$Launch$LaunchSite();

  factory Hello347$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello347$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello347$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello347$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello347$Query$Launch$LaunchLinks();

  factory Hello347$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello347$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello347$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello347$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello347$Query$Launch$LaunchRocket();

  factory Hello347$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello347$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello347$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello347$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello347$Query$Launch();

  factory Hello347$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello347$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello347$Query$Launch$LaunchSite? launchSite;

  Hello347$Query$Launch$LaunchLinks? links;

  Hello347$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello347$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello347$Query extends JsonSerializable with EquatableMixin {
  Hello347$Query();

  factory Hello347$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello347$QueryFromJson(json);

  List<Hello347$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello347$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello348$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello348$Query$Launch$LaunchSite();

  factory Hello348$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello348$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello348$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello348$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello348$Query$Launch$LaunchLinks();

  factory Hello348$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello348$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello348$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello348$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello348$Query$Launch$LaunchRocket();

  factory Hello348$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello348$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello348$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello348$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello348$Query$Launch();

  factory Hello348$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello348$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello348$Query$Launch$LaunchSite? launchSite;

  Hello348$Query$Launch$LaunchLinks? links;

  Hello348$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello348$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello348$Query extends JsonSerializable with EquatableMixin {
  Hello348$Query();

  factory Hello348$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello348$QueryFromJson(json);

  List<Hello348$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello348$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello349$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello349$Query$Launch$LaunchSite();

  factory Hello349$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello349$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello349$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello349$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello349$Query$Launch$LaunchLinks();

  factory Hello349$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello349$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello349$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello349$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello349$Query$Launch$LaunchRocket();

  factory Hello349$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello349$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello349$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello349$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello349$Query$Launch();

  factory Hello349$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello349$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello349$Query$Launch$LaunchSite? launchSite;

  Hello349$Query$Launch$LaunchLinks? links;

  Hello349$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello349$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello349$Query extends JsonSerializable with EquatableMixin {
  Hello349$Query();

  factory Hello349$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello349$QueryFromJson(json);

  List<Hello349$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello349$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello350$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello350$Query$Launch$LaunchSite();

  factory Hello350$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello350$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello350$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello350$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello350$Query$Launch$LaunchLinks();

  factory Hello350$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello350$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello350$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello350$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello350$Query$Launch$LaunchRocket();

  factory Hello350$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello350$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello350$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello350$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello350$Query$Launch();

  factory Hello350$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello350$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello350$Query$Launch$LaunchSite? launchSite;

  Hello350$Query$Launch$LaunchLinks? links;

  Hello350$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello350$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello350$Query extends JsonSerializable with EquatableMixin {
  Hello350$Query();

  factory Hello350$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello350$QueryFromJson(json);

  List<Hello350$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello350$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello351$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello351$Query$Launch$LaunchSite();

  factory Hello351$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello351$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello351$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello351$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello351$Query$Launch$LaunchLinks();

  factory Hello351$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello351$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello351$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello351$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello351$Query$Launch$LaunchRocket();

  factory Hello351$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello351$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello351$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello351$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello351$Query$Launch();

  factory Hello351$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello351$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello351$Query$Launch$LaunchSite? launchSite;

  Hello351$Query$Launch$LaunchLinks? links;

  Hello351$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello351$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello351$Query extends JsonSerializable with EquatableMixin {
  Hello351$Query();

  factory Hello351$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello351$QueryFromJson(json);

  List<Hello351$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello351$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello352$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello352$Query$Launch$LaunchSite();

  factory Hello352$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello352$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello352$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello352$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello352$Query$Launch$LaunchLinks();

  factory Hello352$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello352$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello352$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello352$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello352$Query$Launch$LaunchRocket();

  factory Hello352$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello352$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello352$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello352$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello352$Query$Launch();

  factory Hello352$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello352$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello352$Query$Launch$LaunchSite? launchSite;

  Hello352$Query$Launch$LaunchLinks? links;

  Hello352$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello352$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello352$Query extends JsonSerializable with EquatableMixin {
  Hello352$Query();

  factory Hello352$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello352$QueryFromJson(json);

  List<Hello352$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello352$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello353$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello353$Query$Launch$LaunchSite();

  factory Hello353$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello353$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello353$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello353$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello353$Query$Launch$LaunchLinks();

  factory Hello353$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello353$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello353$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello353$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello353$Query$Launch$LaunchRocket();

  factory Hello353$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello353$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello353$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello353$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello353$Query$Launch();

  factory Hello353$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello353$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello353$Query$Launch$LaunchSite? launchSite;

  Hello353$Query$Launch$LaunchLinks? links;

  Hello353$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello353$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello353$Query extends JsonSerializable with EquatableMixin {
  Hello353$Query();

  factory Hello353$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello353$QueryFromJson(json);

  List<Hello353$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello353$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello354$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello354$Query$Launch$LaunchSite();

  factory Hello354$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello354$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello354$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello354$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello354$Query$Launch$LaunchLinks();

  factory Hello354$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello354$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello354$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello354$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello354$Query$Launch$LaunchRocket();

  factory Hello354$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello354$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello354$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello354$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello354$Query$Launch();

  factory Hello354$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello354$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello354$Query$Launch$LaunchSite? launchSite;

  Hello354$Query$Launch$LaunchLinks? links;

  Hello354$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello354$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello354$Query extends JsonSerializable with EquatableMixin {
  Hello354$Query();

  factory Hello354$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello354$QueryFromJson(json);

  List<Hello354$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello354$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello355$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello355$Query$Launch$LaunchSite();

  factory Hello355$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello355$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello355$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello355$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello355$Query$Launch$LaunchLinks();

  factory Hello355$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello355$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello355$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello355$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello355$Query$Launch$LaunchRocket();

  factory Hello355$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello355$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello355$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello355$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello355$Query$Launch();

  factory Hello355$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello355$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello355$Query$Launch$LaunchSite? launchSite;

  Hello355$Query$Launch$LaunchLinks? links;

  Hello355$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello355$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello355$Query extends JsonSerializable with EquatableMixin {
  Hello355$Query();

  factory Hello355$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello355$QueryFromJson(json);

  List<Hello355$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello355$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello356$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello356$Query$Launch$LaunchSite();

  factory Hello356$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello356$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello356$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello356$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello356$Query$Launch$LaunchLinks();

  factory Hello356$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello356$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello356$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello356$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello356$Query$Launch$LaunchRocket();

  factory Hello356$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello356$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello356$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello356$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello356$Query$Launch();

  factory Hello356$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello356$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello356$Query$Launch$LaunchSite? launchSite;

  Hello356$Query$Launch$LaunchLinks? links;

  Hello356$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello356$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello356$Query extends JsonSerializable with EquatableMixin {
  Hello356$Query();

  factory Hello356$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello356$QueryFromJson(json);

  List<Hello356$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello356$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello357$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello357$Query$Launch$LaunchSite();

  factory Hello357$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello357$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello357$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello357$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello357$Query$Launch$LaunchLinks();

  factory Hello357$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello357$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello357$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello357$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello357$Query$Launch$LaunchRocket();

  factory Hello357$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello357$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello357$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello357$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello357$Query$Launch();

  factory Hello357$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello357$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello357$Query$Launch$LaunchSite? launchSite;

  Hello357$Query$Launch$LaunchLinks? links;

  Hello357$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello357$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello357$Query extends JsonSerializable with EquatableMixin {
  Hello357$Query();

  factory Hello357$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello357$QueryFromJson(json);

  List<Hello357$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello357$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello358$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello358$Query$Launch$LaunchSite();

  factory Hello358$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello358$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello358$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello358$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello358$Query$Launch$LaunchLinks();

  factory Hello358$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello358$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello358$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello358$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello358$Query$Launch$LaunchRocket();

  factory Hello358$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello358$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello358$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello358$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello358$Query$Launch();

  factory Hello358$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello358$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello358$Query$Launch$LaunchSite? launchSite;

  Hello358$Query$Launch$LaunchLinks? links;

  Hello358$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello358$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello358$Query extends JsonSerializable with EquatableMixin {
  Hello358$Query();

  factory Hello358$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello358$QueryFromJson(json);

  List<Hello358$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello358$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello359$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello359$Query$Launch$LaunchSite();

  factory Hello359$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello359$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello359$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello359$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello359$Query$Launch$LaunchLinks();

  factory Hello359$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello359$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello359$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello359$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello359$Query$Launch$LaunchRocket();

  factory Hello359$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello359$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello359$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello359$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello359$Query$Launch();

  factory Hello359$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello359$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello359$Query$Launch$LaunchSite? launchSite;

  Hello359$Query$Launch$LaunchLinks? links;

  Hello359$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello359$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello359$Query extends JsonSerializable with EquatableMixin {
  Hello359$Query();

  factory Hello359$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello359$QueryFromJson(json);

  List<Hello359$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello359$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello360$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello360$Query$Launch$LaunchSite();

  factory Hello360$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello360$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello360$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello360$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello360$Query$Launch$LaunchLinks();

  factory Hello360$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello360$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello360$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello360$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello360$Query$Launch$LaunchRocket();

  factory Hello360$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello360$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello360$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello360$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello360$Query$Launch();

  factory Hello360$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello360$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello360$Query$Launch$LaunchSite? launchSite;

  Hello360$Query$Launch$LaunchLinks? links;

  Hello360$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello360$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello360$Query extends JsonSerializable with EquatableMixin {
  Hello360$Query();

  factory Hello360$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello360$QueryFromJson(json);

  List<Hello360$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello360$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello361$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello361$Query$Launch$LaunchSite();

  factory Hello361$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello361$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello361$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello361$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello361$Query$Launch$LaunchLinks();

  factory Hello361$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello361$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello361$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello361$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello361$Query$Launch$LaunchRocket();

  factory Hello361$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello361$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello361$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello361$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello361$Query$Launch();

  factory Hello361$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello361$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello361$Query$Launch$LaunchSite? launchSite;

  Hello361$Query$Launch$LaunchLinks? links;

  Hello361$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello361$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello361$Query extends JsonSerializable with EquatableMixin {
  Hello361$Query();

  factory Hello361$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello361$QueryFromJson(json);

  List<Hello361$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello361$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello362$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello362$Query$Launch$LaunchSite();

  factory Hello362$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello362$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello362$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello362$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello362$Query$Launch$LaunchLinks();

  factory Hello362$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello362$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello362$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello362$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello362$Query$Launch$LaunchRocket();

  factory Hello362$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello362$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello362$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello362$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello362$Query$Launch();

  factory Hello362$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello362$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello362$Query$Launch$LaunchSite? launchSite;

  Hello362$Query$Launch$LaunchLinks? links;

  Hello362$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello362$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello362$Query extends JsonSerializable with EquatableMixin {
  Hello362$Query();

  factory Hello362$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello362$QueryFromJson(json);

  List<Hello362$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello362$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello363$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello363$Query$Launch$LaunchSite();

  factory Hello363$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello363$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello363$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello363$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello363$Query$Launch$LaunchLinks();

  factory Hello363$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello363$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello363$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello363$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello363$Query$Launch$LaunchRocket();

  factory Hello363$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello363$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello363$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello363$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello363$Query$Launch();

  factory Hello363$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello363$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello363$Query$Launch$LaunchSite? launchSite;

  Hello363$Query$Launch$LaunchLinks? links;

  Hello363$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello363$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello363$Query extends JsonSerializable with EquatableMixin {
  Hello363$Query();

  factory Hello363$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello363$QueryFromJson(json);

  List<Hello363$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello363$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello364$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello364$Query$Launch$LaunchSite();

  factory Hello364$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello364$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello364$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello364$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello364$Query$Launch$LaunchLinks();

  factory Hello364$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello364$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello364$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello364$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello364$Query$Launch$LaunchRocket();

  factory Hello364$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello364$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello364$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello364$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello364$Query$Launch();

  factory Hello364$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello364$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello364$Query$Launch$LaunchSite? launchSite;

  Hello364$Query$Launch$LaunchLinks? links;

  Hello364$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello364$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello364$Query extends JsonSerializable with EquatableMixin {
  Hello364$Query();

  factory Hello364$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello364$QueryFromJson(json);

  List<Hello364$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello364$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello365$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello365$Query$Launch$LaunchSite();

  factory Hello365$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello365$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello365$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello365$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello365$Query$Launch$LaunchLinks();

  factory Hello365$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello365$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello365$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello365$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello365$Query$Launch$LaunchRocket();

  factory Hello365$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello365$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello365$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello365$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello365$Query$Launch();

  factory Hello365$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello365$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello365$Query$Launch$LaunchSite? launchSite;

  Hello365$Query$Launch$LaunchLinks? links;

  Hello365$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello365$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello365$Query extends JsonSerializable with EquatableMixin {
  Hello365$Query();

  factory Hello365$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello365$QueryFromJson(json);

  List<Hello365$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello365$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello366$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello366$Query$Launch$LaunchSite();

  factory Hello366$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello366$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello366$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello366$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello366$Query$Launch$LaunchLinks();

  factory Hello366$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello366$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello366$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello366$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello366$Query$Launch$LaunchRocket();

  factory Hello366$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello366$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello366$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello366$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello366$Query$Launch();

  factory Hello366$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello366$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello366$Query$Launch$LaunchSite? launchSite;

  Hello366$Query$Launch$LaunchLinks? links;

  Hello366$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello366$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello366$Query extends JsonSerializable with EquatableMixin {
  Hello366$Query();

  factory Hello366$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello366$QueryFromJson(json);

  List<Hello366$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello366$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello367$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello367$Query$Launch$LaunchSite();

  factory Hello367$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello367$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello367$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello367$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello367$Query$Launch$LaunchLinks();

  factory Hello367$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello367$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello367$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello367$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello367$Query$Launch$LaunchRocket();

  factory Hello367$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello367$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello367$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello367$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello367$Query$Launch();

  factory Hello367$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello367$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello367$Query$Launch$LaunchSite? launchSite;

  Hello367$Query$Launch$LaunchLinks? links;

  Hello367$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello367$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello367$Query extends JsonSerializable with EquatableMixin {
  Hello367$Query();

  factory Hello367$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello367$QueryFromJson(json);

  List<Hello367$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello367$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello368$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello368$Query$Launch$LaunchSite();

  factory Hello368$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello368$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello368$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello368$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello368$Query$Launch$LaunchLinks();

  factory Hello368$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello368$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello368$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello368$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello368$Query$Launch$LaunchRocket();

  factory Hello368$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello368$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello368$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello368$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello368$Query$Launch();

  factory Hello368$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello368$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello368$Query$Launch$LaunchSite? launchSite;

  Hello368$Query$Launch$LaunchLinks? links;

  Hello368$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello368$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello368$Query extends JsonSerializable with EquatableMixin {
  Hello368$Query();

  factory Hello368$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello368$QueryFromJson(json);

  List<Hello368$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello368$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello369$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello369$Query$Launch$LaunchSite();

  factory Hello369$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello369$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello369$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello369$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello369$Query$Launch$LaunchLinks();

  factory Hello369$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello369$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello369$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello369$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello369$Query$Launch$LaunchRocket();

  factory Hello369$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello369$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello369$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello369$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello369$Query$Launch();

  factory Hello369$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello369$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello369$Query$Launch$LaunchSite? launchSite;

  Hello369$Query$Launch$LaunchLinks? links;

  Hello369$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello369$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello369$Query extends JsonSerializable with EquatableMixin {
  Hello369$Query();

  factory Hello369$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello369$QueryFromJson(json);

  List<Hello369$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello369$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello370$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello370$Query$Launch$LaunchSite();

  factory Hello370$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello370$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello370$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello370$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello370$Query$Launch$LaunchLinks();

  factory Hello370$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello370$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello370$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello370$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello370$Query$Launch$LaunchRocket();

  factory Hello370$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello370$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello370$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello370$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello370$Query$Launch();

  factory Hello370$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello370$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello370$Query$Launch$LaunchSite? launchSite;

  Hello370$Query$Launch$LaunchLinks? links;

  Hello370$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello370$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello370$Query extends JsonSerializable with EquatableMixin {
  Hello370$Query();

  factory Hello370$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello370$QueryFromJson(json);

  List<Hello370$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello370$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello371$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello371$Query$Launch$LaunchSite();

  factory Hello371$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello371$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello371$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello371$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello371$Query$Launch$LaunchLinks();

  factory Hello371$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello371$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello371$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello371$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello371$Query$Launch$LaunchRocket();

  factory Hello371$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello371$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello371$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello371$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello371$Query$Launch();

  factory Hello371$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello371$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello371$Query$Launch$LaunchSite? launchSite;

  Hello371$Query$Launch$LaunchLinks? links;

  Hello371$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello371$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello371$Query extends JsonSerializable with EquatableMixin {
  Hello371$Query();

  factory Hello371$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello371$QueryFromJson(json);

  List<Hello371$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello371$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello372$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello372$Query$Launch$LaunchSite();

  factory Hello372$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello372$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello372$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello372$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello372$Query$Launch$LaunchLinks();

  factory Hello372$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello372$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello372$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello372$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello372$Query$Launch$LaunchRocket();

  factory Hello372$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello372$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello372$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello372$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello372$Query$Launch();

  factory Hello372$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello372$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello372$Query$Launch$LaunchSite? launchSite;

  Hello372$Query$Launch$LaunchLinks? links;

  Hello372$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello372$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello372$Query extends JsonSerializable with EquatableMixin {
  Hello372$Query();

  factory Hello372$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello372$QueryFromJson(json);

  List<Hello372$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello372$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello373$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello373$Query$Launch$LaunchSite();

  factory Hello373$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello373$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello373$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello373$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello373$Query$Launch$LaunchLinks();

  factory Hello373$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello373$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello373$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello373$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello373$Query$Launch$LaunchRocket();

  factory Hello373$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello373$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello373$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello373$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello373$Query$Launch();

  factory Hello373$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello373$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello373$Query$Launch$LaunchSite? launchSite;

  Hello373$Query$Launch$LaunchLinks? links;

  Hello373$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello373$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello373$Query extends JsonSerializable with EquatableMixin {
  Hello373$Query();

  factory Hello373$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello373$QueryFromJson(json);

  List<Hello373$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello373$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello374$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello374$Query$Launch$LaunchSite();

  factory Hello374$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello374$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello374$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello374$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello374$Query$Launch$LaunchLinks();

  factory Hello374$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello374$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello374$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello374$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello374$Query$Launch$LaunchRocket();

  factory Hello374$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello374$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello374$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello374$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello374$Query$Launch();

  factory Hello374$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello374$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello374$Query$Launch$LaunchSite? launchSite;

  Hello374$Query$Launch$LaunchLinks? links;

  Hello374$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello374$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello374$Query extends JsonSerializable with EquatableMixin {
  Hello374$Query();

  factory Hello374$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello374$QueryFromJson(json);

  List<Hello374$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello374$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello375$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello375$Query$Launch$LaunchSite();

  factory Hello375$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello375$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello375$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello375$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello375$Query$Launch$LaunchLinks();

  factory Hello375$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello375$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello375$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello375$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello375$Query$Launch$LaunchRocket();

  factory Hello375$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello375$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello375$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello375$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello375$Query$Launch();

  factory Hello375$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello375$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello375$Query$Launch$LaunchSite? launchSite;

  Hello375$Query$Launch$LaunchLinks? links;

  Hello375$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello375$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello375$Query extends JsonSerializable with EquatableMixin {
  Hello375$Query();

  factory Hello375$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello375$QueryFromJson(json);

  List<Hello375$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello375$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello376$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello376$Query$Launch$LaunchSite();

  factory Hello376$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello376$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello376$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello376$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello376$Query$Launch$LaunchLinks();

  factory Hello376$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello376$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello376$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello376$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello376$Query$Launch$LaunchRocket();

  factory Hello376$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello376$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello376$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello376$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello376$Query$Launch();

  factory Hello376$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello376$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello376$Query$Launch$LaunchSite? launchSite;

  Hello376$Query$Launch$LaunchLinks? links;

  Hello376$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello376$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello376$Query extends JsonSerializable with EquatableMixin {
  Hello376$Query();

  factory Hello376$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello376$QueryFromJson(json);

  List<Hello376$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello376$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello377$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello377$Query$Launch$LaunchSite();

  factory Hello377$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello377$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello377$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello377$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello377$Query$Launch$LaunchLinks();

  factory Hello377$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello377$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello377$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello377$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello377$Query$Launch$LaunchRocket();

  factory Hello377$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello377$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello377$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello377$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello377$Query$Launch();

  factory Hello377$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello377$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello377$Query$Launch$LaunchSite? launchSite;

  Hello377$Query$Launch$LaunchLinks? links;

  Hello377$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello377$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello377$Query extends JsonSerializable with EquatableMixin {
  Hello377$Query();

  factory Hello377$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello377$QueryFromJson(json);

  List<Hello377$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello377$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello378$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello378$Query$Launch$LaunchSite();

  factory Hello378$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello378$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello378$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello378$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello378$Query$Launch$LaunchLinks();

  factory Hello378$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello378$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello378$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello378$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello378$Query$Launch$LaunchRocket();

  factory Hello378$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello378$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello378$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello378$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello378$Query$Launch();

  factory Hello378$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello378$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello378$Query$Launch$LaunchSite? launchSite;

  Hello378$Query$Launch$LaunchLinks? links;

  Hello378$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello378$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello378$Query extends JsonSerializable with EquatableMixin {
  Hello378$Query();

  factory Hello378$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello378$QueryFromJson(json);

  List<Hello378$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello378$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello379$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello379$Query$Launch$LaunchSite();

  factory Hello379$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello379$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello379$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello379$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello379$Query$Launch$LaunchLinks();

  factory Hello379$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello379$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello379$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello379$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello379$Query$Launch$LaunchRocket();

  factory Hello379$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello379$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello379$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello379$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello379$Query$Launch();

  factory Hello379$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello379$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello379$Query$Launch$LaunchSite? launchSite;

  Hello379$Query$Launch$LaunchLinks? links;

  Hello379$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello379$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello379$Query extends JsonSerializable with EquatableMixin {
  Hello379$Query();

  factory Hello379$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello379$QueryFromJson(json);

  List<Hello379$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello379$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello380$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello380$Query$Launch$LaunchSite();

  factory Hello380$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello380$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello380$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello380$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello380$Query$Launch$LaunchLinks();

  factory Hello380$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello380$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello380$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello380$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello380$Query$Launch$LaunchRocket();

  factory Hello380$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello380$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello380$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello380$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello380$Query$Launch();

  factory Hello380$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello380$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello380$Query$Launch$LaunchSite? launchSite;

  Hello380$Query$Launch$LaunchLinks? links;

  Hello380$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello380$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello380$Query extends JsonSerializable with EquatableMixin {
  Hello380$Query();

  factory Hello380$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello380$QueryFromJson(json);

  List<Hello380$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello380$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello381$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello381$Query$Launch$LaunchSite();

  factory Hello381$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello381$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello381$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello381$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello381$Query$Launch$LaunchLinks();

  factory Hello381$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello381$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello381$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello381$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello381$Query$Launch$LaunchRocket();

  factory Hello381$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello381$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello381$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello381$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello381$Query$Launch();

  factory Hello381$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello381$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello381$Query$Launch$LaunchSite? launchSite;

  Hello381$Query$Launch$LaunchLinks? links;

  Hello381$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello381$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello381$Query extends JsonSerializable with EquatableMixin {
  Hello381$Query();

  factory Hello381$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello381$QueryFromJson(json);

  List<Hello381$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello381$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello382$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello382$Query$Launch$LaunchSite();

  factory Hello382$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello382$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello382$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello382$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello382$Query$Launch$LaunchLinks();

  factory Hello382$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello382$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello382$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello382$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello382$Query$Launch$LaunchRocket();

  factory Hello382$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello382$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello382$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello382$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello382$Query$Launch();

  factory Hello382$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello382$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello382$Query$Launch$LaunchSite? launchSite;

  Hello382$Query$Launch$LaunchLinks? links;

  Hello382$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello382$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello382$Query extends JsonSerializable with EquatableMixin {
  Hello382$Query();

  factory Hello382$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello382$QueryFromJson(json);

  List<Hello382$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello382$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello383$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello383$Query$Launch$LaunchSite();

  factory Hello383$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello383$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello383$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello383$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello383$Query$Launch$LaunchLinks();

  factory Hello383$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello383$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello383$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello383$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello383$Query$Launch$LaunchRocket();

  factory Hello383$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello383$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello383$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello383$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello383$Query$Launch();

  factory Hello383$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello383$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello383$Query$Launch$LaunchSite? launchSite;

  Hello383$Query$Launch$LaunchLinks? links;

  Hello383$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello383$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello383$Query extends JsonSerializable with EquatableMixin {
  Hello383$Query();

  factory Hello383$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello383$QueryFromJson(json);

  List<Hello383$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello383$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello384$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello384$Query$Launch$LaunchSite();

  factory Hello384$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello384$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello384$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello384$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello384$Query$Launch$LaunchLinks();

  factory Hello384$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello384$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello384$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello384$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello384$Query$Launch$LaunchRocket();

  factory Hello384$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello384$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello384$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello384$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello384$Query$Launch();

  factory Hello384$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello384$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello384$Query$Launch$LaunchSite? launchSite;

  Hello384$Query$Launch$LaunchLinks? links;

  Hello384$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello384$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello384$Query extends JsonSerializable with EquatableMixin {
  Hello384$Query();

  factory Hello384$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello384$QueryFromJson(json);

  List<Hello384$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello384$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello385$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello385$Query$Launch$LaunchSite();

  factory Hello385$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello385$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello385$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello385$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello385$Query$Launch$LaunchLinks();

  factory Hello385$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello385$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello385$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello385$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello385$Query$Launch$LaunchRocket();

  factory Hello385$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello385$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello385$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello385$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello385$Query$Launch();

  factory Hello385$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello385$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello385$Query$Launch$LaunchSite? launchSite;

  Hello385$Query$Launch$LaunchLinks? links;

  Hello385$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello385$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello385$Query extends JsonSerializable with EquatableMixin {
  Hello385$Query();

  factory Hello385$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello385$QueryFromJson(json);

  List<Hello385$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello385$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello386$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello386$Query$Launch$LaunchSite();

  factory Hello386$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello386$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello386$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello386$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello386$Query$Launch$LaunchLinks();

  factory Hello386$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello386$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello386$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello386$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello386$Query$Launch$LaunchRocket();

  factory Hello386$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello386$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello386$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello386$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello386$Query$Launch();

  factory Hello386$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello386$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello386$Query$Launch$LaunchSite? launchSite;

  Hello386$Query$Launch$LaunchLinks? links;

  Hello386$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello386$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello386$Query extends JsonSerializable with EquatableMixin {
  Hello386$Query();

  factory Hello386$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello386$QueryFromJson(json);

  List<Hello386$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello386$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello387$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello387$Query$Launch$LaunchSite();

  factory Hello387$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello387$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello387$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello387$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello387$Query$Launch$LaunchLinks();

  factory Hello387$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello387$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello387$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello387$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello387$Query$Launch$LaunchRocket();

  factory Hello387$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello387$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello387$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello387$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello387$Query$Launch();

  factory Hello387$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello387$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello387$Query$Launch$LaunchSite? launchSite;

  Hello387$Query$Launch$LaunchLinks? links;

  Hello387$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello387$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello387$Query extends JsonSerializable with EquatableMixin {
  Hello387$Query();

  factory Hello387$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello387$QueryFromJson(json);

  List<Hello387$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello387$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello388$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello388$Query$Launch$LaunchSite();

  factory Hello388$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello388$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello388$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello388$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello388$Query$Launch$LaunchLinks();

  factory Hello388$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello388$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello388$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello388$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello388$Query$Launch$LaunchRocket();

  factory Hello388$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello388$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello388$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello388$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello388$Query$Launch();

  factory Hello388$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello388$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello388$Query$Launch$LaunchSite? launchSite;

  Hello388$Query$Launch$LaunchLinks? links;

  Hello388$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello388$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello388$Query extends JsonSerializable with EquatableMixin {
  Hello388$Query();

  factory Hello388$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello388$QueryFromJson(json);

  List<Hello388$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello388$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello389$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello389$Query$Launch$LaunchSite();

  factory Hello389$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello389$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello389$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello389$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello389$Query$Launch$LaunchLinks();

  factory Hello389$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello389$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello389$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello389$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello389$Query$Launch$LaunchRocket();

  factory Hello389$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello389$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello389$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello389$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello389$Query$Launch();

  factory Hello389$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello389$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello389$Query$Launch$LaunchSite? launchSite;

  Hello389$Query$Launch$LaunchLinks? links;

  Hello389$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello389$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello389$Query extends JsonSerializable with EquatableMixin {
  Hello389$Query();

  factory Hello389$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello389$QueryFromJson(json);

  List<Hello389$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello389$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello390$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello390$Query$Launch$LaunchSite();

  factory Hello390$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello390$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello390$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello390$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello390$Query$Launch$LaunchLinks();

  factory Hello390$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello390$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello390$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello390$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello390$Query$Launch$LaunchRocket();

  factory Hello390$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello390$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello390$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello390$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello390$Query$Launch();

  factory Hello390$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello390$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello390$Query$Launch$LaunchSite? launchSite;

  Hello390$Query$Launch$LaunchLinks? links;

  Hello390$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello390$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello390$Query extends JsonSerializable with EquatableMixin {
  Hello390$Query();

  factory Hello390$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello390$QueryFromJson(json);

  List<Hello390$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello390$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello391$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello391$Query$Launch$LaunchSite();

  factory Hello391$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello391$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello391$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello391$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello391$Query$Launch$LaunchLinks();

  factory Hello391$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello391$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello391$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello391$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello391$Query$Launch$LaunchRocket();

  factory Hello391$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello391$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello391$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello391$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello391$Query$Launch();

  factory Hello391$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello391$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello391$Query$Launch$LaunchSite? launchSite;

  Hello391$Query$Launch$LaunchLinks? links;

  Hello391$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello391$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello391$Query extends JsonSerializable with EquatableMixin {
  Hello391$Query();

  factory Hello391$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello391$QueryFromJson(json);

  List<Hello391$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello391$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello392$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello392$Query$Launch$LaunchSite();

  factory Hello392$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello392$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello392$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello392$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello392$Query$Launch$LaunchLinks();

  factory Hello392$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello392$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello392$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello392$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello392$Query$Launch$LaunchRocket();

  factory Hello392$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello392$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello392$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello392$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello392$Query$Launch();

  factory Hello392$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello392$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello392$Query$Launch$LaunchSite? launchSite;

  Hello392$Query$Launch$LaunchLinks? links;

  Hello392$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello392$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello392$Query extends JsonSerializable with EquatableMixin {
  Hello392$Query();

  factory Hello392$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello392$QueryFromJson(json);

  List<Hello392$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello392$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello393$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello393$Query$Launch$LaunchSite();

  factory Hello393$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello393$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello393$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello393$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello393$Query$Launch$LaunchLinks();

  factory Hello393$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello393$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello393$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello393$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello393$Query$Launch$LaunchRocket();

  factory Hello393$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello393$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello393$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello393$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello393$Query$Launch();

  factory Hello393$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello393$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello393$Query$Launch$LaunchSite? launchSite;

  Hello393$Query$Launch$LaunchLinks? links;

  Hello393$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello393$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello393$Query extends JsonSerializable with EquatableMixin {
  Hello393$Query();

  factory Hello393$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello393$QueryFromJson(json);

  List<Hello393$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello393$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello394$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello394$Query$Launch$LaunchSite();

  factory Hello394$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello394$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello394$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello394$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello394$Query$Launch$LaunchLinks();

  factory Hello394$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello394$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello394$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello394$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello394$Query$Launch$LaunchRocket();

  factory Hello394$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello394$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello394$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello394$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello394$Query$Launch();

  factory Hello394$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello394$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello394$Query$Launch$LaunchSite? launchSite;

  Hello394$Query$Launch$LaunchLinks? links;

  Hello394$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello394$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello394$Query extends JsonSerializable with EquatableMixin {
  Hello394$Query();

  factory Hello394$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello394$QueryFromJson(json);

  List<Hello394$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello394$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello395$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello395$Query$Launch$LaunchSite();

  factory Hello395$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello395$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello395$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello395$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello395$Query$Launch$LaunchLinks();

  factory Hello395$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello395$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello395$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello395$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello395$Query$Launch$LaunchRocket();

  factory Hello395$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello395$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello395$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello395$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello395$Query$Launch();

  factory Hello395$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello395$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello395$Query$Launch$LaunchSite? launchSite;

  Hello395$Query$Launch$LaunchLinks? links;

  Hello395$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello395$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello395$Query extends JsonSerializable with EquatableMixin {
  Hello395$Query();

  factory Hello395$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello395$QueryFromJson(json);

  List<Hello395$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello395$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello396$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello396$Query$Launch$LaunchSite();

  factory Hello396$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello396$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello396$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello396$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello396$Query$Launch$LaunchLinks();

  factory Hello396$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello396$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello396$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello396$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello396$Query$Launch$LaunchRocket();

  factory Hello396$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello396$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello396$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello396$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello396$Query$Launch();

  factory Hello396$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello396$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello396$Query$Launch$LaunchSite? launchSite;

  Hello396$Query$Launch$LaunchLinks? links;

  Hello396$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello396$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello396$Query extends JsonSerializable with EquatableMixin {
  Hello396$Query();

  factory Hello396$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello396$QueryFromJson(json);

  List<Hello396$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello396$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello397$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello397$Query$Launch$LaunchSite();

  factory Hello397$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello397$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello397$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello397$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello397$Query$Launch$LaunchLinks();

  factory Hello397$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello397$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello397$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello397$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello397$Query$Launch$LaunchRocket();

  factory Hello397$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello397$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello397$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello397$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello397$Query$Launch();

  factory Hello397$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello397$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello397$Query$Launch$LaunchSite? launchSite;

  Hello397$Query$Launch$LaunchLinks? links;

  Hello397$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello397$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello397$Query extends JsonSerializable with EquatableMixin {
  Hello397$Query();

  factory Hello397$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello397$QueryFromJson(json);

  List<Hello397$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello397$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello398$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello398$Query$Launch$LaunchSite();

  factory Hello398$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello398$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello398$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello398$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello398$Query$Launch$LaunchLinks();

  factory Hello398$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello398$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello398$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello398$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello398$Query$Launch$LaunchRocket();

  factory Hello398$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello398$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello398$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello398$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello398$Query$Launch();

  factory Hello398$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello398$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello398$Query$Launch$LaunchSite? launchSite;

  Hello398$Query$Launch$LaunchLinks? links;

  Hello398$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello398$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello398$Query extends JsonSerializable with EquatableMixin {
  Hello398$Query();

  factory Hello398$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello398$QueryFromJson(json);

  List<Hello398$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello398$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello399$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello399$Query$Launch$LaunchSite();

  factory Hello399$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello399$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello399$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello399$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello399$Query$Launch$LaunchLinks();

  factory Hello399$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello399$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello399$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello399$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello399$Query$Launch$LaunchRocket();

  factory Hello399$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello399$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello399$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello399$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello399$Query$Launch();

  factory Hello399$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello399$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello399$Query$Launch$LaunchSite? launchSite;

  Hello399$Query$Launch$LaunchLinks? links;

  Hello399$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello399$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello399$Query extends JsonSerializable with EquatableMixin {
  Hello399$Query();

  factory Hello399$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello399$QueryFromJson(json);

  List<Hello399$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello399$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello400$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello400$Query$Launch$LaunchSite();

  factory Hello400$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello400$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello400$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello400$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello400$Query$Launch$LaunchLinks();

  factory Hello400$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello400$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello400$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello400$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello400$Query$Launch$LaunchRocket();

  factory Hello400$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello400$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello400$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello400$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello400$Query$Launch();

  factory Hello400$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello400$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello400$Query$Launch$LaunchSite? launchSite;

  Hello400$Query$Launch$LaunchLinks? links;

  Hello400$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello400$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello400$Query extends JsonSerializable with EquatableMixin {
  Hello400$Query();

  factory Hello400$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello400$QueryFromJson(json);

  List<Hello400$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello400$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello401$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello401$Query$Launch$LaunchSite();

  factory Hello401$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello401$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello401$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello401$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello401$Query$Launch$LaunchLinks();

  factory Hello401$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello401$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello401$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello401$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello401$Query$Launch$LaunchRocket();

  factory Hello401$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello401$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello401$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello401$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello401$Query$Launch();

  factory Hello401$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello401$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello401$Query$Launch$LaunchSite? launchSite;

  Hello401$Query$Launch$LaunchLinks? links;

  Hello401$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello401$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello401$Query extends JsonSerializable with EquatableMixin {
  Hello401$Query();

  factory Hello401$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello401$QueryFromJson(json);

  List<Hello401$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello401$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello402$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello402$Query$Launch$LaunchSite();

  factory Hello402$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello402$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello402$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello402$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello402$Query$Launch$LaunchLinks();

  factory Hello402$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello402$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello402$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello402$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello402$Query$Launch$LaunchRocket();

  factory Hello402$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello402$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello402$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello402$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello402$Query$Launch();

  factory Hello402$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello402$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello402$Query$Launch$LaunchSite? launchSite;

  Hello402$Query$Launch$LaunchLinks? links;

  Hello402$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello402$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello402$Query extends JsonSerializable with EquatableMixin {
  Hello402$Query();

  factory Hello402$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello402$QueryFromJson(json);

  List<Hello402$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello402$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello403$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello403$Query$Launch$LaunchSite();

  factory Hello403$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello403$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello403$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello403$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello403$Query$Launch$LaunchLinks();

  factory Hello403$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello403$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello403$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello403$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello403$Query$Launch$LaunchRocket();

  factory Hello403$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello403$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello403$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello403$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello403$Query$Launch();

  factory Hello403$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello403$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello403$Query$Launch$LaunchSite? launchSite;

  Hello403$Query$Launch$LaunchLinks? links;

  Hello403$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello403$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello403$Query extends JsonSerializable with EquatableMixin {
  Hello403$Query();

  factory Hello403$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello403$QueryFromJson(json);

  List<Hello403$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello403$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello404$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello404$Query$Launch$LaunchSite();

  factory Hello404$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello404$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello404$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello404$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello404$Query$Launch$LaunchLinks();

  factory Hello404$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello404$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello404$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello404$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello404$Query$Launch$LaunchRocket();

  factory Hello404$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello404$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello404$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello404$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello404$Query$Launch();

  factory Hello404$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello404$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello404$Query$Launch$LaunchSite? launchSite;

  Hello404$Query$Launch$LaunchLinks? links;

  Hello404$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello404$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello404$Query extends JsonSerializable with EquatableMixin {
  Hello404$Query();

  factory Hello404$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello404$QueryFromJson(json);

  List<Hello404$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello404$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello405$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello405$Query$Launch$LaunchSite();

  factory Hello405$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello405$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello405$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello405$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello405$Query$Launch$LaunchLinks();

  factory Hello405$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello405$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello405$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello405$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello405$Query$Launch$LaunchRocket();

  factory Hello405$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello405$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello405$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello405$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello405$Query$Launch();

  factory Hello405$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello405$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello405$Query$Launch$LaunchSite? launchSite;

  Hello405$Query$Launch$LaunchLinks? links;

  Hello405$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello405$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello405$Query extends JsonSerializable with EquatableMixin {
  Hello405$Query();

  factory Hello405$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello405$QueryFromJson(json);

  List<Hello405$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello405$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello406$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello406$Query$Launch$LaunchSite();

  factory Hello406$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello406$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello406$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello406$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello406$Query$Launch$LaunchLinks();

  factory Hello406$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello406$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello406$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello406$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello406$Query$Launch$LaunchRocket();

  factory Hello406$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello406$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello406$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello406$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello406$Query$Launch();

  factory Hello406$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello406$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello406$Query$Launch$LaunchSite? launchSite;

  Hello406$Query$Launch$LaunchLinks? links;

  Hello406$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello406$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello406$Query extends JsonSerializable with EquatableMixin {
  Hello406$Query();

  factory Hello406$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello406$QueryFromJson(json);

  List<Hello406$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello406$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello407$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello407$Query$Launch$LaunchSite();

  factory Hello407$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello407$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello407$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello407$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello407$Query$Launch$LaunchLinks();

  factory Hello407$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello407$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello407$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello407$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello407$Query$Launch$LaunchRocket();

  factory Hello407$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello407$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello407$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello407$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello407$Query$Launch();

  factory Hello407$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello407$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello407$Query$Launch$LaunchSite? launchSite;

  Hello407$Query$Launch$LaunchLinks? links;

  Hello407$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello407$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello407$Query extends JsonSerializable with EquatableMixin {
  Hello407$Query();

  factory Hello407$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello407$QueryFromJson(json);

  List<Hello407$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello407$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello408$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello408$Query$Launch$LaunchSite();

  factory Hello408$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello408$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello408$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello408$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello408$Query$Launch$LaunchLinks();

  factory Hello408$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello408$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello408$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello408$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello408$Query$Launch$LaunchRocket();

  factory Hello408$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello408$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello408$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello408$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello408$Query$Launch();

  factory Hello408$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello408$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello408$Query$Launch$LaunchSite? launchSite;

  Hello408$Query$Launch$LaunchLinks? links;

  Hello408$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello408$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello408$Query extends JsonSerializable with EquatableMixin {
  Hello408$Query();

  factory Hello408$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello408$QueryFromJson(json);

  List<Hello408$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello408$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello409$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello409$Query$Launch$LaunchSite();

  factory Hello409$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello409$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello409$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello409$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello409$Query$Launch$LaunchLinks();

  factory Hello409$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello409$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello409$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello409$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello409$Query$Launch$LaunchRocket();

  factory Hello409$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello409$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello409$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello409$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello409$Query$Launch();

  factory Hello409$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello409$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello409$Query$Launch$LaunchSite? launchSite;

  Hello409$Query$Launch$LaunchLinks? links;

  Hello409$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello409$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello409$Query extends JsonSerializable with EquatableMixin {
  Hello409$Query();

  factory Hello409$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello409$QueryFromJson(json);

  List<Hello409$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello409$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello410$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello410$Query$Launch$LaunchSite();

  factory Hello410$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello410$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello410$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello410$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello410$Query$Launch$LaunchLinks();

  factory Hello410$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello410$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello410$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello410$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello410$Query$Launch$LaunchRocket();

  factory Hello410$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello410$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello410$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello410$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello410$Query$Launch();

  factory Hello410$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello410$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello410$Query$Launch$LaunchSite? launchSite;

  Hello410$Query$Launch$LaunchLinks? links;

  Hello410$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello410$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello410$Query extends JsonSerializable with EquatableMixin {
  Hello410$Query();

  factory Hello410$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello410$QueryFromJson(json);

  List<Hello410$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello410$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello411$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello411$Query$Launch$LaunchSite();

  factory Hello411$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello411$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello411$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello411$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello411$Query$Launch$LaunchLinks();

  factory Hello411$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello411$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello411$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello411$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello411$Query$Launch$LaunchRocket();

  factory Hello411$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello411$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello411$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello411$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello411$Query$Launch();

  factory Hello411$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello411$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello411$Query$Launch$LaunchSite? launchSite;

  Hello411$Query$Launch$LaunchLinks? links;

  Hello411$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello411$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello411$Query extends JsonSerializable with EquatableMixin {
  Hello411$Query();

  factory Hello411$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello411$QueryFromJson(json);

  List<Hello411$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello411$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello412$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello412$Query$Launch$LaunchSite();

  factory Hello412$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello412$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello412$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello412$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello412$Query$Launch$LaunchLinks();

  factory Hello412$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello412$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello412$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello412$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello412$Query$Launch$LaunchRocket();

  factory Hello412$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello412$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello412$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello412$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello412$Query$Launch();

  factory Hello412$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello412$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello412$Query$Launch$LaunchSite? launchSite;

  Hello412$Query$Launch$LaunchLinks? links;

  Hello412$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello412$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello412$Query extends JsonSerializable with EquatableMixin {
  Hello412$Query();

  factory Hello412$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello412$QueryFromJson(json);

  List<Hello412$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello412$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello413$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello413$Query$Launch$LaunchSite();

  factory Hello413$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello413$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello413$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello413$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello413$Query$Launch$LaunchLinks();

  factory Hello413$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello413$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello413$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello413$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello413$Query$Launch$LaunchRocket();

  factory Hello413$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello413$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello413$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello413$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello413$Query$Launch();

  factory Hello413$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello413$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello413$Query$Launch$LaunchSite? launchSite;

  Hello413$Query$Launch$LaunchLinks? links;

  Hello413$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello413$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello413$Query extends JsonSerializable with EquatableMixin {
  Hello413$Query();

  factory Hello413$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello413$QueryFromJson(json);

  List<Hello413$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello413$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello414$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello414$Query$Launch$LaunchSite();

  factory Hello414$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello414$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello414$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello414$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello414$Query$Launch$LaunchLinks();

  factory Hello414$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello414$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello414$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello414$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello414$Query$Launch$LaunchRocket();

  factory Hello414$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello414$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello414$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello414$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello414$Query$Launch();

  factory Hello414$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello414$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello414$Query$Launch$LaunchSite? launchSite;

  Hello414$Query$Launch$LaunchLinks? links;

  Hello414$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello414$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello414$Query extends JsonSerializable with EquatableMixin {
  Hello414$Query();

  factory Hello414$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello414$QueryFromJson(json);

  List<Hello414$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello414$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello415$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello415$Query$Launch$LaunchSite();

  factory Hello415$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello415$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello415$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello415$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello415$Query$Launch$LaunchLinks();

  factory Hello415$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello415$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello415$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello415$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello415$Query$Launch$LaunchRocket();

  factory Hello415$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello415$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello415$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello415$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello415$Query$Launch();

  factory Hello415$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello415$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello415$Query$Launch$LaunchSite? launchSite;

  Hello415$Query$Launch$LaunchLinks? links;

  Hello415$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello415$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello415$Query extends JsonSerializable with EquatableMixin {
  Hello415$Query();

  factory Hello415$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello415$QueryFromJson(json);

  List<Hello415$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello415$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello416$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello416$Query$Launch$LaunchSite();

  factory Hello416$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello416$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello416$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello416$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello416$Query$Launch$LaunchLinks();

  factory Hello416$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello416$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello416$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello416$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello416$Query$Launch$LaunchRocket();

  factory Hello416$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello416$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello416$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello416$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello416$Query$Launch();

  factory Hello416$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello416$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello416$Query$Launch$LaunchSite? launchSite;

  Hello416$Query$Launch$LaunchLinks? links;

  Hello416$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello416$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello416$Query extends JsonSerializable with EquatableMixin {
  Hello416$Query();

  factory Hello416$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello416$QueryFromJson(json);

  List<Hello416$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello416$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello417$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello417$Query$Launch$LaunchSite();

  factory Hello417$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello417$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello417$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello417$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello417$Query$Launch$LaunchLinks();

  factory Hello417$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello417$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello417$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello417$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello417$Query$Launch$LaunchRocket();

  factory Hello417$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello417$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello417$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello417$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello417$Query$Launch();

  factory Hello417$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello417$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello417$Query$Launch$LaunchSite? launchSite;

  Hello417$Query$Launch$LaunchLinks? links;

  Hello417$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello417$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello417$Query extends JsonSerializable with EquatableMixin {
  Hello417$Query();

  factory Hello417$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello417$QueryFromJson(json);

  List<Hello417$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello417$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello418$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello418$Query$Launch$LaunchSite();

  factory Hello418$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello418$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello418$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello418$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello418$Query$Launch$LaunchLinks();

  factory Hello418$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello418$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello418$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello418$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello418$Query$Launch$LaunchRocket();

  factory Hello418$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello418$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello418$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello418$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello418$Query$Launch();

  factory Hello418$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello418$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello418$Query$Launch$LaunchSite? launchSite;

  Hello418$Query$Launch$LaunchLinks? links;

  Hello418$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello418$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello418$Query extends JsonSerializable with EquatableMixin {
  Hello418$Query();

  factory Hello418$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello418$QueryFromJson(json);

  List<Hello418$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello418$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello419$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello419$Query$Launch$LaunchSite();

  factory Hello419$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello419$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello419$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello419$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello419$Query$Launch$LaunchLinks();

  factory Hello419$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello419$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello419$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello419$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello419$Query$Launch$LaunchRocket();

  factory Hello419$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello419$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello419$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello419$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello419$Query$Launch();

  factory Hello419$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello419$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello419$Query$Launch$LaunchSite? launchSite;

  Hello419$Query$Launch$LaunchLinks? links;

  Hello419$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello419$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello419$Query extends JsonSerializable with EquatableMixin {
  Hello419$Query();

  factory Hello419$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello419$QueryFromJson(json);

  List<Hello419$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello419$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello420$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello420$Query$Launch$LaunchSite();

  factory Hello420$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello420$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello420$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello420$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello420$Query$Launch$LaunchLinks();

  factory Hello420$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello420$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello420$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello420$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello420$Query$Launch$LaunchRocket();

  factory Hello420$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello420$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello420$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello420$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello420$Query$Launch();

  factory Hello420$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello420$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello420$Query$Launch$LaunchSite? launchSite;

  Hello420$Query$Launch$LaunchLinks? links;

  Hello420$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello420$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello420$Query extends JsonSerializable with EquatableMixin {
  Hello420$Query();

  factory Hello420$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello420$QueryFromJson(json);

  List<Hello420$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello420$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello421$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello421$Query$Launch$LaunchSite();

  factory Hello421$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello421$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello421$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello421$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello421$Query$Launch$LaunchLinks();

  factory Hello421$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello421$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello421$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello421$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello421$Query$Launch$LaunchRocket();

  factory Hello421$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello421$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello421$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello421$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello421$Query$Launch();

  factory Hello421$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello421$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello421$Query$Launch$LaunchSite? launchSite;

  Hello421$Query$Launch$LaunchLinks? links;

  Hello421$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello421$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello421$Query extends JsonSerializable with EquatableMixin {
  Hello421$Query();

  factory Hello421$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello421$QueryFromJson(json);

  List<Hello421$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello421$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello422$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello422$Query$Launch$LaunchSite();

  factory Hello422$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello422$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello422$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello422$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello422$Query$Launch$LaunchLinks();

  factory Hello422$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello422$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello422$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello422$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello422$Query$Launch$LaunchRocket();

  factory Hello422$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello422$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello422$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello422$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello422$Query$Launch();

  factory Hello422$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello422$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello422$Query$Launch$LaunchSite? launchSite;

  Hello422$Query$Launch$LaunchLinks? links;

  Hello422$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello422$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello422$Query extends JsonSerializable with EquatableMixin {
  Hello422$Query();

  factory Hello422$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello422$QueryFromJson(json);

  List<Hello422$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello422$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello423$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello423$Query$Launch$LaunchSite();

  factory Hello423$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello423$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello423$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello423$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello423$Query$Launch$LaunchLinks();

  factory Hello423$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello423$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello423$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello423$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello423$Query$Launch$LaunchRocket();

  factory Hello423$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello423$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello423$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello423$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello423$Query$Launch();

  factory Hello423$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello423$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello423$Query$Launch$LaunchSite? launchSite;

  Hello423$Query$Launch$LaunchLinks? links;

  Hello423$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello423$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello423$Query extends JsonSerializable with EquatableMixin {
  Hello423$Query();

  factory Hello423$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello423$QueryFromJson(json);

  List<Hello423$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello423$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello424$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello424$Query$Launch$LaunchSite();

  factory Hello424$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello424$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello424$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello424$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello424$Query$Launch$LaunchLinks();

  factory Hello424$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello424$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello424$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello424$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello424$Query$Launch$LaunchRocket();

  factory Hello424$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello424$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello424$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello424$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello424$Query$Launch();

  factory Hello424$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello424$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello424$Query$Launch$LaunchSite? launchSite;

  Hello424$Query$Launch$LaunchLinks? links;

  Hello424$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello424$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello424$Query extends JsonSerializable with EquatableMixin {
  Hello424$Query();

  factory Hello424$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello424$QueryFromJson(json);

  List<Hello424$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello424$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello425$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello425$Query$Launch$LaunchSite();

  factory Hello425$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello425$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello425$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello425$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello425$Query$Launch$LaunchLinks();

  factory Hello425$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello425$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello425$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello425$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello425$Query$Launch$LaunchRocket();

  factory Hello425$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello425$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello425$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello425$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello425$Query$Launch();

  factory Hello425$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello425$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello425$Query$Launch$LaunchSite? launchSite;

  Hello425$Query$Launch$LaunchLinks? links;

  Hello425$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello425$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello425$Query extends JsonSerializable with EquatableMixin {
  Hello425$Query();

  factory Hello425$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello425$QueryFromJson(json);

  List<Hello425$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello425$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello426$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello426$Query$Launch$LaunchSite();

  factory Hello426$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello426$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello426$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello426$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello426$Query$Launch$LaunchLinks();

  factory Hello426$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello426$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello426$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello426$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello426$Query$Launch$LaunchRocket();

  factory Hello426$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello426$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello426$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello426$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello426$Query$Launch();

  factory Hello426$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello426$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello426$Query$Launch$LaunchSite? launchSite;

  Hello426$Query$Launch$LaunchLinks? links;

  Hello426$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello426$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello426$Query extends JsonSerializable with EquatableMixin {
  Hello426$Query();

  factory Hello426$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello426$QueryFromJson(json);

  List<Hello426$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello426$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello427$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello427$Query$Launch$LaunchSite();

  factory Hello427$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello427$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello427$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello427$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello427$Query$Launch$LaunchLinks();

  factory Hello427$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello427$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello427$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello427$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello427$Query$Launch$LaunchRocket();

  factory Hello427$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello427$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello427$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello427$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello427$Query$Launch();

  factory Hello427$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello427$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello427$Query$Launch$LaunchSite? launchSite;

  Hello427$Query$Launch$LaunchLinks? links;

  Hello427$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello427$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello427$Query extends JsonSerializable with EquatableMixin {
  Hello427$Query();

  factory Hello427$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello427$QueryFromJson(json);

  List<Hello427$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello427$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello428$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello428$Query$Launch$LaunchSite();

  factory Hello428$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello428$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello428$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello428$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello428$Query$Launch$LaunchLinks();

  factory Hello428$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello428$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello428$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello428$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello428$Query$Launch$LaunchRocket();

  factory Hello428$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello428$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello428$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello428$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello428$Query$Launch();

  factory Hello428$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello428$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello428$Query$Launch$LaunchSite? launchSite;

  Hello428$Query$Launch$LaunchLinks? links;

  Hello428$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello428$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello428$Query extends JsonSerializable with EquatableMixin {
  Hello428$Query();

  factory Hello428$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello428$QueryFromJson(json);

  List<Hello428$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello428$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello429$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello429$Query$Launch$LaunchSite();

  factory Hello429$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello429$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello429$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello429$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello429$Query$Launch$LaunchLinks();

  factory Hello429$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello429$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello429$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello429$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello429$Query$Launch$LaunchRocket();

  factory Hello429$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello429$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello429$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello429$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello429$Query$Launch();

  factory Hello429$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello429$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello429$Query$Launch$LaunchSite? launchSite;

  Hello429$Query$Launch$LaunchLinks? links;

  Hello429$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello429$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello429$Query extends JsonSerializable with EquatableMixin {
  Hello429$Query();

  factory Hello429$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello429$QueryFromJson(json);

  List<Hello429$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello429$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello430$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello430$Query$Launch$LaunchSite();

  factory Hello430$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello430$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello430$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello430$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello430$Query$Launch$LaunchLinks();

  factory Hello430$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello430$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello430$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello430$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello430$Query$Launch$LaunchRocket();

  factory Hello430$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello430$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello430$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello430$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello430$Query$Launch();

  factory Hello430$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello430$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello430$Query$Launch$LaunchSite? launchSite;

  Hello430$Query$Launch$LaunchLinks? links;

  Hello430$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello430$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello430$Query extends JsonSerializable with EquatableMixin {
  Hello430$Query();

  factory Hello430$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello430$QueryFromJson(json);

  List<Hello430$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello430$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello431$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello431$Query$Launch$LaunchSite();

  factory Hello431$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello431$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello431$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello431$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello431$Query$Launch$LaunchLinks();

  factory Hello431$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello431$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello431$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello431$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello431$Query$Launch$LaunchRocket();

  factory Hello431$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello431$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello431$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello431$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello431$Query$Launch();

  factory Hello431$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello431$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello431$Query$Launch$LaunchSite? launchSite;

  Hello431$Query$Launch$LaunchLinks? links;

  Hello431$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello431$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello431$Query extends JsonSerializable with EquatableMixin {
  Hello431$Query();

  factory Hello431$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello431$QueryFromJson(json);

  List<Hello431$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello431$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello432$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello432$Query$Launch$LaunchSite();

  factory Hello432$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello432$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello432$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello432$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello432$Query$Launch$LaunchLinks();

  factory Hello432$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello432$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello432$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello432$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello432$Query$Launch$LaunchRocket();

  factory Hello432$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello432$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello432$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello432$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello432$Query$Launch();

  factory Hello432$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello432$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello432$Query$Launch$LaunchSite? launchSite;

  Hello432$Query$Launch$LaunchLinks? links;

  Hello432$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello432$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello432$Query extends JsonSerializable with EquatableMixin {
  Hello432$Query();

  factory Hello432$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello432$QueryFromJson(json);

  List<Hello432$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello432$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello433$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello433$Query$Launch$LaunchSite();

  factory Hello433$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello433$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello433$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello433$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello433$Query$Launch$LaunchLinks();

  factory Hello433$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello433$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello433$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello433$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello433$Query$Launch$LaunchRocket();

  factory Hello433$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello433$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello433$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello433$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello433$Query$Launch();

  factory Hello433$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello433$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello433$Query$Launch$LaunchSite? launchSite;

  Hello433$Query$Launch$LaunchLinks? links;

  Hello433$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello433$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello433$Query extends JsonSerializable with EquatableMixin {
  Hello433$Query();

  factory Hello433$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello433$QueryFromJson(json);

  List<Hello433$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello433$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello434$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello434$Query$Launch$LaunchSite();

  factory Hello434$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello434$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello434$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello434$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello434$Query$Launch$LaunchLinks();

  factory Hello434$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello434$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello434$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello434$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello434$Query$Launch$LaunchRocket();

  factory Hello434$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello434$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello434$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello434$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello434$Query$Launch();

  factory Hello434$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello434$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello434$Query$Launch$LaunchSite? launchSite;

  Hello434$Query$Launch$LaunchLinks? links;

  Hello434$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello434$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello434$Query extends JsonSerializable with EquatableMixin {
  Hello434$Query();

  factory Hello434$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello434$QueryFromJson(json);

  List<Hello434$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello434$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello435$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello435$Query$Launch$LaunchSite();

  factory Hello435$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello435$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello435$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello435$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello435$Query$Launch$LaunchLinks();

  factory Hello435$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello435$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello435$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello435$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello435$Query$Launch$LaunchRocket();

  factory Hello435$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello435$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello435$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello435$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello435$Query$Launch();

  factory Hello435$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello435$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello435$Query$Launch$LaunchSite? launchSite;

  Hello435$Query$Launch$LaunchLinks? links;

  Hello435$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello435$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello435$Query extends JsonSerializable with EquatableMixin {
  Hello435$Query();

  factory Hello435$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello435$QueryFromJson(json);

  List<Hello435$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello435$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello436$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello436$Query$Launch$LaunchSite();

  factory Hello436$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello436$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello436$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello436$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello436$Query$Launch$LaunchLinks();

  factory Hello436$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello436$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello436$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello436$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello436$Query$Launch$LaunchRocket();

  factory Hello436$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello436$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello436$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello436$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello436$Query$Launch();

  factory Hello436$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello436$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello436$Query$Launch$LaunchSite? launchSite;

  Hello436$Query$Launch$LaunchLinks? links;

  Hello436$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello436$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello436$Query extends JsonSerializable with EquatableMixin {
  Hello436$Query();

  factory Hello436$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello436$QueryFromJson(json);

  List<Hello436$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello436$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello437$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello437$Query$Launch$LaunchSite();

  factory Hello437$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello437$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello437$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello437$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello437$Query$Launch$LaunchLinks();

  factory Hello437$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello437$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello437$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello437$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello437$Query$Launch$LaunchRocket();

  factory Hello437$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello437$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello437$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello437$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello437$Query$Launch();

  factory Hello437$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello437$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello437$Query$Launch$LaunchSite? launchSite;

  Hello437$Query$Launch$LaunchLinks? links;

  Hello437$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello437$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello437$Query extends JsonSerializable with EquatableMixin {
  Hello437$Query();

  factory Hello437$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello437$QueryFromJson(json);

  List<Hello437$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello437$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello438$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello438$Query$Launch$LaunchSite();

  factory Hello438$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello438$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello438$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello438$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello438$Query$Launch$LaunchLinks();

  factory Hello438$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello438$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello438$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello438$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello438$Query$Launch$LaunchRocket();

  factory Hello438$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello438$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello438$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello438$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello438$Query$Launch();

  factory Hello438$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello438$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello438$Query$Launch$LaunchSite? launchSite;

  Hello438$Query$Launch$LaunchLinks? links;

  Hello438$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello438$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello438$Query extends JsonSerializable with EquatableMixin {
  Hello438$Query();

  factory Hello438$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello438$QueryFromJson(json);

  List<Hello438$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello438$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello439$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello439$Query$Launch$LaunchSite();

  factory Hello439$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello439$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello439$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello439$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello439$Query$Launch$LaunchLinks();

  factory Hello439$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello439$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello439$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello439$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello439$Query$Launch$LaunchRocket();

  factory Hello439$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello439$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello439$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello439$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello439$Query$Launch();

  factory Hello439$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello439$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello439$Query$Launch$LaunchSite? launchSite;

  Hello439$Query$Launch$LaunchLinks? links;

  Hello439$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello439$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello439$Query extends JsonSerializable with EquatableMixin {
  Hello439$Query();

  factory Hello439$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello439$QueryFromJson(json);

  List<Hello439$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello439$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello440$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello440$Query$Launch$LaunchSite();

  factory Hello440$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello440$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello440$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello440$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello440$Query$Launch$LaunchLinks();

  factory Hello440$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello440$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello440$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello440$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello440$Query$Launch$LaunchRocket();

  factory Hello440$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello440$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello440$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello440$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello440$Query$Launch();

  factory Hello440$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello440$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello440$Query$Launch$LaunchSite? launchSite;

  Hello440$Query$Launch$LaunchLinks? links;

  Hello440$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello440$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello440$Query extends JsonSerializable with EquatableMixin {
  Hello440$Query();

  factory Hello440$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello440$QueryFromJson(json);

  List<Hello440$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello440$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello441$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello441$Query$Launch$LaunchSite();

  factory Hello441$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello441$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello441$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello441$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello441$Query$Launch$LaunchLinks();

  factory Hello441$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello441$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello441$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello441$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello441$Query$Launch$LaunchRocket();

  factory Hello441$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello441$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello441$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello441$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello441$Query$Launch();

  factory Hello441$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello441$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello441$Query$Launch$LaunchSite? launchSite;

  Hello441$Query$Launch$LaunchLinks? links;

  Hello441$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello441$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello441$Query extends JsonSerializable with EquatableMixin {
  Hello441$Query();

  factory Hello441$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello441$QueryFromJson(json);

  List<Hello441$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello441$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello442$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello442$Query$Launch$LaunchSite();

  factory Hello442$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello442$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello442$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello442$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello442$Query$Launch$LaunchLinks();

  factory Hello442$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello442$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello442$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello442$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello442$Query$Launch$LaunchRocket();

  factory Hello442$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello442$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello442$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello442$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello442$Query$Launch();

  factory Hello442$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello442$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello442$Query$Launch$LaunchSite? launchSite;

  Hello442$Query$Launch$LaunchLinks? links;

  Hello442$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello442$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello442$Query extends JsonSerializable with EquatableMixin {
  Hello442$Query();

  factory Hello442$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello442$QueryFromJson(json);

  List<Hello442$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello442$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello443$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello443$Query$Launch$LaunchSite();

  factory Hello443$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello443$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello443$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello443$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello443$Query$Launch$LaunchLinks();

  factory Hello443$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello443$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello443$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello443$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello443$Query$Launch$LaunchRocket();

  factory Hello443$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello443$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello443$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello443$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello443$Query$Launch();

  factory Hello443$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello443$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello443$Query$Launch$LaunchSite? launchSite;

  Hello443$Query$Launch$LaunchLinks? links;

  Hello443$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello443$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello443$Query extends JsonSerializable with EquatableMixin {
  Hello443$Query();

  factory Hello443$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello443$QueryFromJson(json);

  List<Hello443$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello443$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello444$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello444$Query$Launch$LaunchSite();

  factory Hello444$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello444$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello444$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello444$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello444$Query$Launch$LaunchLinks();

  factory Hello444$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello444$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello444$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello444$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello444$Query$Launch$LaunchRocket();

  factory Hello444$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello444$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello444$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello444$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello444$Query$Launch();

  factory Hello444$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello444$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello444$Query$Launch$LaunchSite? launchSite;

  Hello444$Query$Launch$LaunchLinks? links;

  Hello444$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello444$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello444$Query extends JsonSerializable with EquatableMixin {
  Hello444$Query();

  factory Hello444$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello444$QueryFromJson(json);

  List<Hello444$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello444$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello445$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello445$Query$Launch$LaunchSite();

  factory Hello445$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello445$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello445$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello445$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello445$Query$Launch$LaunchLinks();

  factory Hello445$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello445$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello445$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello445$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello445$Query$Launch$LaunchRocket();

  factory Hello445$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello445$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello445$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello445$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello445$Query$Launch();

  factory Hello445$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello445$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello445$Query$Launch$LaunchSite? launchSite;

  Hello445$Query$Launch$LaunchLinks? links;

  Hello445$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello445$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello445$Query extends JsonSerializable with EquatableMixin {
  Hello445$Query();

  factory Hello445$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello445$QueryFromJson(json);

  List<Hello445$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello445$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello446$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello446$Query$Launch$LaunchSite();

  factory Hello446$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello446$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello446$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello446$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello446$Query$Launch$LaunchLinks();

  factory Hello446$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello446$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello446$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello446$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello446$Query$Launch$LaunchRocket();

  factory Hello446$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello446$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello446$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello446$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello446$Query$Launch();

  factory Hello446$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello446$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello446$Query$Launch$LaunchSite? launchSite;

  Hello446$Query$Launch$LaunchLinks? links;

  Hello446$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello446$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello446$Query extends JsonSerializable with EquatableMixin {
  Hello446$Query();

  factory Hello446$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello446$QueryFromJson(json);

  List<Hello446$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello446$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello447$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello447$Query$Launch$LaunchSite();

  factory Hello447$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello447$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello447$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello447$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello447$Query$Launch$LaunchLinks();

  factory Hello447$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello447$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello447$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello447$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello447$Query$Launch$LaunchRocket();

  factory Hello447$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello447$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello447$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello447$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello447$Query$Launch();

  factory Hello447$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello447$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello447$Query$Launch$LaunchSite? launchSite;

  Hello447$Query$Launch$LaunchLinks? links;

  Hello447$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello447$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello447$Query extends JsonSerializable with EquatableMixin {
  Hello447$Query();

  factory Hello447$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello447$QueryFromJson(json);

  List<Hello447$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello447$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello448$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello448$Query$Launch$LaunchSite();

  factory Hello448$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello448$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello448$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello448$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello448$Query$Launch$LaunchLinks();

  factory Hello448$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello448$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello448$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello448$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello448$Query$Launch$LaunchRocket();

  factory Hello448$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello448$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello448$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello448$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello448$Query$Launch();

  factory Hello448$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello448$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello448$Query$Launch$LaunchSite? launchSite;

  Hello448$Query$Launch$LaunchLinks? links;

  Hello448$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello448$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello448$Query extends JsonSerializable with EquatableMixin {
  Hello448$Query();

  factory Hello448$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello448$QueryFromJson(json);

  List<Hello448$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello448$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello449$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello449$Query$Launch$LaunchSite();

  factory Hello449$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello449$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello449$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello449$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello449$Query$Launch$LaunchLinks();

  factory Hello449$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello449$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello449$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello449$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello449$Query$Launch$LaunchRocket();

  factory Hello449$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello449$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello449$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello449$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello449$Query$Launch();

  factory Hello449$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello449$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello449$Query$Launch$LaunchSite? launchSite;

  Hello449$Query$Launch$LaunchLinks? links;

  Hello449$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello449$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello449$Query extends JsonSerializable with EquatableMixin {
  Hello449$Query();

  factory Hello449$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello449$QueryFromJson(json);

  List<Hello449$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello449$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello450$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello450$Query$Launch$LaunchSite();

  factory Hello450$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello450$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello450$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello450$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello450$Query$Launch$LaunchLinks();

  factory Hello450$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello450$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello450$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello450$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello450$Query$Launch$LaunchRocket();

  factory Hello450$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello450$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello450$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello450$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello450$Query$Launch();

  factory Hello450$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello450$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello450$Query$Launch$LaunchSite? launchSite;

  Hello450$Query$Launch$LaunchLinks? links;

  Hello450$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello450$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello450$Query extends JsonSerializable with EquatableMixin {
  Hello450$Query();

  factory Hello450$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello450$QueryFromJson(json);

  List<Hello450$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello450$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello451$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello451$Query$Launch$LaunchSite();

  factory Hello451$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello451$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello451$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello451$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello451$Query$Launch$LaunchLinks();

  factory Hello451$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello451$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello451$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello451$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello451$Query$Launch$LaunchRocket();

  factory Hello451$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello451$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello451$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello451$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello451$Query$Launch();

  factory Hello451$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello451$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello451$Query$Launch$LaunchSite? launchSite;

  Hello451$Query$Launch$LaunchLinks? links;

  Hello451$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello451$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello451$Query extends JsonSerializable with EquatableMixin {
  Hello451$Query();

  factory Hello451$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello451$QueryFromJson(json);

  List<Hello451$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello451$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello452$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello452$Query$Launch$LaunchSite();

  factory Hello452$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello452$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello452$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello452$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello452$Query$Launch$LaunchLinks();

  factory Hello452$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello452$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello452$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello452$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello452$Query$Launch$LaunchRocket();

  factory Hello452$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello452$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello452$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello452$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello452$Query$Launch();

  factory Hello452$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello452$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello452$Query$Launch$LaunchSite? launchSite;

  Hello452$Query$Launch$LaunchLinks? links;

  Hello452$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello452$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello452$Query extends JsonSerializable with EquatableMixin {
  Hello452$Query();

  factory Hello452$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello452$QueryFromJson(json);

  List<Hello452$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello452$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello453$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello453$Query$Launch$LaunchSite();

  factory Hello453$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello453$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello453$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello453$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello453$Query$Launch$LaunchLinks();

  factory Hello453$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello453$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello453$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello453$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello453$Query$Launch$LaunchRocket();

  factory Hello453$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello453$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello453$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello453$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello453$Query$Launch();

  factory Hello453$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello453$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello453$Query$Launch$LaunchSite? launchSite;

  Hello453$Query$Launch$LaunchLinks? links;

  Hello453$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello453$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello453$Query extends JsonSerializable with EquatableMixin {
  Hello453$Query();

  factory Hello453$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello453$QueryFromJson(json);

  List<Hello453$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello453$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello454$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello454$Query$Launch$LaunchSite();

  factory Hello454$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello454$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello454$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello454$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello454$Query$Launch$LaunchLinks();

  factory Hello454$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello454$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello454$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello454$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello454$Query$Launch$LaunchRocket();

  factory Hello454$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello454$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello454$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello454$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello454$Query$Launch();

  factory Hello454$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello454$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello454$Query$Launch$LaunchSite? launchSite;

  Hello454$Query$Launch$LaunchLinks? links;

  Hello454$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello454$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello454$Query extends JsonSerializable with EquatableMixin {
  Hello454$Query();

  factory Hello454$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello454$QueryFromJson(json);

  List<Hello454$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello454$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello455$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello455$Query$Launch$LaunchSite();

  factory Hello455$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello455$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello455$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello455$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello455$Query$Launch$LaunchLinks();

  factory Hello455$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello455$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello455$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello455$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello455$Query$Launch$LaunchRocket();

  factory Hello455$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello455$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello455$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello455$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello455$Query$Launch();

  factory Hello455$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello455$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello455$Query$Launch$LaunchSite? launchSite;

  Hello455$Query$Launch$LaunchLinks? links;

  Hello455$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello455$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello455$Query extends JsonSerializable with EquatableMixin {
  Hello455$Query();

  factory Hello455$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello455$QueryFromJson(json);

  List<Hello455$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello455$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello456$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello456$Query$Launch$LaunchSite();

  factory Hello456$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello456$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello456$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello456$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello456$Query$Launch$LaunchLinks();

  factory Hello456$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello456$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello456$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello456$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello456$Query$Launch$LaunchRocket();

  factory Hello456$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello456$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello456$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello456$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello456$Query$Launch();

  factory Hello456$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello456$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello456$Query$Launch$LaunchSite? launchSite;

  Hello456$Query$Launch$LaunchLinks? links;

  Hello456$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello456$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello456$Query extends JsonSerializable with EquatableMixin {
  Hello456$Query();

  factory Hello456$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello456$QueryFromJson(json);

  List<Hello456$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello456$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello457$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello457$Query$Launch$LaunchSite();

  factory Hello457$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello457$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello457$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello457$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello457$Query$Launch$LaunchLinks();

  factory Hello457$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello457$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello457$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello457$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello457$Query$Launch$LaunchRocket();

  factory Hello457$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello457$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello457$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello457$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello457$Query$Launch();

  factory Hello457$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello457$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello457$Query$Launch$LaunchSite? launchSite;

  Hello457$Query$Launch$LaunchLinks? links;

  Hello457$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello457$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello457$Query extends JsonSerializable with EquatableMixin {
  Hello457$Query();

  factory Hello457$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello457$QueryFromJson(json);

  List<Hello457$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello457$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello458$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello458$Query$Launch$LaunchSite();

  factory Hello458$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello458$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello458$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello458$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello458$Query$Launch$LaunchLinks();

  factory Hello458$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello458$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello458$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello458$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello458$Query$Launch$LaunchRocket();

  factory Hello458$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello458$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello458$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello458$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello458$Query$Launch();

  factory Hello458$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello458$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello458$Query$Launch$LaunchSite? launchSite;

  Hello458$Query$Launch$LaunchLinks? links;

  Hello458$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello458$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello458$Query extends JsonSerializable with EquatableMixin {
  Hello458$Query();

  factory Hello458$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello458$QueryFromJson(json);

  List<Hello458$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello458$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello459$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello459$Query$Launch$LaunchSite();

  factory Hello459$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello459$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello459$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello459$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello459$Query$Launch$LaunchLinks();

  factory Hello459$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello459$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello459$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello459$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello459$Query$Launch$LaunchRocket();

  factory Hello459$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello459$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello459$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello459$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello459$Query$Launch();

  factory Hello459$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello459$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello459$Query$Launch$LaunchSite? launchSite;

  Hello459$Query$Launch$LaunchLinks? links;

  Hello459$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello459$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello459$Query extends JsonSerializable with EquatableMixin {
  Hello459$Query();

  factory Hello459$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello459$QueryFromJson(json);

  List<Hello459$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello459$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello460$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello460$Query$Launch$LaunchSite();

  factory Hello460$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello460$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello460$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello460$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello460$Query$Launch$LaunchLinks();

  factory Hello460$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello460$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello460$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello460$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello460$Query$Launch$LaunchRocket();

  factory Hello460$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello460$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello460$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello460$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello460$Query$Launch();

  factory Hello460$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello460$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello460$Query$Launch$LaunchSite? launchSite;

  Hello460$Query$Launch$LaunchLinks? links;

  Hello460$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello460$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello460$Query extends JsonSerializable with EquatableMixin {
  Hello460$Query();

  factory Hello460$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello460$QueryFromJson(json);

  List<Hello460$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello460$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello461$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello461$Query$Launch$LaunchSite();

  factory Hello461$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello461$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello461$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello461$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello461$Query$Launch$LaunchLinks();

  factory Hello461$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello461$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello461$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello461$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello461$Query$Launch$LaunchRocket();

  factory Hello461$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello461$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello461$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello461$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello461$Query$Launch();

  factory Hello461$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello461$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello461$Query$Launch$LaunchSite? launchSite;

  Hello461$Query$Launch$LaunchLinks? links;

  Hello461$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello461$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello461$Query extends JsonSerializable with EquatableMixin {
  Hello461$Query();

  factory Hello461$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello461$QueryFromJson(json);

  List<Hello461$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello461$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello462$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello462$Query$Launch$LaunchSite();

  factory Hello462$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello462$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello462$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello462$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello462$Query$Launch$LaunchLinks();

  factory Hello462$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello462$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello462$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello462$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello462$Query$Launch$LaunchRocket();

  factory Hello462$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello462$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello462$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello462$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello462$Query$Launch();

  factory Hello462$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello462$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello462$Query$Launch$LaunchSite? launchSite;

  Hello462$Query$Launch$LaunchLinks? links;

  Hello462$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello462$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello462$Query extends JsonSerializable with EquatableMixin {
  Hello462$Query();

  factory Hello462$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello462$QueryFromJson(json);

  List<Hello462$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello462$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello463$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello463$Query$Launch$LaunchSite();

  factory Hello463$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello463$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello463$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello463$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello463$Query$Launch$LaunchLinks();

  factory Hello463$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello463$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello463$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello463$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello463$Query$Launch$LaunchRocket();

  factory Hello463$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello463$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello463$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello463$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello463$Query$Launch();

  factory Hello463$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello463$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello463$Query$Launch$LaunchSite? launchSite;

  Hello463$Query$Launch$LaunchLinks? links;

  Hello463$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello463$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello463$Query extends JsonSerializable with EquatableMixin {
  Hello463$Query();

  factory Hello463$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello463$QueryFromJson(json);

  List<Hello463$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello463$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello464$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello464$Query$Launch$LaunchSite();

  factory Hello464$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello464$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello464$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello464$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello464$Query$Launch$LaunchLinks();

  factory Hello464$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello464$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello464$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello464$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello464$Query$Launch$LaunchRocket();

  factory Hello464$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello464$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello464$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello464$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello464$Query$Launch();

  factory Hello464$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello464$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello464$Query$Launch$LaunchSite? launchSite;

  Hello464$Query$Launch$LaunchLinks? links;

  Hello464$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello464$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello464$Query extends JsonSerializable with EquatableMixin {
  Hello464$Query();

  factory Hello464$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello464$QueryFromJson(json);

  List<Hello464$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello464$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello465$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello465$Query$Launch$LaunchSite();

  factory Hello465$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello465$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello465$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello465$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello465$Query$Launch$LaunchLinks();

  factory Hello465$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello465$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello465$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello465$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello465$Query$Launch$LaunchRocket();

  factory Hello465$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello465$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello465$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello465$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello465$Query$Launch();

  factory Hello465$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello465$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello465$Query$Launch$LaunchSite? launchSite;

  Hello465$Query$Launch$LaunchLinks? links;

  Hello465$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello465$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello465$Query extends JsonSerializable with EquatableMixin {
  Hello465$Query();

  factory Hello465$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello465$QueryFromJson(json);

  List<Hello465$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello465$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello466$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello466$Query$Launch$LaunchSite();

  factory Hello466$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello466$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello466$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello466$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello466$Query$Launch$LaunchLinks();

  factory Hello466$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello466$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello466$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello466$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello466$Query$Launch$LaunchRocket();

  factory Hello466$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello466$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello466$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello466$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello466$Query$Launch();

  factory Hello466$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello466$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello466$Query$Launch$LaunchSite? launchSite;

  Hello466$Query$Launch$LaunchLinks? links;

  Hello466$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello466$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello466$Query extends JsonSerializable with EquatableMixin {
  Hello466$Query();

  factory Hello466$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello466$QueryFromJson(json);

  List<Hello466$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello466$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello467$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello467$Query$Launch$LaunchSite();

  factory Hello467$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello467$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello467$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello467$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello467$Query$Launch$LaunchLinks();

  factory Hello467$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello467$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello467$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello467$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello467$Query$Launch$LaunchRocket();

  factory Hello467$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello467$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello467$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello467$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello467$Query$Launch();

  factory Hello467$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello467$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello467$Query$Launch$LaunchSite? launchSite;

  Hello467$Query$Launch$LaunchLinks? links;

  Hello467$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello467$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello467$Query extends JsonSerializable with EquatableMixin {
  Hello467$Query();

  factory Hello467$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello467$QueryFromJson(json);

  List<Hello467$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello467$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello468$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello468$Query$Launch$LaunchSite();

  factory Hello468$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello468$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello468$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello468$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello468$Query$Launch$LaunchLinks();

  factory Hello468$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello468$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello468$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello468$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello468$Query$Launch$LaunchRocket();

  factory Hello468$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello468$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello468$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello468$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello468$Query$Launch();

  factory Hello468$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello468$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello468$Query$Launch$LaunchSite? launchSite;

  Hello468$Query$Launch$LaunchLinks? links;

  Hello468$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello468$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello468$Query extends JsonSerializable with EquatableMixin {
  Hello468$Query();

  factory Hello468$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello468$QueryFromJson(json);

  List<Hello468$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello468$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello469$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello469$Query$Launch$LaunchSite();

  factory Hello469$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello469$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello469$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello469$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello469$Query$Launch$LaunchLinks();

  factory Hello469$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello469$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello469$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello469$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello469$Query$Launch$LaunchRocket();

  factory Hello469$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello469$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello469$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello469$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello469$Query$Launch();

  factory Hello469$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello469$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello469$Query$Launch$LaunchSite? launchSite;

  Hello469$Query$Launch$LaunchLinks? links;

  Hello469$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello469$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello469$Query extends JsonSerializable with EquatableMixin {
  Hello469$Query();

  factory Hello469$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello469$QueryFromJson(json);

  List<Hello469$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello469$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello470$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello470$Query$Launch$LaunchSite();

  factory Hello470$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello470$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello470$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello470$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello470$Query$Launch$LaunchLinks();

  factory Hello470$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello470$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello470$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello470$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello470$Query$Launch$LaunchRocket();

  factory Hello470$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello470$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello470$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello470$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello470$Query$Launch();

  factory Hello470$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello470$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello470$Query$Launch$LaunchSite? launchSite;

  Hello470$Query$Launch$LaunchLinks? links;

  Hello470$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello470$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello470$Query extends JsonSerializable with EquatableMixin {
  Hello470$Query();

  factory Hello470$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello470$QueryFromJson(json);

  List<Hello470$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello470$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello471$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello471$Query$Launch$LaunchSite();

  factory Hello471$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello471$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello471$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello471$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello471$Query$Launch$LaunchLinks();

  factory Hello471$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello471$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello471$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello471$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello471$Query$Launch$LaunchRocket();

  factory Hello471$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello471$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello471$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello471$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello471$Query$Launch();

  factory Hello471$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello471$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello471$Query$Launch$LaunchSite? launchSite;

  Hello471$Query$Launch$LaunchLinks? links;

  Hello471$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello471$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello471$Query extends JsonSerializable with EquatableMixin {
  Hello471$Query();

  factory Hello471$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello471$QueryFromJson(json);

  List<Hello471$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello471$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello472$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello472$Query$Launch$LaunchSite();

  factory Hello472$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello472$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello472$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello472$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello472$Query$Launch$LaunchLinks();

  factory Hello472$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello472$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello472$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello472$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello472$Query$Launch$LaunchRocket();

  factory Hello472$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello472$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello472$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello472$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello472$Query$Launch();

  factory Hello472$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello472$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello472$Query$Launch$LaunchSite? launchSite;

  Hello472$Query$Launch$LaunchLinks? links;

  Hello472$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello472$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello472$Query extends JsonSerializable with EquatableMixin {
  Hello472$Query();

  factory Hello472$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello472$QueryFromJson(json);

  List<Hello472$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello472$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello473$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello473$Query$Launch$LaunchSite();

  factory Hello473$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello473$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello473$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello473$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello473$Query$Launch$LaunchLinks();

  factory Hello473$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello473$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello473$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello473$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello473$Query$Launch$LaunchRocket();

  factory Hello473$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello473$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello473$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello473$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello473$Query$Launch();

  factory Hello473$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello473$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello473$Query$Launch$LaunchSite? launchSite;

  Hello473$Query$Launch$LaunchLinks? links;

  Hello473$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello473$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello473$Query extends JsonSerializable with EquatableMixin {
  Hello473$Query();

  factory Hello473$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello473$QueryFromJson(json);

  List<Hello473$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello473$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello474$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello474$Query$Launch$LaunchSite();

  factory Hello474$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello474$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello474$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello474$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello474$Query$Launch$LaunchLinks();

  factory Hello474$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello474$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello474$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello474$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello474$Query$Launch$LaunchRocket();

  factory Hello474$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello474$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello474$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello474$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello474$Query$Launch();

  factory Hello474$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello474$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello474$Query$Launch$LaunchSite? launchSite;

  Hello474$Query$Launch$LaunchLinks? links;

  Hello474$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello474$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello474$Query extends JsonSerializable with EquatableMixin {
  Hello474$Query();

  factory Hello474$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello474$QueryFromJson(json);

  List<Hello474$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello474$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello475$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello475$Query$Launch$LaunchSite();

  factory Hello475$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello475$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello475$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello475$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello475$Query$Launch$LaunchLinks();

  factory Hello475$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello475$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello475$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello475$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello475$Query$Launch$LaunchRocket();

  factory Hello475$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello475$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello475$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello475$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello475$Query$Launch();

  factory Hello475$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello475$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello475$Query$Launch$LaunchSite? launchSite;

  Hello475$Query$Launch$LaunchLinks? links;

  Hello475$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello475$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello475$Query extends JsonSerializable with EquatableMixin {
  Hello475$Query();

  factory Hello475$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello475$QueryFromJson(json);

  List<Hello475$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello475$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello476$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello476$Query$Launch$LaunchSite();

  factory Hello476$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello476$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello476$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello476$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello476$Query$Launch$LaunchLinks();

  factory Hello476$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello476$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello476$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello476$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello476$Query$Launch$LaunchRocket();

  factory Hello476$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello476$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello476$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello476$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello476$Query$Launch();

  factory Hello476$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello476$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello476$Query$Launch$LaunchSite? launchSite;

  Hello476$Query$Launch$LaunchLinks? links;

  Hello476$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello476$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello476$Query extends JsonSerializable with EquatableMixin {
  Hello476$Query();

  factory Hello476$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello476$QueryFromJson(json);

  List<Hello476$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello476$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello477$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello477$Query$Launch$LaunchSite();

  factory Hello477$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello477$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello477$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello477$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello477$Query$Launch$LaunchLinks();

  factory Hello477$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello477$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello477$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello477$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello477$Query$Launch$LaunchRocket();

  factory Hello477$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello477$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello477$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello477$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello477$Query$Launch();

  factory Hello477$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello477$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello477$Query$Launch$LaunchSite? launchSite;

  Hello477$Query$Launch$LaunchLinks? links;

  Hello477$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello477$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello477$Query extends JsonSerializable with EquatableMixin {
  Hello477$Query();

  factory Hello477$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello477$QueryFromJson(json);

  List<Hello477$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello477$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello478$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello478$Query$Launch$LaunchSite();

  factory Hello478$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello478$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello478$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello478$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello478$Query$Launch$LaunchLinks();

  factory Hello478$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello478$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello478$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello478$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello478$Query$Launch$LaunchRocket();

  factory Hello478$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello478$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello478$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello478$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello478$Query$Launch();

  factory Hello478$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello478$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello478$Query$Launch$LaunchSite? launchSite;

  Hello478$Query$Launch$LaunchLinks? links;

  Hello478$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello478$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello478$Query extends JsonSerializable with EquatableMixin {
  Hello478$Query();

  factory Hello478$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello478$QueryFromJson(json);

  List<Hello478$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello478$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello479$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello479$Query$Launch$LaunchSite();

  factory Hello479$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello479$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello479$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello479$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello479$Query$Launch$LaunchLinks();

  factory Hello479$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello479$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello479$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello479$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello479$Query$Launch$LaunchRocket();

  factory Hello479$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello479$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello479$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello479$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello479$Query$Launch();

  factory Hello479$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello479$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello479$Query$Launch$LaunchSite? launchSite;

  Hello479$Query$Launch$LaunchLinks? links;

  Hello479$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello479$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello479$Query extends JsonSerializable with EquatableMixin {
  Hello479$Query();

  factory Hello479$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello479$QueryFromJson(json);

  List<Hello479$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello479$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello480$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello480$Query$Launch$LaunchSite();

  factory Hello480$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello480$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello480$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello480$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello480$Query$Launch$LaunchLinks();

  factory Hello480$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello480$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello480$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello480$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello480$Query$Launch$LaunchRocket();

  factory Hello480$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello480$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello480$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello480$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello480$Query$Launch();

  factory Hello480$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello480$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello480$Query$Launch$LaunchSite? launchSite;

  Hello480$Query$Launch$LaunchLinks? links;

  Hello480$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello480$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello480$Query extends JsonSerializable with EquatableMixin {
  Hello480$Query();

  factory Hello480$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello480$QueryFromJson(json);

  List<Hello480$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello480$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello481$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello481$Query$Launch$LaunchSite();

  factory Hello481$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello481$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello481$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello481$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello481$Query$Launch$LaunchLinks();

  factory Hello481$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello481$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello481$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello481$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello481$Query$Launch$LaunchRocket();

  factory Hello481$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello481$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello481$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello481$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello481$Query$Launch();

  factory Hello481$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello481$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello481$Query$Launch$LaunchSite? launchSite;

  Hello481$Query$Launch$LaunchLinks? links;

  Hello481$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello481$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello481$Query extends JsonSerializable with EquatableMixin {
  Hello481$Query();

  factory Hello481$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello481$QueryFromJson(json);

  List<Hello481$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello481$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello482$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello482$Query$Launch$LaunchSite();

  factory Hello482$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello482$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello482$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello482$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello482$Query$Launch$LaunchLinks();

  factory Hello482$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello482$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello482$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello482$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello482$Query$Launch$LaunchRocket();

  factory Hello482$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello482$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello482$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello482$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello482$Query$Launch();

  factory Hello482$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello482$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello482$Query$Launch$LaunchSite? launchSite;

  Hello482$Query$Launch$LaunchLinks? links;

  Hello482$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello482$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello482$Query extends JsonSerializable with EquatableMixin {
  Hello482$Query();

  factory Hello482$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello482$QueryFromJson(json);

  List<Hello482$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello482$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello483$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello483$Query$Launch$LaunchSite();

  factory Hello483$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello483$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello483$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello483$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello483$Query$Launch$LaunchLinks();

  factory Hello483$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello483$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello483$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello483$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello483$Query$Launch$LaunchRocket();

  factory Hello483$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello483$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello483$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello483$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello483$Query$Launch();

  factory Hello483$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello483$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello483$Query$Launch$LaunchSite? launchSite;

  Hello483$Query$Launch$LaunchLinks? links;

  Hello483$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello483$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello483$Query extends JsonSerializable with EquatableMixin {
  Hello483$Query();

  factory Hello483$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello483$QueryFromJson(json);

  List<Hello483$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello483$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello484$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello484$Query$Launch$LaunchSite();

  factory Hello484$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello484$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello484$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello484$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello484$Query$Launch$LaunchLinks();

  factory Hello484$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello484$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello484$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello484$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello484$Query$Launch$LaunchRocket();

  factory Hello484$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello484$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello484$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello484$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello484$Query$Launch();

  factory Hello484$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello484$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello484$Query$Launch$LaunchSite? launchSite;

  Hello484$Query$Launch$LaunchLinks? links;

  Hello484$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello484$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello484$Query extends JsonSerializable with EquatableMixin {
  Hello484$Query();

  factory Hello484$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello484$QueryFromJson(json);

  List<Hello484$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello484$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello485$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello485$Query$Launch$LaunchSite();

  factory Hello485$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello485$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello485$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello485$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello485$Query$Launch$LaunchLinks();

  factory Hello485$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello485$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello485$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello485$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello485$Query$Launch$LaunchRocket();

  factory Hello485$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello485$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello485$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello485$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello485$Query$Launch();

  factory Hello485$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello485$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello485$Query$Launch$LaunchSite? launchSite;

  Hello485$Query$Launch$LaunchLinks? links;

  Hello485$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello485$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello485$Query extends JsonSerializable with EquatableMixin {
  Hello485$Query();

  factory Hello485$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello485$QueryFromJson(json);

  List<Hello485$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello485$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello486$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello486$Query$Launch$LaunchSite();

  factory Hello486$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello486$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello486$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello486$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello486$Query$Launch$LaunchLinks();

  factory Hello486$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello486$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello486$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello486$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello486$Query$Launch$LaunchRocket();

  factory Hello486$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello486$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello486$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello486$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello486$Query$Launch();

  factory Hello486$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello486$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello486$Query$Launch$LaunchSite? launchSite;

  Hello486$Query$Launch$LaunchLinks? links;

  Hello486$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello486$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello486$Query extends JsonSerializable with EquatableMixin {
  Hello486$Query();

  factory Hello486$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello486$QueryFromJson(json);

  List<Hello486$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello486$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello487$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello487$Query$Launch$LaunchSite();

  factory Hello487$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello487$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello487$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello487$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello487$Query$Launch$LaunchLinks();

  factory Hello487$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello487$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello487$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello487$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello487$Query$Launch$LaunchRocket();

  factory Hello487$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello487$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello487$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello487$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello487$Query$Launch();

  factory Hello487$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello487$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello487$Query$Launch$LaunchSite? launchSite;

  Hello487$Query$Launch$LaunchLinks? links;

  Hello487$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello487$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello487$Query extends JsonSerializable with EquatableMixin {
  Hello487$Query();

  factory Hello487$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello487$QueryFromJson(json);

  List<Hello487$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello487$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello488$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello488$Query$Launch$LaunchSite();

  factory Hello488$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello488$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello488$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello488$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello488$Query$Launch$LaunchLinks();

  factory Hello488$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello488$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello488$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello488$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello488$Query$Launch$LaunchRocket();

  factory Hello488$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello488$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello488$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello488$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello488$Query$Launch();

  factory Hello488$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello488$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello488$Query$Launch$LaunchSite? launchSite;

  Hello488$Query$Launch$LaunchLinks? links;

  Hello488$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello488$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello488$Query extends JsonSerializable with EquatableMixin {
  Hello488$Query();

  factory Hello488$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello488$QueryFromJson(json);

  List<Hello488$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello488$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello489$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello489$Query$Launch$LaunchSite();

  factory Hello489$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello489$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello489$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello489$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello489$Query$Launch$LaunchLinks();

  factory Hello489$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello489$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello489$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello489$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello489$Query$Launch$LaunchRocket();

  factory Hello489$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello489$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello489$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello489$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello489$Query$Launch();

  factory Hello489$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello489$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello489$Query$Launch$LaunchSite? launchSite;

  Hello489$Query$Launch$LaunchLinks? links;

  Hello489$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello489$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello489$Query extends JsonSerializable with EquatableMixin {
  Hello489$Query();

  factory Hello489$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello489$QueryFromJson(json);

  List<Hello489$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello489$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello490$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello490$Query$Launch$LaunchSite();

  factory Hello490$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello490$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello490$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello490$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello490$Query$Launch$LaunchLinks();

  factory Hello490$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello490$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello490$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello490$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello490$Query$Launch$LaunchRocket();

  factory Hello490$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello490$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello490$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello490$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello490$Query$Launch();

  factory Hello490$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello490$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello490$Query$Launch$LaunchSite? launchSite;

  Hello490$Query$Launch$LaunchLinks? links;

  Hello490$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello490$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello490$Query extends JsonSerializable with EquatableMixin {
  Hello490$Query();

  factory Hello490$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello490$QueryFromJson(json);

  List<Hello490$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello490$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello491$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello491$Query$Launch$LaunchSite();

  factory Hello491$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello491$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello491$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello491$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello491$Query$Launch$LaunchLinks();

  factory Hello491$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello491$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello491$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello491$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello491$Query$Launch$LaunchRocket();

  factory Hello491$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello491$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello491$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello491$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello491$Query$Launch();

  factory Hello491$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello491$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello491$Query$Launch$LaunchSite? launchSite;

  Hello491$Query$Launch$LaunchLinks? links;

  Hello491$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello491$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello491$Query extends JsonSerializable with EquatableMixin {
  Hello491$Query();

  factory Hello491$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello491$QueryFromJson(json);

  List<Hello491$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello491$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello492$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello492$Query$Launch$LaunchSite();

  factory Hello492$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello492$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello492$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello492$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello492$Query$Launch$LaunchLinks();

  factory Hello492$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello492$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello492$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello492$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello492$Query$Launch$LaunchRocket();

  factory Hello492$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello492$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello492$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello492$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello492$Query$Launch();

  factory Hello492$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello492$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello492$Query$Launch$LaunchSite? launchSite;

  Hello492$Query$Launch$LaunchLinks? links;

  Hello492$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello492$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello492$Query extends JsonSerializable with EquatableMixin {
  Hello492$Query();

  factory Hello492$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello492$QueryFromJson(json);

  List<Hello492$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello492$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello493$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello493$Query$Launch$LaunchSite();

  factory Hello493$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello493$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello493$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello493$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello493$Query$Launch$LaunchLinks();

  factory Hello493$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello493$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello493$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello493$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello493$Query$Launch$LaunchRocket();

  factory Hello493$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello493$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello493$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello493$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello493$Query$Launch();

  factory Hello493$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello493$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello493$Query$Launch$LaunchSite? launchSite;

  Hello493$Query$Launch$LaunchLinks? links;

  Hello493$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello493$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello493$Query extends JsonSerializable with EquatableMixin {
  Hello493$Query();

  factory Hello493$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello493$QueryFromJson(json);

  List<Hello493$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello493$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello494$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello494$Query$Launch$LaunchSite();

  factory Hello494$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello494$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello494$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello494$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello494$Query$Launch$LaunchLinks();

  factory Hello494$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello494$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello494$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello494$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello494$Query$Launch$LaunchRocket();

  factory Hello494$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello494$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello494$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello494$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello494$Query$Launch();

  factory Hello494$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello494$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello494$Query$Launch$LaunchSite? launchSite;

  Hello494$Query$Launch$LaunchLinks? links;

  Hello494$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello494$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello494$Query extends JsonSerializable with EquatableMixin {
  Hello494$Query();

  factory Hello494$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello494$QueryFromJson(json);

  List<Hello494$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello494$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello495$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello495$Query$Launch$LaunchSite();

  factory Hello495$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello495$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello495$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello495$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello495$Query$Launch$LaunchLinks();

  factory Hello495$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello495$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello495$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello495$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello495$Query$Launch$LaunchRocket();

  factory Hello495$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello495$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello495$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello495$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello495$Query$Launch();

  factory Hello495$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello495$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello495$Query$Launch$LaunchSite? launchSite;

  Hello495$Query$Launch$LaunchLinks? links;

  Hello495$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello495$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello495$Query extends JsonSerializable with EquatableMixin {
  Hello495$Query();

  factory Hello495$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello495$QueryFromJson(json);

  List<Hello495$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello495$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello496$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello496$Query$Launch$LaunchSite();

  factory Hello496$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello496$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello496$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello496$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello496$Query$Launch$LaunchLinks();

  factory Hello496$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello496$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello496$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello496$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello496$Query$Launch$LaunchRocket();

  factory Hello496$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello496$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello496$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello496$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello496$Query$Launch();

  factory Hello496$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello496$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello496$Query$Launch$LaunchSite? launchSite;

  Hello496$Query$Launch$LaunchLinks? links;

  Hello496$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello496$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello496$Query extends JsonSerializable with EquatableMixin {
  Hello496$Query();

  factory Hello496$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello496$QueryFromJson(json);

  List<Hello496$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello496$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello497$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello497$Query$Launch$LaunchSite();

  factory Hello497$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello497$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello497$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello497$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello497$Query$Launch$LaunchLinks();

  factory Hello497$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello497$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello497$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello497$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello497$Query$Launch$LaunchRocket();

  factory Hello497$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello497$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello497$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello497$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello497$Query$Launch();

  factory Hello497$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello497$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello497$Query$Launch$LaunchSite? launchSite;

  Hello497$Query$Launch$LaunchLinks? links;

  Hello497$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello497$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello497$Query extends JsonSerializable with EquatableMixin {
  Hello497$Query();

  factory Hello497$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello497$QueryFromJson(json);

  List<Hello497$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello497$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello498$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello498$Query$Launch$LaunchSite();

  factory Hello498$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello498$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello498$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello498$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello498$Query$Launch$LaunchLinks();

  factory Hello498$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello498$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello498$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello498$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello498$Query$Launch$LaunchRocket();

  factory Hello498$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello498$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello498$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello498$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello498$Query$Launch();

  factory Hello498$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello498$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello498$Query$Launch$LaunchSite? launchSite;

  Hello498$Query$Launch$LaunchLinks? links;

  Hello498$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello498$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello498$Query extends JsonSerializable with EquatableMixin {
  Hello498$Query();

  factory Hello498$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello498$QueryFromJson(json);

  List<Hello498$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello498$QueryToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello499$Query$Launch$LaunchSite extends JsonSerializable
    with EquatableMixin {
  Hello499$Query$Launch$LaunchSite();

  factory Hello499$Query$Launch$LaunchSite.fromJson(
          Map<String, dynamic> json) =>
      _$Hello499$Query$Launch$LaunchSiteFromJson(json);

  @JsonKey(name: 'site_name_long')
  String? siteNameLong;

  @override
  List<Object?> get props => [siteNameLong];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello499$Query$Launch$LaunchSiteToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello499$Query$Launch$LaunchLinks extends JsonSerializable
    with EquatableMixin {
  Hello499$Query$Launch$LaunchLinks();

  factory Hello499$Query$Launch$LaunchLinks.fromJson(
          Map<String, dynamic> json) =>
      _$Hello499$Query$Launch$LaunchLinksFromJson(json);

  @JsonKey(name: 'article_link')
  String? articleLink;

  @JsonKey(name: 'video_link')
  String? videoLink;

  @override
  List<Object?> get props => [articleLink, videoLink];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello499$Query$Launch$LaunchLinksToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello499$Query$Launch$LaunchRocket extends JsonSerializable
    with EquatableMixin {
  Hello499$Query$Launch$LaunchRocket();

  factory Hello499$Query$Launch$LaunchRocket.fromJson(
          Map<String, dynamic> json) =>
      _$Hello499$Query$Launch$LaunchRocketFromJson(json);

  @JsonKey(name: 'rocket_name')
  String? rocketName;

  @override
  List<Object?> get props => [rocketName];
  @override
  Map<String, dynamic> toJson() =>
      _$Hello499$Query$Launch$LaunchRocketToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello499$Query$Launch extends JsonSerializable with EquatableMixin {
  Hello499$Query$Launch();

  factory Hello499$Query$Launch.fromJson(Map<String, dynamic> json) =>
      _$Hello499$Query$LaunchFromJson(json);

  @JsonKey(name: 'mission_name')
  String? missionName;

  @JsonKey(
      name: 'launch_date_local',
      fromJson: fromGraphQLDateNullableToDartDateTimeNullable,
      toJson: fromDartDateTimeNullableToGraphQLDateNullable)
  DateTime? launchDateLocal;

  @JsonKey(name: 'launch_site')
  Hello499$Query$Launch$LaunchSite? launchSite;

  Hello499$Query$Launch$LaunchLinks? links;

  Hello499$Query$Launch$LaunchRocket? rocket;

  @override
  List<Object?> get props =>
      [missionName, launchDateLocal, launchSite, links, rocket];
  @override
  Map<String, dynamic> toJson() => _$Hello499$Query$LaunchToJson(this);
}

@JsonSerializable(explicitToJson: true)
class Hello499$Query extends JsonSerializable with EquatableMixin {
  Hello499$Query();

  factory Hello499$Query.fromJson(Map<String, dynamic> json) =>
      _$Hello499$QueryFromJson(json);

  List<Hello499$Query$Launch?>? launchesPast;

  @override
  List<Object?> get props => [launchesPast];
  @override
  Map<String, dynamic> toJson() => _$Hello499$QueryToJson(this);
}

final HELLO0_QUERY_DOCUMENT_OPERATION_NAME = 'hello0';
final HELLO0_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello0'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello0Query extends GraphQLQuery<Hello0$Query, JsonSerializable> {
  Hello0Query();

  @override
  final DocumentNode document = HELLO0_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO0_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello0$Query parse(Map<String, dynamic> json) => Hello0$Query.fromJson(json);
}

final HELLO1_QUERY_DOCUMENT_OPERATION_NAME = 'hello1';
final HELLO1_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello1'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello1Query extends GraphQLQuery<Hello1$Query, JsonSerializable> {
  Hello1Query();

  @override
  final DocumentNode document = HELLO1_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO1_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello1$Query parse(Map<String, dynamic> json) => Hello1$Query.fromJson(json);
}

final HELLO2_QUERY_DOCUMENT_OPERATION_NAME = 'hello2';
final HELLO2_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello2'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello2Query extends GraphQLQuery<Hello2$Query, JsonSerializable> {
  Hello2Query();

  @override
  final DocumentNode document = HELLO2_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO2_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello2$Query parse(Map<String, dynamic> json) => Hello2$Query.fromJson(json);
}

final HELLO3_QUERY_DOCUMENT_OPERATION_NAME = 'hello3';
final HELLO3_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello3'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello3Query extends GraphQLQuery<Hello3$Query, JsonSerializable> {
  Hello3Query();

  @override
  final DocumentNode document = HELLO3_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO3_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello3$Query parse(Map<String, dynamic> json) => Hello3$Query.fromJson(json);
}

final HELLO4_QUERY_DOCUMENT_OPERATION_NAME = 'hello4';
final HELLO4_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello4'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello4Query extends GraphQLQuery<Hello4$Query, JsonSerializable> {
  Hello4Query();

  @override
  final DocumentNode document = HELLO4_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO4_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello4$Query parse(Map<String, dynamic> json) => Hello4$Query.fromJson(json);
}

final HELLO5_QUERY_DOCUMENT_OPERATION_NAME = 'hello5';
final HELLO5_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello5'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello5Query extends GraphQLQuery<Hello5$Query, JsonSerializable> {
  Hello5Query();

  @override
  final DocumentNode document = HELLO5_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO5_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello5$Query parse(Map<String, dynamic> json) => Hello5$Query.fromJson(json);
}

final HELLO6_QUERY_DOCUMENT_OPERATION_NAME = 'hello6';
final HELLO6_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello6'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello6Query extends GraphQLQuery<Hello6$Query, JsonSerializable> {
  Hello6Query();

  @override
  final DocumentNode document = HELLO6_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO6_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello6$Query parse(Map<String, dynamic> json) => Hello6$Query.fromJson(json);
}

final HELLO7_QUERY_DOCUMENT_OPERATION_NAME = 'hello7';
final HELLO7_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello7'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello7Query extends GraphQLQuery<Hello7$Query, JsonSerializable> {
  Hello7Query();

  @override
  final DocumentNode document = HELLO7_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO7_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello7$Query parse(Map<String, dynamic> json) => Hello7$Query.fromJson(json);
}

final HELLO8_QUERY_DOCUMENT_OPERATION_NAME = 'hello8';
final HELLO8_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello8'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello8Query extends GraphQLQuery<Hello8$Query, JsonSerializable> {
  Hello8Query();

  @override
  final DocumentNode document = HELLO8_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO8_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello8$Query parse(Map<String, dynamic> json) => Hello8$Query.fromJson(json);
}

final HELLO9_QUERY_DOCUMENT_OPERATION_NAME = 'hello9';
final HELLO9_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello9'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello9Query extends GraphQLQuery<Hello9$Query, JsonSerializable> {
  Hello9Query();

  @override
  final DocumentNode document = HELLO9_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO9_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello9$Query parse(Map<String, dynamic> json) => Hello9$Query.fromJson(json);
}

final HELLO10_QUERY_DOCUMENT_OPERATION_NAME = 'hello10';
final HELLO10_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello10'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello10Query extends GraphQLQuery<Hello10$Query, JsonSerializable> {
  Hello10Query();

  @override
  final DocumentNode document = HELLO10_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO10_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello10$Query parse(Map<String, dynamic> json) =>
      Hello10$Query.fromJson(json);
}

final HELLO11_QUERY_DOCUMENT_OPERATION_NAME = 'hello11';
final HELLO11_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello11'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello11Query extends GraphQLQuery<Hello11$Query, JsonSerializable> {
  Hello11Query();

  @override
  final DocumentNode document = HELLO11_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO11_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello11$Query parse(Map<String, dynamic> json) =>
      Hello11$Query.fromJson(json);
}

final HELLO12_QUERY_DOCUMENT_OPERATION_NAME = 'hello12';
final HELLO12_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello12'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello12Query extends GraphQLQuery<Hello12$Query, JsonSerializable> {
  Hello12Query();

  @override
  final DocumentNode document = HELLO12_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO12_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello12$Query parse(Map<String, dynamic> json) =>
      Hello12$Query.fromJson(json);
}

final HELLO13_QUERY_DOCUMENT_OPERATION_NAME = 'hello13';
final HELLO13_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello13'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello13Query extends GraphQLQuery<Hello13$Query, JsonSerializable> {
  Hello13Query();

  @override
  final DocumentNode document = HELLO13_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO13_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello13$Query parse(Map<String, dynamic> json) =>
      Hello13$Query.fromJson(json);
}

final HELLO14_QUERY_DOCUMENT_OPERATION_NAME = 'hello14';
final HELLO14_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello14'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello14Query extends GraphQLQuery<Hello14$Query, JsonSerializable> {
  Hello14Query();

  @override
  final DocumentNode document = HELLO14_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO14_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello14$Query parse(Map<String, dynamic> json) =>
      Hello14$Query.fromJson(json);
}

final HELLO15_QUERY_DOCUMENT_OPERATION_NAME = 'hello15';
final HELLO15_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello15'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello15Query extends GraphQLQuery<Hello15$Query, JsonSerializable> {
  Hello15Query();

  @override
  final DocumentNode document = HELLO15_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO15_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello15$Query parse(Map<String, dynamic> json) =>
      Hello15$Query.fromJson(json);
}

final HELLO16_QUERY_DOCUMENT_OPERATION_NAME = 'hello16';
final HELLO16_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello16'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello16Query extends GraphQLQuery<Hello16$Query, JsonSerializable> {
  Hello16Query();

  @override
  final DocumentNode document = HELLO16_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO16_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello16$Query parse(Map<String, dynamic> json) =>
      Hello16$Query.fromJson(json);
}

final HELLO17_QUERY_DOCUMENT_OPERATION_NAME = 'hello17';
final HELLO17_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello17'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello17Query extends GraphQLQuery<Hello17$Query, JsonSerializable> {
  Hello17Query();

  @override
  final DocumentNode document = HELLO17_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO17_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello17$Query parse(Map<String, dynamic> json) =>
      Hello17$Query.fromJson(json);
}

final HELLO18_QUERY_DOCUMENT_OPERATION_NAME = 'hello18';
final HELLO18_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello18'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello18Query extends GraphQLQuery<Hello18$Query, JsonSerializable> {
  Hello18Query();

  @override
  final DocumentNode document = HELLO18_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO18_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello18$Query parse(Map<String, dynamic> json) =>
      Hello18$Query.fromJson(json);
}

final HELLO19_QUERY_DOCUMENT_OPERATION_NAME = 'hello19';
final HELLO19_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello19'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello19Query extends GraphQLQuery<Hello19$Query, JsonSerializable> {
  Hello19Query();

  @override
  final DocumentNode document = HELLO19_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO19_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello19$Query parse(Map<String, dynamic> json) =>
      Hello19$Query.fromJson(json);
}

final HELLO20_QUERY_DOCUMENT_OPERATION_NAME = 'hello20';
final HELLO20_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello20'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello20Query extends GraphQLQuery<Hello20$Query, JsonSerializable> {
  Hello20Query();

  @override
  final DocumentNode document = HELLO20_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO20_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello20$Query parse(Map<String, dynamic> json) =>
      Hello20$Query.fromJson(json);
}

final HELLO21_QUERY_DOCUMENT_OPERATION_NAME = 'hello21';
final HELLO21_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello21'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello21Query extends GraphQLQuery<Hello21$Query, JsonSerializable> {
  Hello21Query();

  @override
  final DocumentNode document = HELLO21_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO21_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello21$Query parse(Map<String, dynamic> json) =>
      Hello21$Query.fromJson(json);
}

final HELLO22_QUERY_DOCUMENT_OPERATION_NAME = 'hello22';
final HELLO22_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello22'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello22Query extends GraphQLQuery<Hello22$Query, JsonSerializable> {
  Hello22Query();

  @override
  final DocumentNode document = HELLO22_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO22_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello22$Query parse(Map<String, dynamic> json) =>
      Hello22$Query.fromJson(json);
}

final HELLO23_QUERY_DOCUMENT_OPERATION_NAME = 'hello23';
final HELLO23_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello23'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello23Query extends GraphQLQuery<Hello23$Query, JsonSerializable> {
  Hello23Query();

  @override
  final DocumentNode document = HELLO23_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO23_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello23$Query parse(Map<String, dynamic> json) =>
      Hello23$Query.fromJson(json);
}

final HELLO24_QUERY_DOCUMENT_OPERATION_NAME = 'hello24';
final HELLO24_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello24'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello24Query extends GraphQLQuery<Hello24$Query, JsonSerializable> {
  Hello24Query();

  @override
  final DocumentNode document = HELLO24_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO24_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello24$Query parse(Map<String, dynamic> json) =>
      Hello24$Query.fromJson(json);
}

final HELLO25_QUERY_DOCUMENT_OPERATION_NAME = 'hello25';
final HELLO25_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello25'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello25Query extends GraphQLQuery<Hello25$Query, JsonSerializable> {
  Hello25Query();

  @override
  final DocumentNode document = HELLO25_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO25_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello25$Query parse(Map<String, dynamic> json) =>
      Hello25$Query.fromJson(json);
}

final HELLO26_QUERY_DOCUMENT_OPERATION_NAME = 'hello26';
final HELLO26_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello26'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello26Query extends GraphQLQuery<Hello26$Query, JsonSerializable> {
  Hello26Query();

  @override
  final DocumentNode document = HELLO26_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO26_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello26$Query parse(Map<String, dynamic> json) =>
      Hello26$Query.fromJson(json);
}

final HELLO27_QUERY_DOCUMENT_OPERATION_NAME = 'hello27';
final HELLO27_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello27'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello27Query extends GraphQLQuery<Hello27$Query, JsonSerializable> {
  Hello27Query();

  @override
  final DocumentNode document = HELLO27_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO27_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello27$Query parse(Map<String, dynamic> json) =>
      Hello27$Query.fromJson(json);
}

final HELLO28_QUERY_DOCUMENT_OPERATION_NAME = 'hello28';
final HELLO28_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello28'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello28Query extends GraphQLQuery<Hello28$Query, JsonSerializable> {
  Hello28Query();

  @override
  final DocumentNode document = HELLO28_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO28_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello28$Query parse(Map<String, dynamic> json) =>
      Hello28$Query.fromJson(json);
}

final HELLO29_QUERY_DOCUMENT_OPERATION_NAME = 'hello29';
final HELLO29_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello29'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello29Query extends GraphQLQuery<Hello29$Query, JsonSerializable> {
  Hello29Query();

  @override
  final DocumentNode document = HELLO29_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO29_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello29$Query parse(Map<String, dynamic> json) =>
      Hello29$Query.fromJson(json);
}

final HELLO30_QUERY_DOCUMENT_OPERATION_NAME = 'hello30';
final HELLO30_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello30'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello30Query extends GraphQLQuery<Hello30$Query, JsonSerializable> {
  Hello30Query();

  @override
  final DocumentNode document = HELLO30_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO30_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello30$Query parse(Map<String, dynamic> json) =>
      Hello30$Query.fromJson(json);
}

final HELLO31_QUERY_DOCUMENT_OPERATION_NAME = 'hello31';
final HELLO31_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello31'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello31Query extends GraphQLQuery<Hello31$Query, JsonSerializable> {
  Hello31Query();

  @override
  final DocumentNode document = HELLO31_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO31_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello31$Query parse(Map<String, dynamic> json) =>
      Hello31$Query.fromJson(json);
}

final HELLO32_QUERY_DOCUMENT_OPERATION_NAME = 'hello32';
final HELLO32_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello32'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello32Query extends GraphQLQuery<Hello32$Query, JsonSerializable> {
  Hello32Query();

  @override
  final DocumentNode document = HELLO32_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO32_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello32$Query parse(Map<String, dynamic> json) =>
      Hello32$Query.fromJson(json);
}

final HELLO33_QUERY_DOCUMENT_OPERATION_NAME = 'hello33';
final HELLO33_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello33'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello33Query extends GraphQLQuery<Hello33$Query, JsonSerializable> {
  Hello33Query();

  @override
  final DocumentNode document = HELLO33_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO33_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello33$Query parse(Map<String, dynamic> json) =>
      Hello33$Query.fromJson(json);
}

final HELLO34_QUERY_DOCUMENT_OPERATION_NAME = 'hello34';
final HELLO34_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello34'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello34Query extends GraphQLQuery<Hello34$Query, JsonSerializable> {
  Hello34Query();

  @override
  final DocumentNode document = HELLO34_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO34_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello34$Query parse(Map<String, dynamic> json) =>
      Hello34$Query.fromJson(json);
}

final HELLO35_QUERY_DOCUMENT_OPERATION_NAME = 'hello35';
final HELLO35_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello35'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello35Query extends GraphQLQuery<Hello35$Query, JsonSerializable> {
  Hello35Query();

  @override
  final DocumentNode document = HELLO35_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO35_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello35$Query parse(Map<String, dynamic> json) =>
      Hello35$Query.fromJson(json);
}

final HELLO36_QUERY_DOCUMENT_OPERATION_NAME = 'hello36';
final HELLO36_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello36'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello36Query extends GraphQLQuery<Hello36$Query, JsonSerializable> {
  Hello36Query();

  @override
  final DocumentNode document = HELLO36_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO36_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello36$Query parse(Map<String, dynamic> json) =>
      Hello36$Query.fromJson(json);
}

final HELLO37_QUERY_DOCUMENT_OPERATION_NAME = 'hello37';
final HELLO37_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello37'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello37Query extends GraphQLQuery<Hello37$Query, JsonSerializable> {
  Hello37Query();

  @override
  final DocumentNode document = HELLO37_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO37_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello37$Query parse(Map<String, dynamic> json) =>
      Hello37$Query.fromJson(json);
}

final HELLO38_QUERY_DOCUMENT_OPERATION_NAME = 'hello38';
final HELLO38_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello38'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello38Query extends GraphQLQuery<Hello38$Query, JsonSerializable> {
  Hello38Query();

  @override
  final DocumentNode document = HELLO38_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO38_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello38$Query parse(Map<String, dynamic> json) =>
      Hello38$Query.fromJson(json);
}

final HELLO39_QUERY_DOCUMENT_OPERATION_NAME = 'hello39';
final HELLO39_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello39'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello39Query extends GraphQLQuery<Hello39$Query, JsonSerializable> {
  Hello39Query();

  @override
  final DocumentNode document = HELLO39_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO39_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello39$Query parse(Map<String, dynamic> json) =>
      Hello39$Query.fromJson(json);
}

final HELLO40_QUERY_DOCUMENT_OPERATION_NAME = 'hello40';
final HELLO40_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello40'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello40Query extends GraphQLQuery<Hello40$Query, JsonSerializable> {
  Hello40Query();

  @override
  final DocumentNode document = HELLO40_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO40_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello40$Query parse(Map<String, dynamic> json) =>
      Hello40$Query.fromJson(json);
}

final HELLO41_QUERY_DOCUMENT_OPERATION_NAME = 'hello41';
final HELLO41_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello41'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello41Query extends GraphQLQuery<Hello41$Query, JsonSerializable> {
  Hello41Query();

  @override
  final DocumentNode document = HELLO41_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO41_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello41$Query parse(Map<String, dynamic> json) =>
      Hello41$Query.fromJson(json);
}

final HELLO42_QUERY_DOCUMENT_OPERATION_NAME = 'hello42';
final HELLO42_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello42'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello42Query extends GraphQLQuery<Hello42$Query, JsonSerializable> {
  Hello42Query();

  @override
  final DocumentNode document = HELLO42_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO42_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello42$Query parse(Map<String, dynamic> json) =>
      Hello42$Query.fromJson(json);
}

final HELLO43_QUERY_DOCUMENT_OPERATION_NAME = 'hello43';
final HELLO43_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello43'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello43Query extends GraphQLQuery<Hello43$Query, JsonSerializable> {
  Hello43Query();

  @override
  final DocumentNode document = HELLO43_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO43_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello43$Query parse(Map<String, dynamic> json) =>
      Hello43$Query.fromJson(json);
}

final HELLO44_QUERY_DOCUMENT_OPERATION_NAME = 'hello44';
final HELLO44_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello44'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello44Query extends GraphQLQuery<Hello44$Query, JsonSerializable> {
  Hello44Query();

  @override
  final DocumentNode document = HELLO44_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO44_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello44$Query parse(Map<String, dynamic> json) =>
      Hello44$Query.fromJson(json);
}

final HELLO45_QUERY_DOCUMENT_OPERATION_NAME = 'hello45';
final HELLO45_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello45'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello45Query extends GraphQLQuery<Hello45$Query, JsonSerializable> {
  Hello45Query();

  @override
  final DocumentNode document = HELLO45_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO45_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello45$Query parse(Map<String, dynamic> json) =>
      Hello45$Query.fromJson(json);
}

final HELLO46_QUERY_DOCUMENT_OPERATION_NAME = 'hello46';
final HELLO46_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello46'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello46Query extends GraphQLQuery<Hello46$Query, JsonSerializable> {
  Hello46Query();

  @override
  final DocumentNode document = HELLO46_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO46_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello46$Query parse(Map<String, dynamic> json) =>
      Hello46$Query.fromJson(json);
}

final HELLO47_QUERY_DOCUMENT_OPERATION_NAME = 'hello47';
final HELLO47_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello47'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello47Query extends GraphQLQuery<Hello47$Query, JsonSerializable> {
  Hello47Query();

  @override
  final DocumentNode document = HELLO47_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO47_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello47$Query parse(Map<String, dynamic> json) =>
      Hello47$Query.fromJson(json);
}

final HELLO48_QUERY_DOCUMENT_OPERATION_NAME = 'hello48';
final HELLO48_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello48'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello48Query extends GraphQLQuery<Hello48$Query, JsonSerializable> {
  Hello48Query();

  @override
  final DocumentNode document = HELLO48_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO48_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello48$Query parse(Map<String, dynamic> json) =>
      Hello48$Query.fromJson(json);
}

final HELLO49_QUERY_DOCUMENT_OPERATION_NAME = 'hello49';
final HELLO49_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello49'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello49Query extends GraphQLQuery<Hello49$Query, JsonSerializable> {
  Hello49Query();

  @override
  final DocumentNode document = HELLO49_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO49_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello49$Query parse(Map<String, dynamic> json) =>
      Hello49$Query.fromJson(json);
}

final HELLO50_QUERY_DOCUMENT_OPERATION_NAME = 'hello50';
final HELLO50_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello50'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello50Query extends GraphQLQuery<Hello50$Query, JsonSerializable> {
  Hello50Query();

  @override
  final DocumentNode document = HELLO50_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO50_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello50$Query parse(Map<String, dynamic> json) =>
      Hello50$Query.fromJson(json);
}

final HELLO51_QUERY_DOCUMENT_OPERATION_NAME = 'hello51';
final HELLO51_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello51'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello51Query extends GraphQLQuery<Hello51$Query, JsonSerializable> {
  Hello51Query();

  @override
  final DocumentNode document = HELLO51_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO51_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello51$Query parse(Map<String, dynamic> json) =>
      Hello51$Query.fromJson(json);
}

final HELLO52_QUERY_DOCUMENT_OPERATION_NAME = 'hello52';
final HELLO52_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello52'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello52Query extends GraphQLQuery<Hello52$Query, JsonSerializable> {
  Hello52Query();

  @override
  final DocumentNode document = HELLO52_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO52_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello52$Query parse(Map<String, dynamic> json) =>
      Hello52$Query.fromJson(json);
}

final HELLO53_QUERY_DOCUMENT_OPERATION_NAME = 'hello53';
final HELLO53_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello53'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello53Query extends GraphQLQuery<Hello53$Query, JsonSerializable> {
  Hello53Query();

  @override
  final DocumentNode document = HELLO53_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO53_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello53$Query parse(Map<String, dynamic> json) =>
      Hello53$Query.fromJson(json);
}

final HELLO54_QUERY_DOCUMENT_OPERATION_NAME = 'hello54';
final HELLO54_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello54'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello54Query extends GraphQLQuery<Hello54$Query, JsonSerializable> {
  Hello54Query();

  @override
  final DocumentNode document = HELLO54_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO54_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello54$Query parse(Map<String, dynamic> json) =>
      Hello54$Query.fromJson(json);
}

final HELLO55_QUERY_DOCUMENT_OPERATION_NAME = 'hello55';
final HELLO55_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello55'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello55Query extends GraphQLQuery<Hello55$Query, JsonSerializable> {
  Hello55Query();

  @override
  final DocumentNode document = HELLO55_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO55_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello55$Query parse(Map<String, dynamic> json) =>
      Hello55$Query.fromJson(json);
}

final HELLO56_QUERY_DOCUMENT_OPERATION_NAME = 'hello56';
final HELLO56_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello56'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello56Query extends GraphQLQuery<Hello56$Query, JsonSerializable> {
  Hello56Query();

  @override
  final DocumentNode document = HELLO56_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO56_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello56$Query parse(Map<String, dynamic> json) =>
      Hello56$Query.fromJson(json);
}

final HELLO57_QUERY_DOCUMENT_OPERATION_NAME = 'hello57';
final HELLO57_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello57'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello57Query extends GraphQLQuery<Hello57$Query, JsonSerializable> {
  Hello57Query();

  @override
  final DocumentNode document = HELLO57_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO57_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello57$Query parse(Map<String, dynamic> json) =>
      Hello57$Query.fromJson(json);
}

final HELLO58_QUERY_DOCUMENT_OPERATION_NAME = 'hello58';
final HELLO58_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello58'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello58Query extends GraphQLQuery<Hello58$Query, JsonSerializable> {
  Hello58Query();

  @override
  final DocumentNode document = HELLO58_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO58_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello58$Query parse(Map<String, dynamic> json) =>
      Hello58$Query.fromJson(json);
}

final HELLO59_QUERY_DOCUMENT_OPERATION_NAME = 'hello59';
final HELLO59_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello59'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello59Query extends GraphQLQuery<Hello59$Query, JsonSerializable> {
  Hello59Query();

  @override
  final DocumentNode document = HELLO59_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO59_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello59$Query parse(Map<String, dynamic> json) =>
      Hello59$Query.fromJson(json);
}

final HELLO60_QUERY_DOCUMENT_OPERATION_NAME = 'hello60';
final HELLO60_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello60'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello60Query extends GraphQLQuery<Hello60$Query, JsonSerializable> {
  Hello60Query();

  @override
  final DocumentNode document = HELLO60_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO60_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello60$Query parse(Map<String, dynamic> json) =>
      Hello60$Query.fromJson(json);
}

final HELLO61_QUERY_DOCUMENT_OPERATION_NAME = 'hello61';
final HELLO61_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello61'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello61Query extends GraphQLQuery<Hello61$Query, JsonSerializable> {
  Hello61Query();

  @override
  final DocumentNode document = HELLO61_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO61_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello61$Query parse(Map<String, dynamic> json) =>
      Hello61$Query.fromJson(json);
}

final HELLO62_QUERY_DOCUMENT_OPERATION_NAME = 'hello62';
final HELLO62_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello62'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello62Query extends GraphQLQuery<Hello62$Query, JsonSerializable> {
  Hello62Query();

  @override
  final DocumentNode document = HELLO62_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO62_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello62$Query parse(Map<String, dynamic> json) =>
      Hello62$Query.fromJson(json);
}

final HELLO63_QUERY_DOCUMENT_OPERATION_NAME = 'hello63';
final HELLO63_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello63'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello63Query extends GraphQLQuery<Hello63$Query, JsonSerializable> {
  Hello63Query();

  @override
  final DocumentNode document = HELLO63_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO63_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello63$Query parse(Map<String, dynamic> json) =>
      Hello63$Query.fromJson(json);
}

final HELLO64_QUERY_DOCUMENT_OPERATION_NAME = 'hello64';
final HELLO64_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello64'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello64Query extends GraphQLQuery<Hello64$Query, JsonSerializable> {
  Hello64Query();

  @override
  final DocumentNode document = HELLO64_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO64_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello64$Query parse(Map<String, dynamic> json) =>
      Hello64$Query.fromJson(json);
}

final HELLO65_QUERY_DOCUMENT_OPERATION_NAME = 'hello65';
final HELLO65_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello65'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello65Query extends GraphQLQuery<Hello65$Query, JsonSerializable> {
  Hello65Query();

  @override
  final DocumentNode document = HELLO65_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO65_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello65$Query parse(Map<String, dynamic> json) =>
      Hello65$Query.fromJson(json);
}

final HELLO66_QUERY_DOCUMENT_OPERATION_NAME = 'hello66';
final HELLO66_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello66'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello66Query extends GraphQLQuery<Hello66$Query, JsonSerializable> {
  Hello66Query();

  @override
  final DocumentNode document = HELLO66_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO66_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello66$Query parse(Map<String, dynamic> json) =>
      Hello66$Query.fromJson(json);
}

final HELLO67_QUERY_DOCUMENT_OPERATION_NAME = 'hello67';
final HELLO67_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello67'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello67Query extends GraphQLQuery<Hello67$Query, JsonSerializable> {
  Hello67Query();

  @override
  final DocumentNode document = HELLO67_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO67_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello67$Query parse(Map<String, dynamic> json) =>
      Hello67$Query.fromJson(json);
}

final HELLO68_QUERY_DOCUMENT_OPERATION_NAME = 'hello68';
final HELLO68_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello68'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello68Query extends GraphQLQuery<Hello68$Query, JsonSerializable> {
  Hello68Query();

  @override
  final DocumentNode document = HELLO68_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO68_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello68$Query parse(Map<String, dynamic> json) =>
      Hello68$Query.fromJson(json);
}

final HELLO69_QUERY_DOCUMENT_OPERATION_NAME = 'hello69';
final HELLO69_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello69'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello69Query extends GraphQLQuery<Hello69$Query, JsonSerializable> {
  Hello69Query();

  @override
  final DocumentNode document = HELLO69_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO69_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello69$Query parse(Map<String, dynamic> json) =>
      Hello69$Query.fromJson(json);
}

final HELLO70_QUERY_DOCUMENT_OPERATION_NAME = 'hello70';
final HELLO70_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello70'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello70Query extends GraphQLQuery<Hello70$Query, JsonSerializable> {
  Hello70Query();

  @override
  final DocumentNode document = HELLO70_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO70_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello70$Query parse(Map<String, dynamic> json) =>
      Hello70$Query.fromJson(json);
}

final HELLO71_QUERY_DOCUMENT_OPERATION_NAME = 'hello71';
final HELLO71_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello71'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello71Query extends GraphQLQuery<Hello71$Query, JsonSerializable> {
  Hello71Query();

  @override
  final DocumentNode document = HELLO71_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO71_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello71$Query parse(Map<String, dynamic> json) =>
      Hello71$Query.fromJson(json);
}

final HELLO72_QUERY_DOCUMENT_OPERATION_NAME = 'hello72';
final HELLO72_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello72'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello72Query extends GraphQLQuery<Hello72$Query, JsonSerializable> {
  Hello72Query();

  @override
  final DocumentNode document = HELLO72_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO72_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello72$Query parse(Map<String, dynamic> json) =>
      Hello72$Query.fromJson(json);
}

final HELLO73_QUERY_DOCUMENT_OPERATION_NAME = 'hello73';
final HELLO73_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello73'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello73Query extends GraphQLQuery<Hello73$Query, JsonSerializable> {
  Hello73Query();

  @override
  final DocumentNode document = HELLO73_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO73_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello73$Query parse(Map<String, dynamic> json) =>
      Hello73$Query.fromJson(json);
}

final HELLO74_QUERY_DOCUMENT_OPERATION_NAME = 'hello74';
final HELLO74_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello74'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello74Query extends GraphQLQuery<Hello74$Query, JsonSerializable> {
  Hello74Query();

  @override
  final DocumentNode document = HELLO74_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO74_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello74$Query parse(Map<String, dynamic> json) =>
      Hello74$Query.fromJson(json);
}

final HELLO75_QUERY_DOCUMENT_OPERATION_NAME = 'hello75';
final HELLO75_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello75'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello75Query extends GraphQLQuery<Hello75$Query, JsonSerializable> {
  Hello75Query();

  @override
  final DocumentNode document = HELLO75_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO75_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello75$Query parse(Map<String, dynamic> json) =>
      Hello75$Query.fromJson(json);
}

final HELLO76_QUERY_DOCUMENT_OPERATION_NAME = 'hello76';
final HELLO76_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello76'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello76Query extends GraphQLQuery<Hello76$Query, JsonSerializable> {
  Hello76Query();

  @override
  final DocumentNode document = HELLO76_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO76_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello76$Query parse(Map<String, dynamic> json) =>
      Hello76$Query.fromJson(json);
}

final HELLO77_QUERY_DOCUMENT_OPERATION_NAME = 'hello77';
final HELLO77_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello77'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello77Query extends GraphQLQuery<Hello77$Query, JsonSerializable> {
  Hello77Query();

  @override
  final DocumentNode document = HELLO77_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO77_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello77$Query parse(Map<String, dynamic> json) =>
      Hello77$Query.fromJson(json);
}

final HELLO78_QUERY_DOCUMENT_OPERATION_NAME = 'hello78';
final HELLO78_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello78'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello78Query extends GraphQLQuery<Hello78$Query, JsonSerializable> {
  Hello78Query();

  @override
  final DocumentNode document = HELLO78_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO78_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello78$Query parse(Map<String, dynamic> json) =>
      Hello78$Query.fromJson(json);
}

final HELLO79_QUERY_DOCUMENT_OPERATION_NAME = 'hello79';
final HELLO79_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello79'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello79Query extends GraphQLQuery<Hello79$Query, JsonSerializable> {
  Hello79Query();

  @override
  final DocumentNode document = HELLO79_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO79_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello79$Query parse(Map<String, dynamic> json) =>
      Hello79$Query.fromJson(json);
}

final HELLO80_QUERY_DOCUMENT_OPERATION_NAME = 'hello80';
final HELLO80_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello80'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello80Query extends GraphQLQuery<Hello80$Query, JsonSerializable> {
  Hello80Query();

  @override
  final DocumentNode document = HELLO80_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO80_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello80$Query parse(Map<String, dynamic> json) =>
      Hello80$Query.fromJson(json);
}

final HELLO81_QUERY_DOCUMENT_OPERATION_NAME = 'hello81';
final HELLO81_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello81'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello81Query extends GraphQLQuery<Hello81$Query, JsonSerializable> {
  Hello81Query();

  @override
  final DocumentNode document = HELLO81_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO81_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello81$Query parse(Map<String, dynamic> json) =>
      Hello81$Query.fromJson(json);
}

final HELLO82_QUERY_DOCUMENT_OPERATION_NAME = 'hello82';
final HELLO82_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello82'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello82Query extends GraphQLQuery<Hello82$Query, JsonSerializable> {
  Hello82Query();

  @override
  final DocumentNode document = HELLO82_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO82_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello82$Query parse(Map<String, dynamic> json) =>
      Hello82$Query.fromJson(json);
}

final HELLO83_QUERY_DOCUMENT_OPERATION_NAME = 'hello83';
final HELLO83_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello83'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello83Query extends GraphQLQuery<Hello83$Query, JsonSerializable> {
  Hello83Query();

  @override
  final DocumentNode document = HELLO83_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO83_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello83$Query parse(Map<String, dynamic> json) =>
      Hello83$Query.fromJson(json);
}

final HELLO84_QUERY_DOCUMENT_OPERATION_NAME = 'hello84';
final HELLO84_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello84'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello84Query extends GraphQLQuery<Hello84$Query, JsonSerializable> {
  Hello84Query();

  @override
  final DocumentNode document = HELLO84_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO84_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello84$Query parse(Map<String, dynamic> json) =>
      Hello84$Query.fromJson(json);
}

final HELLO85_QUERY_DOCUMENT_OPERATION_NAME = 'hello85';
final HELLO85_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello85'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello85Query extends GraphQLQuery<Hello85$Query, JsonSerializable> {
  Hello85Query();

  @override
  final DocumentNode document = HELLO85_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO85_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello85$Query parse(Map<String, dynamic> json) =>
      Hello85$Query.fromJson(json);
}

final HELLO86_QUERY_DOCUMENT_OPERATION_NAME = 'hello86';
final HELLO86_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello86'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello86Query extends GraphQLQuery<Hello86$Query, JsonSerializable> {
  Hello86Query();

  @override
  final DocumentNode document = HELLO86_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO86_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello86$Query parse(Map<String, dynamic> json) =>
      Hello86$Query.fromJson(json);
}

final HELLO87_QUERY_DOCUMENT_OPERATION_NAME = 'hello87';
final HELLO87_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello87'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello87Query extends GraphQLQuery<Hello87$Query, JsonSerializable> {
  Hello87Query();

  @override
  final DocumentNode document = HELLO87_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO87_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello87$Query parse(Map<String, dynamic> json) =>
      Hello87$Query.fromJson(json);
}

final HELLO88_QUERY_DOCUMENT_OPERATION_NAME = 'hello88';
final HELLO88_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello88'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello88Query extends GraphQLQuery<Hello88$Query, JsonSerializable> {
  Hello88Query();

  @override
  final DocumentNode document = HELLO88_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO88_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello88$Query parse(Map<String, dynamic> json) =>
      Hello88$Query.fromJson(json);
}

final HELLO89_QUERY_DOCUMENT_OPERATION_NAME = 'hello89';
final HELLO89_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello89'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello89Query extends GraphQLQuery<Hello89$Query, JsonSerializable> {
  Hello89Query();

  @override
  final DocumentNode document = HELLO89_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO89_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello89$Query parse(Map<String, dynamic> json) =>
      Hello89$Query.fromJson(json);
}

final HELLO90_QUERY_DOCUMENT_OPERATION_NAME = 'hello90';
final HELLO90_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello90'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello90Query extends GraphQLQuery<Hello90$Query, JsonSerializable> {
  Hello90Query();

  @override
  final DocumentNode document = HELLO90_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO90_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello90$Query parse(Map<String, dynamic> json) =>
      Hello90$Query.fromJson(json);
}

final HELLO91_QUERY_DOCUMENT_OPERATION_NAME = 'hello91';
final HELLO91_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello91'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello91Query extends GraphQLQuery<Hello91$Query, JsonSerializable> {
  Hello91Query();

  @override
  final DocumentNode document = HELLO91_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO91_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello91$Query parse(Map<String, dynamic> json) =>
      Hello91$Query.fromJson(json);
}

final HELLO92_QUERY_DOCUMENT_OPERATION_NAME = 'hello92';
final HELLO92_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello92'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello92Query extends GraphQLQuery<Hello92$Query, JsonSerializable> {
  Hello92Query();

  @override
  final DocumentNode document = HELLO92_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO92_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello92$Query parse(Map<String, dynamic> json) =>
      Hello92$Query.fromJson(json);
}

final HELLO93_QUERY_DOCUMENT_OPERATION_NAME = 'hello93';
final HELLO93_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello93'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello93Query extends GraphQLQuery<Hello93$Query, JsonSerializable> {
  Hello93Query();

  @override
  final DocumentNode document = HELLO93_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO93_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello93$Query parse(Map<String, dynamic> json) =>
      Hello93$Query.fromJson(json);
}

final HELLO94_QUERY_DOCUMENT_OPERATION_NAME = 'hello94';
final HELLO94_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello94'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello94Query extends GraphQLQuery<Hello94$Query, JsonSerializable> {
  Hello94Query();

  @override
  final DocumentNode document = HELLO94_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO94_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello94$Query parse(Map<String, dynamic> json) =>
      Hello94$Query.fromJson(json);
}

final HELLO95_QUERY_DOCUMENT_OPERATION_NAME = 'hello95';
final HELLO95_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello95'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello95Query extends GraphQLQuery<Hello95$Query, JsonSerializable> {
  Hello95Query();

  @override
  final DocumentNode document = HELLO95_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO95_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello95$Query parse(Map<String, dynamic> json) =>
      Hello95$Query.fromJson(json);
}

final HELLO96_QUERY_DOCUMENT_OPERATION_NAME = 'hello96';
final HELLO96_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello96'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello96Query extends GraphQLQuery<Hello96$Query, JsonSerializable> {
  Hello96Query();

  @override
  final DocumentNode document = HELLO96_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO96_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello96$Query parse(Map<String, dynamic> json) =>
      Hello96$Query.fromJson(json);
}

final HELLO97_QUERY_DOCUMENT_OPERATION_NAME = 'hello97';
final HELLO97_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello97'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello97Query extends GraphQLQuery<Hello97$Query, JsonSerializable> {
  Hello97Query();

  @override
  final DocumentNode document = HELLO97_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO97_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello97$Query parse(Map<String, dynamic> json) =>
      Hello97$Query.fromJson(json);
}

final HELLO98_QUERY_DOCUMENT_OPERATION_NAME = 'hello98';
final HELLO98_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello98'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello98Query extends GraphQLQuery<Hello98$Query, JsonSerializable> {
  Hello98Query();

  @override
  final DocumentNode document = HELLO98_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO98_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello98$Query parse(Map<String, dynamic> json) =>
      Hello98$Query.fromJson(json);
}

final HELLO99_QUERY_DOCUMENT_OPERATION_NAME = 'hello99';
final HELLO99_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello99'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello99Query extends GraphQLQuery<Hello99$Query, JsonSerializable> {
  Hello99Query();

  @override
  final DocumentNode document = HELLO99_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO99_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello99$Query parse(Map<String, dynamic> json) =>
      Hello99$Query.fromJson(json);
}

final HELLO100_QUERY_DOCUMENT_OPERATION_NAME = 'hello100';
final HELLO100_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello100'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello100Query extends GraphQLQuery<Hello100$Query, JsonSerializable> {
  Hello100Query();

  @override
  final DocumentNode document = HELLO100_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO100_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello100$Query parse(Map<String, dynamic> json) =>
      Hello100$Query.fromJson(json);
}

final HELLO101_QUERY_DOCUMENT_OPERATION_NAME = 'hello101';
final HELLO101_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello101'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello101Query extends GraphQLQuery<Hello101$Query, JsonSerializable> {
  Hello101Query();

  @override
  final DocumentNode document = HELLO101_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO101_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello101$Query parse(Map<String, dynamic> json) =>
      Hello101$Query.fromJson(json);
}

final HELLO102_QUERY_DOCUMENT_OPERATION_NAME = 'hello102';
final HELLO102_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello102'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello102Query extends GraphQLQuery<Hello102$Query, JsonSerializable> {
  Hello102Query();

  @override
  final DocumentNode document = HELLO102_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO102_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello102$Query parse(Map<String, dynamic> json) =>
      Hello102$Query.fromJson(json);
}

final HELLO103_QUERY_DOCUMENT_OPERATION_NAME = 'hello103';
final HELLO103_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello103'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello103Query extends GraphQLQuery<Hello103$Query, JsonSerializable> {
  Hello103Query();

  @override
  final DocumentNode document = HELLO103_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO103_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello103$Query parse(Map<String, dynamic> json) =>
      Hello103$Query.fromJson(json);
}

final HELLO104_QUERY_DOCUMENT_OPERATION_NAME = 'hello104';
final HELLO104_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello104'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello104Query extends GraphQLQuery<Hello104$Query, JsonSerializable> {
  Hello104Query();

  @override
  final DocumentNode document = HELLO104_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO104_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello104$Query parse(Map<String, dynamic> json) =>
      Hello104$Query.fromJson(json);
}

final HELLO105_QUERY_DOCUMENT_OPERATION_NAME = 'hello105';
final HELLO105_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello105'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello105Query extends GraphQLQuery<Hello105$Query, JsonSerializable> {
  Hello105Query();

  @override
  final DocumentNode document = HELLO105_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO105_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello105$Query parse(Map<String, dynamic> json) =>
      Hello105$Query.fromJson(json);
}

final HELLO106_QUERY_DOCUMENT_OPERATION_NAME = 'hello106';
final HELLO106_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello106'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello106Query extends GraphQLQuery<Hello106$Query, JsonSerializable> {
  Hello106Query();

  @override
  final DocumentNode document = HELLO106_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO106_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello106$Query parse(Map<String, dynamic> json) =>
      Hello106$Query.fromJson(json);
}

final HELLO107_QUERY_DOCUMENT_OPERATION_NAME = 'hello107';
final HELLO107_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello107'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello107Query extends GraphQLQuery<Hello107$Query, JsonSerializable> {
  Hello107Query();

  @override
  final DocumentNode document = HELLO107_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO107_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello107$Query parse(Map<String, dynamic> json) =>
      Hello107$Query.fromJson(json);
}

final HELLO108_QUERY_DOCUMENT_OPERATION_NAME = 'hello108';
final HELLO108_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello108'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello108Query extends GraphQLQuery<Hello108$Query, JsonSerializable> {
  Hello108Query();

  @override
  final DocumentNode document = HELLO108_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO108_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello108$Query parse(Map<String, dynamic> json) =>
      Hello108$Query.fromJson(json);
}

final HELLO109_QUERY_DOCUMENT_OPERATION_NAME = 'hello109';
final HELLO109_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello109'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello109Query extends GraphQLQuery<Hello109$Query, JsonSerializable> {
  Hello109Query();

  @override
  final DocumentNode document = HELLO109_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO109_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello109$Query parse(Map<String, dynamic> json) =>
      Hello109$Query.fromJson(json);
}

final HELLO110_QUERY_DOCUMENT_OPERATION_NAME = 'hello110';
final HELLO110_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello110'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello110Query extends GraphQLQuery<Hello110$Query, JsonSerializable> {
  Hello110Query();

  @override
  final DocumentNode document = HELLO110_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO110_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello110$Query parse(Map<String, dynamic> json) =>
      Hello110$Query.fromJson(json);
}

final HELLO111_QUERY_DOCUMENT_OPERATION_NAME = 'hello111';
final HELLO111_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello111'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello111Query extends GraphQLQuery<Hello111$Query, JsonSerializable> {
  Hello111Query();

  @override
  final DocumentNode document = HELLO111_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO111_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello111$Query parse(Map<String, dynamic> json) =>
      Hello111$Query.fromJson(json);
}

final HELLO112_QUERY_DOCUMENT_OPERATION_NAME = 'hello112';
final HELLO112_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello112'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello112Query extends GraphQLQuery<Hello112$Query, JsonSerializable> {
  Hello112Query();

  @override
  final DocumentNode document = HELLO112_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO112_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello112$Query parse(Map<String, dynamic> json) =>
      Hello112$Query.fromJson(json);
}

final HELLO113_QUERY_DOCUMENT_OPERATION_NAME = 'hello113';
final HELLO113_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello113'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello113Query extends GraphQLQuery<Hello113$Query, JsonSerializable> {
  Hello113Query();

  @override
  final DocumentNode document = HELLO113_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO113_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello113$Query parse(Map<String, dynamic> json) =>
      Hello113$Query.fromJson(json);
}

final HELLO114_QUERY_DOCUMENT_OPERATION_NAME = 'hello114';
final HELLO114_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello114'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello114Query extends GraphQLQuery<Hello114$Query, JsonSerializable> {
  Hello114Query();

  @override
  final DocumentNode document = HELLO114_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO114_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello114$Query parse(Map<String, dynamic> json) =>
      Hello114$Query.fromJson(json);
}

final HELLO115_QUERY_DOCUMENT_OPERATION_NAME = 'hello115';
final HELLO115_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello115'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello115Query extends GraphQLQuery<Hello115$Query, JsonSerializable> {
  Hello115Query();

  @override
  final DocumentNode document = HELLO115_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO115_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello115$Query parse(Map<String, dynamic> json) =>
      Hello115$Query.fromJson(json);
}

final HELLO116_QUERY_DOCUMENT_OPERATION_NAME = 'hello116';
final HELLO116_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello116'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello116Query extends GraphQLQuery<Hello116$Query, JsonSerializable> {
  Hello116Query();

  @override
  final DocumentNode document = HELLO116_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO116_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello116$Query parse(Map<String, dynamic> json) =>
      Hello116$Query.fromJson(json);
}

final HELLO117_QUERY_DOCUMENT_OPERATION_NAME = 'hello117';
final HELLO117_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello117'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello117Query extends GraphQLQuery<Hello117$Query, JsonSerializable> {
  Hello117Query();

  @override
  final DocumentNode document = HELLO117_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO117_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello117$Query parse(Map<String, dynamic> json) =>
      Hello117$Query.fromJson(json);
}

final HELLO118_QUERY_DOCUMENT_OPERATION_NAME = 'hello118';
final HELLO118_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello118'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello118Query extends GraphQLQuery<Hello118$Query, JsonSerializable> {
  Hello118Query();

  @override
  final DocumentNode document = HELLO118_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO118_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello118$Query parse(Map<String, dynamic> json) =>
      Hello118$Query.fromJson(json);
}

final HELLO119_QUERY_DOCUMENT_OPERATION_NAME = 'hello119';
final HELLO119_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello119'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello119Query extends GraphQLQuery<Hello119$Query, JsonSerializable> {
  Hello119Query();

  @override
  final DocumentNode document = HELLO119_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO119_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello119$Query parse(Map<String, dynamic> json) =>
      Hello119$Query.fromJson(json);
}

final HELLO120_QUERY_DOCUMENT_OPERATION_NAME = 'hello120';
final HELLO120_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello120'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello120Query extends GraphQLQuery<Hello120$Query, JsonSerializable> {
  Hello120Query();

  @override
  final DocumentNode document = HELLO120_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO120_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello120$Query parse(Map<String, dynamic> json) =>
      Hello120$Query.fromJson(json);
}

final HELLO121_QUERY_DOCUMENT_OPERATION_NAME = 'hello121';
final HELLO121_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello121'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello121Query extends GraphQLQuery<Hello121$Query, JsonSerializable> {
  Hello121Query();

  @override
  final DocumentNode document = HELLO121_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO121_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello121$Query parse(Map<String, dynamic> json) =>
      Hello121$Query.fromJson(json);
}

final HELLO122_QUERY_DOCUMENT_OPERATION_NAME = 'hello122';
final HELLO122_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello122'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello122Query extends GraphQLQuery<Hello122$Query, JsonSerializable> {
  Hello122Query();

  @override
  final DocumentNode document = HELLO122_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO122_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello122$Query parse(Map<String, dynamic> json) =>
      Hello122$Query.fromJson(json);
}

final HELLO123_QUERY_DOCUMENT_OPERATION_NAME = 'hello123';
final HELLO123_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello123'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello123Query extends GraphQLQuery<Hello123$Query, JsonSerializable> {
  Hello123Query();

  @override
  final DocumentNode document = HELLO123_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO123_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello123$Query parse(Map<String, dynamic> json) =>
      Hello123$Query.fromJson(json);
}

final HELLO124_QUERY_DOCUMENT_OPERATION_NAME = 'hello124';
final HELLO124_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello124'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello124Query extends GraphQLQuery<Hello124$Query, JsonSerializable> {
  Hello124Query();

  @override
  final DocumentNode document = HELLO124_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO124_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello124$Query parse(Map<String, dynamic> json) =>
      Hello124$Query.fromJson(json);
}

final HELLO125_QUERY_DOCUMENT_OPERATION_NAME = 'hello125';
final HELLO125_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello125'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello125Query extends GraphQLQuery<Hello125$Query, JsonSerializable> {
  Hello125Query();

  @override
  final DocumentNode document = HELLO125_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO125_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello125$Query parse(Map<String, dynamic> json) =>
      Hello125$Query.fromJson(json);
}

final HELLO126_QUERY_DOCUMENT_OPERATION_NAME = 'hello126';
final HELLO126_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello126'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello126Query extends GraphQLQuery<Hello126$Query, JsonSerializable> {
  Hello126Query();

  @override
  final DocumentNode document = HELLO126_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO126_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello126$Query parse(Map<String, dynamic> json) =>
      Hello126$Query.fromJson(json);
}

final HELLO127_QUERY_DOCUMENT_OPERATION_NAME = 'hello127';
final HELLO127_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello127'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello127Query extends GraphQLQuery<Hello127$Query, JsonSerializable> {
  Hello127Query();

  @override
  final DocumentNode document = HELLO127_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO127_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello127$Query parse(Map<String, dynamic> json) =>
      Hello127$Query.fromJson(json);
}

final HELLO128_QUERY_DOCUMENT_OPERATION_NAME = 'hello128';
final HELLO128_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello128'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello128Query extends GraphQLQuery<Hello128$Query, JsonSerializable> {
  Hello128Query();

  @override
  final DocumentNode document = HELLO128_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO128_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello128$Query parse(Map<String, dynamic> json) =>
      Hello128$Query.fromJson(json);
}

final HELLO129_QUERY_DOCUMENT_OPERATION_NAME = 'hello129';
final HELLO129_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello129'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello129Query extends GraphQLQuery<Hello129$Query, JsonSerializable> {
  Hello129Query();

  @override
  final DocumentNode document = HELLO129_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO129_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello129$Query parse(Map<String, dynamic> json) =>
      Hello129$Query.fromJson(json);
}

final HELLO130_QUERY_DOCUMENT_OPERATION_NAME = 'hello130';
final HELLO130_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello130'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello130Query extends GraphQLQuery<Hello130$Query, JsonSerializable> {
  Hello130Query();

  @override
  final DocumentNode document = HELLO130_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO130_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello130$Query parse(Map<String, dynamic> json) =>
      Hello130$Query.fromJson(json);
}

final HELLO131_QUERY_DOCUMENT_OPERATION_NAME = 'hello131';
final HELLO131_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello131'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello131Query extends GraphQLQuery<Hello131$Query, JsonSerializable> {
  Hello131Query();

  @override
  final DocumentNode document = HELLO131_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO131_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello131$Query parse(Map<String, dynamic> json) =>
      Hello131$Query.fromJson(json);
}

final HELLO132_QUERY_DOCUMENT_OPERATION_NAME = 'hello132';
final HELLO132_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello132'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello132Query extends GraphQLQuery<Hello132$Query, JsonSerializable> {
  Hello132Query();

  @override
  final DocumentNode document = HELLO132_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO132_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello132$Query parse(Map<String, dynamic> json) =>
      Hello132$Query.fromJson(json);
}

final HELLO133_QUERY_DOCUMENT_OPERATION_NAME = 'hello133';
final HELLO133_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello133'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello133Query extends GraphQLQuery<Hello133$Query, JsonSerializable> {
  Hello133Query();

  @override
  final DocumentNode document = HELLO133_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO133_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello133$Query parse(Map<String, dynamic> json) =>
      Hello133$Query.fromJson(json);
}

final HELLO134_QUERY_DOCUMENT_OPERATION_NAME = 'hello134';
final HELLO134_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello134'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello134Query extends GraphQLQuery<Hello134$Query, JsonSerializable> {
  Hello134Query();

  @override
  final DocumentNode document = HELLO134_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO134_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello134$Query parse(Map<String, dynamic> json) =>
      Hello134$Query.fromJson(json);
}

final HELLO135_QUERY_DOCUMENT_OPERATION_NAME = 'hello135';
final HELLO135_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello135'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello135Query extends GraphQLQuery<Hello135$Query, JsonSerializable> {
  Hello135Query();

  @override
  final DocumentNode document = HELLO135_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO135_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello135$Query parse(Map<String, dynamic> json) =>
      Hello135$Query.fromJson(json);
}

final HELLO136_QUERY_DOCUMENT_OPERATION_NAME = 'hello136';
final HELLO136_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello136'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello136Query extends GraphQLQuery<Hello136$Query, JsonSerializable> {
  Hello136Query();

  @override
  final DocumentNode document = HELLO136_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO136_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello136$Query parse(Map<String, dynamic> json) =>
      Hello136$Query.fromJson(json);
}

final HELLO137_QUERY_DOCUMENT_OPERATION_NAME = 'hello137';
final HELLO137_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello137'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello137Query extends GraphQLQuery<Hello137$Query, JsonSerializable> {
  Hello137Query();

  @override
  final DocumentNode document = HELLO137_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO137_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello137$Query parse(Map<String, dynamic> json) =>
      Hello137$Query.fromJson(json);
}

final HELLO138_QUERY_DOCUMENT_OPERATION_NAME = 'hello138';
final HELLO138_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello138'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello138Query extends GraphQLQuery<Hello138$Query, JsonSerializable> {
  Hello138Query();

  @override
  final DocumentNode document = HELLO138_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO138_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello138$Query parse(Map<String, dynamic> json) =>
      Hello138$Query.fromJson(json);
}

final HELLO139_QUERY_DOCUMENT_OPERATION_NAME = 'hello139';
final HELLO139_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello139'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello139Query extends GraphQLQuery<Hello139$Query, JsonSerializable> {
  Hello139Query();

  @override
  final DocumentNode document = HELLO139_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO139_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello139$Query parse(Map<String, dynamic> json) =>
      Hello139$Query.fromJson(json);
}

final HELLO140_QUERY_DOCUMENT_OPERATION_NAME = 'hello140';
final HELLO140_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello140'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello140Query extends GraphQLQuery<Hello140$Query, JsonSerializable> {
  Hello140Query();

  @override
  final DocumentNode document = HELLO140_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO140_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello140$Query parse(Map<String, dynamic> json) =>
      Hello140$Query.fromJson(json);
}

final HELLO141_QUERY_DOCUMENT_OPERATION_NAME = 'hello141';
final HELLO141_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello141'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello141Query extends GraphQLQuery<Hello141$Query, JsonSerializable> {
  Hello141Query();

  @override
  final DocumentNode document = HELLO141_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO141_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello141$Query parse(Map<String, dynamic> json) =>
      Hello141$Query.fromJson(json);
}

final HELLO142_QUERY_DOCUMENT_OPERATION_NAME = 'hello142';
final HELLO142_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello142'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello142Query extends GraphQLQuery<Hello142$Query, JsonSerializable> {
  Hello142Query();

  @override
  final DocumentNode document = HELLO142_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO142_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello142$Query parse(Map<String, dynamic> json) =>
      Hello142$Query.fromJson(json);
}

final HELLO143_QUERY_DOCUMENT_OPERATION_NAME = 'hello143';
final HELLO143_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello143'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello143Query extends GraphQLQuery<Hello143$Query, JsonSerializable> {
  Hello143Query();

  @override
  final DocumentNode document = HELLO143_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO143_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello143$Query parse(Map<String, dynamic> json) =>
      Hello143$Query.fromJson(json);
}

final HELLO144_QUERY_DOCUMENT_OPERATION_NAME = 'hello144';
final HELLO144_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello144'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello144Query extends GraphQLQuery<Hello144$Query, JsonSerializable> {
  Hello144Query();

  @override
  final DocumentNode document = HELLO144_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO144_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello144$Query parse(Map<String, dynamic> json) =>
      Hello144$Query.fromJson(json);
}

final HELLO145_QUERY_DOCUMENT_OPERATION_NAME = 'hello145';
final HELLO145_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello145'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello145Query extends GraphQLQuery<Hello145$Query, JsonSerializable> {
  Hello145Query();

  @override
  final DocumentNode document = HELLO145_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO145_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello145$Query parse(Map<String, dynamic> json) =>
      Hello145$Query.fromJson(json);
}

final HELLO146_QUERY_DOCUMENT_OPERATION_NAME = 'hello146';
final HELLO146_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello146'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello146Query extends GraphQLQuery<Hello146$Query, JsonSerializable> {
  Hello146Query();

  @override
  final DocumentNode document = HELLO146_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO146_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello146$Query parse(Map<String, dynamic> json) =>
      Hello146$Query.fromJson(json);
}

final HELLO147_QUERY_DOCUMENT_OPERATION_NAME = 'hello147';
final HELLO147_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello147'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello147Query extends GraphQLQuery<Hello147$Query, JsonSerializable> {
  Hello147Query();

  @override
  final DocumentNode document = HELLO147_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO147_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello147$Query parse(Map<String, dynamic> json) =>
      Hello147$Query.fromJson(json);
}

final HELLO148_QUERY_DOCUMENT_OPERATION_NAME = 'hello148';
final HELLO148_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello148'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello148Query extends GraphQLQuery<Hello148$Query, JsonSerializable> {
  Hello148Query();

  @override
  final DocumentNode document = HELLO148_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO148_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello148$Query parse(Map<String, dynamic> json) =>
      Hello148$Query.fromJson(json);
}

final HELLO149_QUERY_DOCUMENT_OPERATION_NAME = 'hello149';
final HELLO149_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello149'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello149Query extends GraphQLQuery<Hello149$Query, JsonSerializable> {
  Hello149Query();

  @override
  final DocumentNode document = HELLO149_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO149_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello149$Query parse(Map<String, dynamic> json) =>
      Hello149$Query.fromJson(json);
}

final HELLO150_QUERY_DOCUMENT_OPERATION_NAME = 'hello150';
final HELLO150_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello150'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello150Query extends GraphQLQuery<Hello150$Query, JsonSerializable> {
  Hello150Query();

  @override
  final DocumentNode document = HELLO150_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO150_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello150$Query parse(Map<String, dynamic> json) =>
      Hello150$Query.fromJson(json);
}

final HELLO151_QUERY_DOCUMENT_OPERATION_NAME = 'hello151';
final HELLO151_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello151'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello151Query extends GraphQLQuery<Hello151$Query, JsonSerializable> {
  Hello151Query();

  @override
  final DocumentNode document = HELLO151_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO151_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello151$Query parse(Map<String, dynamic> json) =>
      Hello151$Query.fromJson(json);
}

final HELLO152_QUERY_DOCUMENT_OPERATION_NAME = 'hello152';
final HELLO152_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello152'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello152Query extends GraphQLQuery<Hello152$Query, JsonSerializable> {
  Hello152Query();

  @override
  final DocumentNode document = HELLO152_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO152_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello152$Query parse(Map<String, dynamic> json) =>
      Hello152$Query.fromJson(json);
}

final HELLO153_QUERY_DOCUMENT_OPERATION_NAME = 'hello153';
final HELLO153_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello153'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello153Query extends GraphQLQuery<Hello153$Query, JsonSerializable> {
  Hello153Query();

  @override
  final DocumentNode document = HELLO153_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO153_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello153$Query parse(Map<String, dynamic> json) =>
      Hello153$Query.fromJson(json);
}

final HELLO154_QUERY_DOCUMENT_OPERATION_NAME = 'hello154';
final HELLO154_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello154'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello154Query extends GraphQLQuery<Hello154$Query, JsonSerializable> {
  Hello154Query();

  @override
  final DocumentNode document = HELLO154_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO154_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello154$Query parse(Map<String, dynamic> json) =>
      Hello154$Query.fromJson(json);
}

final HELLO155_QUERY_DOCUMENT_OPERATION_NAME = 'hello155';
final HELLO155_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello155'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello155Query extends GraphQLQuery<Hello155$Query, JsonSerializable> {
  Hello155Query();

  @override
  final DocumentNode document = HELLO155_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO155_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello155$Query parse(Map<String, dynamic> json) =>
      Hello155$Query.fromJson(json);
}

final HELLO156_QUERY_DOCUMENT_OPERATION_NAME = 'hello156';
final HELLO156_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello156'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello156Query extends GraphQLQuery<Hello156$Query, JsonSerializable> {
  Hello156Query();

  @override
  final DocumentNode document = HELLO156_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO156_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello156$Query parse(Map<String, dynamic> json) =>
      Hello156$Query.fromJson(json);
}

final HELLO157_QUERY_DOCUMENT_OPERATION_NAME = 'hello157';
final HELLO157_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello157'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello157Query extends GraphQLQuery<Hello157$Query, JsonSerializable> {
  Hello157Query();

  @override
  final DocumentNode document = HELLO157_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO157_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello157$Query parse(Map<String, dynamic> json) =>
      Hello157$Query.fromJson(json);
}

final HELLO158_QUERY_DOCUMENT_OPERATION_NAME = 'hello158';
final HELLO158_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello158'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello158Query extends GraphQLQuery<Hello158$Query, JsonSerializable> {
  Hello158Query();

  @override
  final DocumentNode document = HELLO158_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO158_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello158$Query parse(Map<String, dynamic> json) =>
      Hello158$Query.fromJson(json);
}

final HELLO159_QUERY_DOCUMENT_OPERATION_NAME = 'hello159';
final HELLO159_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello159'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello159Query extends GraphQLQuery<Hello159$Query, JsonSerializable> {
  Hello159Query();

  @override
  final DocumentNode document = HELLO159_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO159_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello159$Query parse(Map<String, dynamic> json) =>
      Hello159$Query.fromJson(json);
}

final HELLO160_QUERY_DOCUMENT_OPERATION_NAME = 'hello160';
final HELLO160_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello160'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello160Query extends GraphQLQuery<Hello160$Query, JsonSerializable> {
  Hello160Query();

  @override
  final DocumentNode document = HELLO160_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO160_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello160$Query parse(Map<String, dynamic> json) =>
      Hello160$Query.fromJson(json);
}

final HELLO161_QUERY_DOCUMENT_OPERATION_NAME = 'hello161';
final HELLO161_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello161'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello161Query extends GraphQLQuery<Hello161$Query, JsonSerializable> {
  Hello161Query();

  @override
  final DocumentNode document = HELLO161_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO161_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello161$Query parse(Map<String, dynamic> json) =>
      Hello161$Query.fromJson(json);
}

final HELLO162_QUERY_DOCUMENT_OPERATION_NAME = 'hello162';
final HELLO162_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello162'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello162Query extends GraphQLQuery<Hello162$Query, JsonSerializable> {
  Hello162Query();

  @override
  final DocumentNode document = HELLO162_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO162_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello162$Query parse(Map<String, dynamic> json) =>
      Hello162$Query.fromJson(json);
}

final HELLO163_QUERY_DOCUMENT_OPERATION_NAME = 'hello163';
final HELLO163_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello163'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello163Query extends GraphQLQuery<Hello163$Query, JsonSerializable> {
  Hello163Query();

  @override
  final DocumentNode document = HELLO163_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO163_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello163$Query parse(Map<String, dynamic> json) =>
      Hello163$Query.fromJson(json);
}

final HELLO164_QUERY_DOCUMENT_OPERATION_NAME = 'hello164';
final HELLO164_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello164'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello164Query extends GraphQLQuery<Hello164$Query, JsonSerializable> {
  Hello164Query();

  @override
  final DocumentNode document = HELLO164_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO164_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello164$Query parse(Map<String, dynamic> json) =>
      Hello164$Query.fromJson(json);
}

final HELLO165_QUERY_DOCUMENT_OPERATION_NAME = 'hello165';
final HELLO165_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello165'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello165Query extends GraphQLQuery<Hello165$Query, JsonSerializable> {
  Hello165Query();

  @override
  final DocumentNode document = HELLO165_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO165_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello165$Query parse(Map<String, dynamic> json) =>
      Hello165$Query.fromJson(json);
}

final HELLO166_QUERY_DOCUMENT_OPERATION_NAME = 'hello166';
final HELLO166_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello166'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello166Query extends GraphQLQuery<Hello166$Query, JsonSerializable> {
  Hello166Query();

  @override
  final DocumentNode document = HELLO166_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO166_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello166$Query parse(Map<String, dynamic> json) =>
      Hello166$Query.fromJson(json);
}

final HELLO167_QUERY_DOCUMENT_OPERATION_NAME = 'hello167';
final HELLO167_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello167'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello167Query extends GraphQLQuery<Hello167$Query, JsonSerializable> {
  Hello167Query();

  @override
  final DocumentNode document = HELLO167_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO167_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello167$Query parse(Map<String, dynamic> json) =>
      Hello167$Query.fromJson(json);
}

final HELLO168_QUERY_DOCUMENT_OPERATION_NAME = 'hello168';
final HELLO168_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello168'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello168Query extends GraphQLQuery<Hello168$Query, JsonSerializable> {
  Hello168Query();

  @override
  final DocumentNode document = HELLO168_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO168_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello168$Query parse(Map<String, dynamic> json) =>
      Hello168$Query.fromJson(json);
}

final HELLO169_QUERY_DOCUMENT_OPERATION_NAME = 'hello169';
final HELLO169_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello169'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello169Query extends GraphQLQuery<Hello169$Query, JsonSerializable> {
  Hello169Query();

  @override
  final DocumentNode document = HELLO169_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO169_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello169$Query parse(Map<String, dynamic> json) =>
      Hello169$Query.fromJson(json);
}

final HELLO170_QUERY_DOCUMENT_OPERATION_NAME = 'hello170';
final HELLO170_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello170'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello170Query extends GraphQLQuery<Hello170$Query, JsonSerializable> {
  Hello170Query();

  @override
  final DocumentNode document = HELLO170_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO170_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello170$Query parse(Map<String, dynamic> json) =>
      Hello170$Query.fromJson(json);
}

final HELLO171_QUERY_DOCUMENT_OPERATION_NAME = 'hello171';
final HELLO171_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello171'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello171Query extends GraphQLQuery<Hello171$Query, JsonSerializable> {
  Hello171Query();

  @override
  final DocumentNode document = HELLO171_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO171_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello171$Query parse(Map<String, dynamic> json) =>
      Hello171$Query.fromJson(json);
}

final HELLO172_QUERY_DOCUMENT_OPERATION_NAME = 'hello172';
final HELLO172_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello172'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello172Query extends GraphQLQuery<Hello172$Query, JsonSerializable> {
  Hello172Query();

  @override
  final DocumentNode document = HELLO172_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO172_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello172$Query parse(Map<String, dynamic> json) =>
      Hello172$Query.fromJson(json);
}

final HELLO173_QUERY_DOCUMENT_OPERATION_NAME = 'hello173';
final HELLO173_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello173'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello173Query extends GraphQLQuery<Hello173$Query, JsonSerializable> {
  Hello173Query();

  @override
  final DocumentNode document = HELLO173_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO173_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello173$Query parse(Map<String, dynamic> json) =>
      Hello173$Query.fromJson(json);
}

final HELLO174_QUERY_DOCUMENT_OPERATION_NAME = 'hello174';
final HELLO174_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello174'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello174Query extends GraphQLQuery<Hello174$Query, JsonSerializable> {
  Hello174Query();

  @override
  final DocumentNode document = HELLO174_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO174_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello174$Query parse(Map<String, dynamic> json) =>
      Hello174$Query.fromJson(json);
}

final HELLO175_QUERY_DOCUMENT_OPERATION_NAME = 'hello175';
final HELLO175_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello175'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello175Query extends GraphQLQuery<Hello175$Query, JsonSerializable> {
  Hello175Query();

  @override
  final DocumentNode document = HELLO175_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO175_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello175$Query parse(Map<String, dynamic> json) =>
      Hello175$Query.fromJson(json);
}

final HELLO176_QUERY_DOCUMENT_OPERATION_NAME = 'hello176';
final HELLO176_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello176'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello176Query extends GraphQLQuery<Hello176$Query, JsonSerializable> {
  Hello176Query();

  @override
  final DocumentNode document = HELLO176_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO176_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello176$Query parse(Map<String, dynamic> json) =>
      Hello176$Query.fromJson(json);
}

final HELLO177_QUERY_DOCUMENT_OPERATION_NAME = 'hello177';
final HELLO177_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello177'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello177Query extends GraphQLQuery<Hello177$Query, JsonSerializable> {
  Hello177Query();

  @override
  final DocumentNode document = HELLO177_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO177_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello177$Query parse(Map<String, dynamic> json) =>
      Hello177$Query.fromJson(json);
}

final HELLO178_QUERY_DOCUMENT_OPERATION_NAME = 'hello178';
final HELLO178_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello178'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello178Query extends GraphQLQuery<Hello178$Query, JsonSerializable> {
  Hello178Query();

  @override
  final DocumentNode document = HELLO178_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO178_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello178$Query parse(Map<String, dynamic> json) =>
      Hello178$Query.fromJson(json);
}

final HELLO179_QUERY_DOCUMENT_OPERATION_NAME = 'hello179';
final HELLO179_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello179'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello179Query extends GraphQLQuery<Hello179$Query, JsonSerializable> {
  Hello179Query();

  @override
  final DocumentNode document = HELLO179_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO179_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello179$Query parse(Map<String, dynamic> json) =>
      Hello179$Query.fromJson(json);
}

final HELLO180_QUERY_DOCUMENT_OPERATION_NAME = 'hello180';
final HELLO180_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello180'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello180Query extends GraphQLQuery<Hello180$Query, JsonSerializable> {
  Hello180Query();

  @override
  final DocumentNode document = HELLO180_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO180_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello180$Query parse(Map<String, dynamic> json) =>
      Hello180$Query.fromJson(json);
}

final HELLO181_QUERY_DOCUMENT_OPERATION_NAME = 'hello181';
final HELLO181_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello181'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello181Query extends GraphQLQuery<Hello181$Query, JsonSerializable> {
  Hello181Query();

  @override
  final DocumentNode document = HELLO181_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO181_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello181$Query parse(Map<String, dynamic> json) =>
      Hello181$Query.fromJson(json);
}

final HELLO182_QUERY_DOCUMENT_OPERATION_NAME = 'hello182';
final HELLO182_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello182'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello182Query extends GraphQLQuery<Hello182$Query, JsonSerializable> {
  Hello182Query();

  @override
  final DocumentNode document = HELLO182_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO182_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello182$Query parse(Map<String, dynamic> json) =>
      Hello182$Query.fromJson(json);
}

final HELLO183_QUERY_DOCUMENT_OPERATION_NAME = 'hello183';
final HELLO183_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello183'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello183Query extends GraphQLQuery<Hello183$Query, JsonSerializable> {
  Hello183Query();

  @override
  final DocumentNode document = HELLO183_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO183_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello183$Query parse(Map<String, dynamic> json) =>
      Hello183$Query.fromJson(json);
}

final HELLO184_QUERY_DOCUMENT_OPERATION_NAME = 'hello184';
final HELLO184_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello184'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello184Query extends GraphQLQuery<Hello184$Query, JsonSerializable> {
  Hello184Query();

  @override
  final DocumentNode document = HELLO184_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO184_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello184$Query parse(Map<String, dynamic> json) =>
      Hello184$Query.fromJson(json);
}

final HELLO185_QUERY_DOCUMENT_OPERATION_NAME = 'hello185';
final HELLO185_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello185'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello185Query extends GraphQLQuery<Hello185$Query, JsonSerializable> {
  Hello185Query();

  @override
  final DocumentNode document = HELLO185_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO185_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello185$Query parse(Map<String, dynamic> json) =>
      Hello185$Query.fromJson(json);
}

final HELLO186_QUERY_DOCUMENT_OPERATION_NAME = 'hello186';
final HELLO186_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello186'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello186Query extends GraphQLQuery<Hello186$Query, JsonSerializable> {
  Hello186Query();

  @override
  final DocumentNode document = HELLO186_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO186_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello186$Query parse(Map<String, dynamic> json) =>
      Hello186$Query.fromJson(json);
}

final HELLO187_QUERY_DOCUMENT_OPERATION_NAME = 'hello187';
final HELLO187_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello187'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello187Query extends GraphQLQuery<Hello187$Query, JsonSerializable> {
  Hello187Query();

  @override
  final DocumentNode document = HELLO187_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO187_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello187$Query parse(Map<String, dynamic> json) =>
      Hello187$Query.fromJson(json);
}

final HELLO188_QUERY_DOCUMENT_OPERATION_NAME = 'hello188';
final HELLO188_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello188'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello188Query extends GraphQLQuery<Hello188$Query, JsonSerializable> {
  Hello188Query();

  @override
  final DocumentNode document = HELLO188_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO188_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello188$Query parse(Map<String, dynamic> json) =>
      Hello188$Query.fromJson(json);
}

final HELLO189_QUERY_DOCUMENT_OPERATION_NAME = 'hello189';
final HELLO189_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello189'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello189Query extends GraphQLQuery<Hello189$Query, JsonSerializable> {
  Hello189Query();

  @override
  final DocumentNode document = HELLO189_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO189_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello189$Query parse(Map<String, dynamic> json) =>
      Hello189$Query.fromJson(json);
}

final HELLO190_QUERY_DOCUMENT_OPERATION_NAME = 'hello190';
final HELLO190_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello190'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello190Query extends GraphQLQuery<Hello190$Query, JsonSerializable> {
  Hello190Query();

  @override
  final DocumentNode document = HELLO190_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO190_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello190$Query parse(Map<String, dynamic> json) =>
      Hello190$Query.fromJson(json);
}

final HELLO191_QUERY_DOCUMENT_OPERATION_NAME = 'hello191';
final HELLO191_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello191'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello191Query extends GraphQLQuery<Hello191$Query, JsonSerializable> {
  Hello191Query();

  @override
  final DocumentNode document = HELLO191_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO191_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello191$Query parse(Map<String, dynamic> json) =>
      Hello191$Query.fromJson(json);
}

final HELLO192_QUERY_DOCUMENT_OPERATION_NAME = 'hello192';
final HELLO192_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello192'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello192Query extends GraphQLQuery<Hello192$Query, JsonSerializable> {
  Hello192Query();

  @override
  final DocumentNode document = HELLO192_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO192_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello192$Query parse(Map<String, dynamic> json) =>
      Hello192$Query.fromJson(json);
}

final HELLO193_QUERY_DOCUMENT_OPERATION_NAME = 'hello193';
final HELLO193_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello193'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello193Query extends GraphQLQuery<Hello193$Query, JsonSerializable> {
  Hello193Query();

  @override
  final DocumentNode document = HELLO193_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO193_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello193$Query parse(Map<String, dynamic> json) =>
      Hello193$Query.fromJson(json);
}

final HELLO194_QUERY_DOCUMENT_OPERATION_NAME = 'hello194';
final HELLO194_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello194'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello194Query extends GraphQLQuery<Hello194$Query, JsonSerializable> {
  Hello194Query();

  @override
  final DocumentNode document = HELLO194_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO194_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello194$Query parse(Map<String, dynamic> json) =>
      Hello194$Query.fromJson(json);
}

final HELLO195_QUERY_DOCUMENT_OPERATION_NAME = 'hello195';
final HELLO195_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello195'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello195Query extends GraphQLQuery<Hello195$Query, JsonSerializable> {
  Hello195Query();

  @override
  final DocumentNode document = HELLO195_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO195_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello195$Query parse(Map<String, dynamic> json) =>
      Hello195$Query.fromJson(json);
}

final HELLO196_QUERY_DOCUMENT_OPERATION_NAME = 'hello196';
final HELLO196_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello196'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello196Query extends GraphQLQuery<Hello196$Query, JsonSerializable> {
  Hello196Query();

  @override
  final DocumentNode document = HELLO196_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO196_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello196$Query parse(Map<String, dynamic> json) =>
      Hello196$Query.fromJson(json);
}

final HELLO197_QUERY_DOCUMENT_OPERATION_NAME = 'hello197';
final HELLO197_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello197'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello197Query extends GraphQLQuery<Hello197$Query, JsonSerializable> {
  Hello197Query();

  @override
  final DocumentNode document = HELLO197_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO197_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello197$Query parse(Map<String, dynamic> json) =>
      Hello197$Query.fromJson(json);
}

final HELLO198_QUERY_DOCUMENT_OPERATION_NAME = 'hello198';
final HELLO198_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello198'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello198Query extends GraphQLQuery<Hello198$Query, JsonSerializable> {
  Hello198Query();

  @override
  final DocumentNode document = HELLO198_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO198_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello198$Query parse(Map<String, dynamic> json) =>
      Hello198$Query.fromJson(json);
}

final HELLO199_QUERY_DOCUMENT_OPERATION_NAME = 'hello199';
final HELLO199_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello199'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello199Query extends GraphQLQuery<Hello199$Query, JsonSerializable> {
  Hello199Query();

  @override
  final DocumentNode document = HELLO199_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO199_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello199$Query parse(Map<String, dynamic> json) =>
      Hello199$Query.fromJson(json);
}

final HELLO200_QUERY_DOCUMENT_OPERATION_NAME = 'hello200';
final HELLO200_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello200'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello200Query extends GraphQLQuery<Hello200$Query, JsonSerializable> {
  Hello200Query();

  @override
  final DocumentNode document = HELLO200_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO200_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello200$Query parse(Map<String, dynamic> json) =>
      Hello200$Query.fromJson(json);
}

final HELLO201_QUERY_DOCUMENT_OPERATION_NAME = 'hello201';
final HELLO201_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello201'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello201Query extends GraphQLQuery<Hello201$Query, JsonSerializable> {
  Hello201Query();

  @override
  final DocumentNode document = HELLO201_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO201_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello201$Query parse(Map<String, dynamic> json) =>
      Hello201$Query.fromJson(json);
}

final HELLO202_QUERY_DOCUMENT_OPERATION_NAME = 'hello202';
final HELLO202_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello202'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello202Query extends GraphQLQuery<Hello202$Query, JsonSerializable> {
  Hello202Query();

  @override
  final DocumentNode document = HELLO202_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO202_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello202$Query parse(Map<String, dynamic> json) =>
      Hello202$Query.fromJson(json);
}

final HELLO203_QUERY_DOCUMENT_OPERATION_NAME = 'hello203';
final HELLO203_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello203'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello203Query extends GraphQLQuery<Hello203$Query, JsonSerializable> {
  Hello203Query();

  @override
  final DocumentNode document = HELLO203_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO203_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello203$Query parse(Map<String, dynamic> json) =>
      Hello203$Query.fromJson(json);
}

final HELLO204_QUERY_DOCUMENT_OPERATION_NAME = 'hello204';
final HELLO204_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello204'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello204Query extends GraphQLQuery<Hello204$Query, JsonSerializable> {
  Hello204Query();

  @override
  final DocumentNode document = HELLO204_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO204_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello204$Query parse(Map<String, dynamic> json) =>
      Hello204$Query.fromJson(json);
}

final HELLO205_QUERY_DOCUMENT_OPERATION_NAME = 'hello205';
final HELLO205_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello205'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello205Query extends GraphQLQuery<Hello205$Query, JsonSerializable> {
  Hello205Query();

  @override
  final DocumentNode document = HELLO205_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO205_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello205$Query parse(Map<String, dynamic> json) =>
      Hello205$Query.fromJson(json);
}

final HELLO206_QUERY_DOCUMENT_OPERATION_NAME = 'hello206';
final HELLO206_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello206'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello206Query extends GraphQLQuery<Hello206$Query, JsonSerializable> {
  Hello206Query();

  @override
  final DocumentNode document = HELLO206_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO206_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello206$Query parse(Map<String, dynamic> json) =>
      Hello206$Query.fromJson(json);
}

final HELLO207_QUERY_DOCUMENT_OPERATION_NAME = 'hello207';
final HELLO207_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello207'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello207Query extends GraphQLQuery<Hello207$Query, JsonSerializable> {
  Hello207Query();

  @override
  final DocumentNode document = HELLO207_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO207_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello207$Query parse(Map<String, dynamic> json) =>
      Hello207$Query.fromJson(json);
}

final HELLO208_QUERY_DOCUMENT_OPERATION_NAME = 'hello208';
final HELLO208_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello208'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello208Query extends GraphQLQuery<Hello208$Query, JsonSerializable> {
  Hello208Query();

  @override
  final DocumentNode document = HELLO208_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO208_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello208$Query parse(Map<String, dynamic> json) =>
      Hello208$Query.fromJson(json);
}

final HELLO209_QUERY_DOCUMENT_OPERATION_NAME = 'hello209';
final HELLO209_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello209'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello209Query extends GraphQLQuery<Hello209$Query, JsonSerializable> {
  Hello209Query();

  @override
  final DocumentNode document = HELLO209_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO209_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello209$Query parse(Map<String, dynamic> json) =>
      Hello209$Query.fromJson(json);
}

final HELLO210_QUERY_DOCUMENT_OPERATION_NAME = 'hello210';
final HELLO210_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello210'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello210Query extends GraphQLQuery<Hello210$Query, JsonSerializable> {
  Hello210Query();

  @override
  final DocumentNode document = HELLO210_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO210_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello210$Query parse(Map<String, dynamic> json) =>
      Hello210$Query.fromJson(json);
}

final HELLO211_QUERY_DOCUMENT_OPERATION_NAME = 'hello211';
final HELLO211_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello211'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello211Query extends GraphQLQuery<Hello211$Query, JsonSerializable> {
  Hello211Query();

  @override
  final DocumentNode document = HELLO211_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO211_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello211$Query parse(Map<String, dynamic> json) =>
      Hello211$Query.fromJson(json);
}

final HELLO212_QUERY_DOCUMENT_OPERATION_NAME = 'hello212';
final HELLO212_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello212'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello212Query extends GraphQLQuery<Hello212$Query, JsonSerializable> {
  Hello212Query();

  @override
  final DocumentNode document = HELLO212_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO212_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello212$Query parse(Map<String, dynamic> json) =>
      Hello212$Query.fromJson(json);
}

final HELLO213_QUERY_DOCUMENT_OPERATION_NAME = 'hello213';
final HELLO213_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello213'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello213Query extends GraphQLQuery<Hello213$Query, JsonSerializable> {
  Hello213Query();

  @override
  final DocumentNode document = HELLO213_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO213_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello213$Query parse(Map<String, dynamic> json) =>
      Hello213$Query.fromJson(json);
}

final HELLO214_QUERY_DOCUMENT_OPERATION_NAME = 'hello214';
final HELLO214_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello214'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello214Query extends GraphQLQuery<Hello214$Query, JsonSerializable> {
  Hello214Query();

  @override
  final DocumentNode document = HELLO214_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO214_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello214$Query parse(Map<String, dynamic> json) =>
      Hello214$Query.fromJson(json);
}

final HELLO215_QUERY_DOCUMENT_OPERATION_NAME = 'hello215';
final HELLO215_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello215'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello215Query extends GraphQLQuery<Hello215$Query, JsonSerializable> {
  Hello215Query();

  @override
  final DocumentNode document = HELLO215_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO215_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello215$Query parse(Map<String, dynamic> json) =>
      Hello215$Query.fromJson(json);
}

final HELLO216_QUERY_DOCUMENT_OPERATION_NAME = 'hello216';
final HELLO216_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello216'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello216Query extends GraphQLQuery<Hello216$Query, JsonSerializable> {
  Hello216Query();

  @override
  final DocumentNode document = HELLO216_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO216_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello216$Query parse(Map<String, dynamic> json) =>
      Hello216$Query.fromJson(json);
}

final HELLO217_QUERY_DOCUMENT_OPERATION_NAME = 'hello217';
final HELLO217_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello217'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello217Query extends GraphQLQuery<Hello217$Query, JsonSerializable> {
  Hello217Query();

  @override
  final DocumentNode document = HELLO217_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO217_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello217$Query parse(Map<String, dynamic> json) =>
      Hello217$Query.fromJson(json);
}

final HELLO218_QUERY_DOCUMENT_OPERATION_NAME = 'hello218';
final HELLO218_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello218'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello218Query extends GraphQLQuery<Hello218$Query, JsonSerializable> {
  Hello218Query();

  @override
  final DocumentNode document = HELLO218_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO218_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello218$Query parse(Map<String, dynamic> json) =>
      Hello218$Query.fromJson(json);
}

final HELLO219_QUERY_DOCUMENT_OPERATION_NAME = 'hello219';
final HELLO219_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello219'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello219Query extends GraphQLQuery<Hello219$Query, JsonSerializable> {
  Hello219Query();

  @override
  final DocumentNode document = HELLO219_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO219_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello219$Query parse(Map<String, dynamic> json) =>
      Hello219$Query.fromJson(json);
}

final HELLO220_QUERY_DOCUMENT_OPERATION_NAME = 'hello220';
final HELLO220_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello220'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello220Query extends GraphQLQuery<Hello220$Query, JsonSerializable> {
  Hello220Query();

  @override
  final DocumentNode document = HELLO220_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO220_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello220$Query parse(Map<String, dynamic> json) =>
      Hello220$Query.fromJson(json);
}

final HELLO221_QUERY_DOCUMENT_OPERATION_NAME = 'hello221';
final HELLO221_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello221'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello221Query extends GraphQLQuery<Hello221$Query, JsonSerializable> {
  Hello221Query();

  @override
  final DocumentNode document = HELLO221_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO221_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello221$Query parse(Map<String, dynamic> json) =>
      Hello221$Query.fromJson(json);
}

final HELLO222_QUERY_DOCUMENT_OPERATION_NAME = 'hello222';
final HELLO222_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello222'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello222Query extends GraphQLQuery<Hello222$Query, JsonSerializable> {
  Hello222Query();

  @override
  final DocumentNode document = HELLO222_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO222_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello222$Query parse(Map<String, dynamic> json) =>
      Hello222$Query.fromJson(json);
}

final HELLO223_QUERY_DOCUMENT_OPERATION_NAME = 'hello223';
final HELLO223_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello223'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello223Query extends GraphQLQuery<Hello223$Query, JsonSerializable> {
  Hello223Query();

  @override
  final DocumentNode document = HELLO223_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO223_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello223$Query parse(Map<String, dynamic> json) =>
      Hello223$Query.fromJson(json);
}

final HELLO224_QUERY_DOCUMENT_OPERATION_NAME = 'hello224';
final HELLO224_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello224'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello224Query extends GraphQLQuery<Hello224$Query, JsonSerializable> {
  Hello224Query();

  @override
  final DocumentNode document = HELLO224_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO224_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello224$Query parse(Map<String, dynamic> json) =>
      Hello224$Query.fromJson(json);
}

final HELLO225_QUERY_DOCUMENT_OPERATION_NAME = 'hello225';
final HELLO225_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello225'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello225Query extends GraphQLQuery<Hello225$Query, JsonSerializable> {
  Hello225Query();

  @override
  final DocumentNode document = HELLO225_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO225_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello225$Query parse(Map<String, dynamic> json) =>
      Hello225$Query.fromJson(json);
}

final HELLO226_QUERY_DOCUMENT_OPERATION_NAME = 'hello226';
final HELLO226_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello226'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello226Query extends GraphQLQuery<Hello226$Query, JsonSerializable> {
  Hello226Query();

  @override
  final DocumentNode document = HELLO226_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO226_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello226$Query parse(Map<String, dynamic> json) =>
      Hello226$Query.fromJson(json);
}

final HELLO227_QUERY_DOCUMENT_OPERATION_NAME = 'hello227';
final HELLO227_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello227'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello227Query extends GraphQLQuery<Hello227$Query, JsonSerializable> {
  Hello227Query();

  @override
  final DocumentNode document = HELLO227_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO227_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello227$Query parse(Map<String, dynamic> json) =>
      Hello227$Query.fromJson(json);
}

final HELLO228_QUERY_DOCUMENT_OPERATION_NAME = 'hello228';
final HELLO228_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello228'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello228Query extends GraphQLQuery<Hello228$Query, JsonSerializable> {
  Hello228Query();

  @override
  final DocumentNode document = HELLO228_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO228_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello228$Query parse(Map<String, dynamic> json) =>
      Hello228$Query.fromJson(json);
}

final HELLO229_QUERY_DOCUMENT_OPERATION_NAME = 'hello229';
final HELLO229_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello229'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello229Query extends GraphQLQuery<Hello229$Query, JsonSerializable> {
  Hello229Query();

  @override
  final DocumentNode document = HELLO229_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO229_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello229$Query parse(Map<String, dynamic> json) =>
      Hello229$Query.fromJson(json);
}

final HELLO230_QUERY_DOCUMENT_OPERATION_NAME = 'hello230';
final HELLO230_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello230'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello230Query extends GraphQLQuery<Hello230$Query, JsonSerializable> {
  Hello230Query();

  @override
  final DocumentNode document = HELLO230_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO230_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello230$Query parse(Map<String, dynamic> json) =>
      Hello230$Query.fromJson(json);
}

final HELLO231_QUERY_DOCUMENT_OPERATION_NAME = 'hello231';
final HELLO231_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello231'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello231Query extends GraphQLQuery<Hello231$Query, JsonSerializable> {
  Hello231Query();

  @override
  final DocumentNode document = HELLO231_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO231_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello231$Query parse(Map<String, dynamic> json) =>
      Hello231$Query.fromJson(json);
}

final HELLO232_QUERY_DOCUMENT_OPERATION_NAME = 'hello232';
final HELLO232_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello232'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello232Query extends GraphQLQuery<Hello232$Query, JsonSerializable> {
  Hello232Query();

  @override
  final DocumentNode document = HELLO232_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO232_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello232$Query parse(Map<String, dynamic> json) =>
      Hello232$Query.fromJson(json);
}

final HELLO233_QUERY_DOCUMENT_OPERATION_NAME = 'hello233';
final HELLO233_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello233'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello233Query extends GraphQLQuery<Hello233$Query, JsonSerializable> {
  Hello233Query();

  @override
  final DocumentNode document = HELLO233_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO233_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello233$Query parse(Map<String, dynamic> json) =>
      Hello233$Query.fromJson(json);
}

final HELLO234_QUERY_DOCUMENT_OPERATION_NAME = 'hello234';
final HELLO234_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello234'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello234Query extends GraphQLQuery<Hello234$Query, JsonSerializable> {
  Hello234Query();

  @override
  final DocumentNode document = HELLO234_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO234_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello234$Query parse(Map<String, dynamic> json) =>
      Hello234$Query.fromJson(json);
}

final HELLO235_QUERY_DOCUMENT_OPERATION_NAME = 'hello235';
final HELLO235_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello235'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello235Query extends GraphQLQuery<Hello235$Query, JsonSerializable> {
  Hello235Query();

  @override
  final DocumentNode document = HELLO235_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO235_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello235$Query parse(Map<String, dynamic> json) =>
      Hello235$Query.fromJson(json);
}

final HELLO236_QUERY_DOCUMENT_OPERATION_NAME = 'hello236';
final HELLO236_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello236'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello236Query extends GraphQLQuery<Hello236$Query, JsonSerializable> {
  Hello236Query();

  @override
  final DocumentNode document = HELLO236_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO236_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello236$Query parse(Map<String, dynamic> json) =>
      Hello236$Query.fromJson(json);
}

final HELLO237_QUERY_DOCUMENT_OPERATION_NAME = 'hello237';
final HELLO237_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello237'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello237Query extends GraphQLQuery<Hello237$Query, JsonSerializable> {
  Hello237Query();

  @override
  final DocumentNode document = HELLO237_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO237_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello237$Query parse(Map<String, dynamic> json) =>
      Hello237$Query.fromJson(json);
}

final HELLO238_QUERY_DOCUMENT_OPERATION_NAME = 'hello238';
final HELLO238_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello238'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello238Query extends GraphQLQuery<Hello238$Query, JsonSerializable> {
  Hello238Query();

  @override
  final DocumentNode document = HELLO238_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO238_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello238$Query parse(Map<String, dynamic> json) =>
      Hello238$Query.fromJson(json);
}

final HELLO239_QUERY_DOCUMENT_OPERATION_NAME = 'hello239';
final HELLO239_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello239'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello239Query extends GraphQLQuery<Hello239$Query, JsonSerializable> {
  Hello239Query();

  @override
  final DocumentNode document = HELLO239_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO239_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello239$Query parse(Map<String, dynamic> json) =>
      Hello239$Query.fromJson(json);
}

final HELLO240_QUERY_DOCUMENT_OPERATION_NAME = 'hello240';
final HELLO240_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello240'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello240Query extends GraphQLQuery<Hello240$Query, JsonSerializable> {
  Hello240Query();

  @override
  final DocumentNode document = HELLO240_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO240_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello240$Query parse(Map<String, dynamic> json) =>
      Hello240$Query.fromJson(json);
}

final HELLO241_QUERY_DOCUMENT_OPERATION_NAME = 'hello241';
final HELLO241_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello241'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello241Query extends GraphQLQuery<Hello241$Query, JsonSerializable> {
  Hello241Query();

  @override
  final DocumentNode document = HELLO241_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO241_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello241$Query parse(Map<String, dynamic> json) =>
      Hello241$Query.fromJson(json);
}

final HELLO242_QUERY_DOCUMENT_OPERATION_NAME = 'hello242';
final HELLO242_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello242'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello242Query extends GraphQLQuery<Hello242$Query, JsonSerializable> {
  Hello242Query();

  @override
  final DocumentNode document = HELLO242_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO242_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello242$Query parse(Map<String, dynamic> json) =>
      Hello242$Query.fromJson(json);
}

final HELLO243_QUERY_DOCUMENT_OPERATION_NAME = 'hello243';
final HELLO243_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello243'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello243Query extends GraphQLQuery<Hello243$Query, JsonSerializable> {
  Hello243Query();

  @override
  final DocumentNode document = HELLO243_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO243_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello243$Query parse(Map<String, dynamic> json) =>
      Hello243$Query.fromJson(json);
}

final HELLO244_QUERY_DOCUMENT_OPERATION_NAME = 'hello244';
final HELLO244_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello244'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello244Query extends GraphQLQuery<Hello244$Query, JsonSerializable> {
  Hello244Query();

  @override
  final DocumentNode document = HELLO244_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO244_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello244$Query parse(Map<String, dynamic> json) =>
      Hello244$Query.fromJson(json);
}

final HELLO245_QUERY_DOCUMENT_OPERATION_NAME = 'hello245';
final HELLO245_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello245'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello245Query extends GraphQLQuery<Hello245$Query, JsonSerializable> {
  Hello245Query();

  @override
  final DocumentNode document = HELLO245_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO245_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello245$Query parse(Map<String, dynamic> json) =>
      Hello245$Query.fromJson(json);
}

final HELLO246_QUERY_DOCUMENT_OPERATION_NAME = 'hello246';
final HELLO246_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello246'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello246Query extends GraphQLQuery<Hello246$Query, JsonSerializable> {
  Hello246Query();

  @override
  final DocumentNode document = HELLO246_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO246_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello246$Query parse(Map<String, dynamic> json) =>
      Hello246$Query.fromJson(json);
}

final HELLO247_QUERY_DOCUMENT_OPERATION_NAME = 'hello247';
final HELLO247_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello247'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello247Query extends GraphQLQuery<Hello247$Query, JsonSerializable> {
  Hello247Query();

  @override
  final DocumentNode document = HELLO247_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO247_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello247$Query parse(Map<String, dynamic> json) =>
      Hello247$Query.fromJson(json);
}

final HELLO248_QUERY_DOCUMENT_OPERATION_NAME = 'hello248';
final HELLO248_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello248'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello248Query extends GraphQLQuery<Hello248$Query, JsonSerializable> {
  Hello248Query();

  @override
  final DocumentNode document = HELLO248_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO248_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello248$Query parse(Map<String, dynamic> json) =>
      Hello248$Query.fromJson(json);
}

final HELLO249_QUERY_DOCUMENT_OPERATION_NAME = 'hello249';
final HELLO249_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello249'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello249Query extends GraphQLQuery<Hello249$Query, JsonSerializable> {
  Hello249Query();

  @override
  final DocumentNode document = HELLO249_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO249_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello249$Query parse(Map<String, dynamic> json) =>
      Hello249$Query.fromJson(json);
}

final HELLO250_QUERY_DOCUMENT_OPERATION_NAME = 'hello250';
final HELLO250_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello250'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello250Query extends GraphQLQuery<Hello250$Query, JsonSerializable> {
  Hello250Query();

  @override
  final DocumentNode document = HELLO250_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO250_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello250$Query parse(Map<String, dynamic> json) =>
      Hello250$Query.fromJson(json);
}

final HELLO251_QUERY_DOCUMENT_OPERATION_NAME = 'hello251';
final HELLO251_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello251'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello251Query extends GraphQLQuery<Hello251$Query, JsonSerializable> {
  Hello251Query();

  @override
  final DocumentNode document = HELLO251_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO251_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello251$Query parse(Map<String, dynamic> json) =>
      Hello251$Query.fromJson(json);
}

final HELLO252_QUERY_DOCUMENT_OPERATION_NAME = 'hello252';
final HELLO252_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello252'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello252Query extends GraphQLQuery<Hello252$Query, JsonSerializable> {
  Hello252Query();

  @override
  final DocumentNode document = HELLO252_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO252_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello252$Query parse(Map<String, dynamic> json) =>
      Hello252$Query.fromJson(json);
}

final HELLO253_QUERY_DOCUMENT_OPERATION_NAME = 'hello253';
final HELLO253_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello253'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello253Query extends GraphQLQuery<Hello253$Query, JsonSerializable> {
  Hello253Query();

  @override
  final DocumentNode document = HELLO253_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO253_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello253$Query parse(Map<String, dynamic> json) =>
      Hello253$Query.fromJson(json);
}

final HELLO254_QUERY_DOCUMENT_OPERATION_NAME = 'hello254';
final HELLO254_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello254'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello254Query extends GraphQLQuery<Hello254$Query, JsonSerializable> {
  Hello254Query();

  @override
  final DocumentNode document = HELLO254_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO254_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello254$Query parse(Map<String, dynamic> json) =>
      Hello254$Query.fromJson(json);
}

final HELLO255_QUERY_DOCUMENT_OPERATION_NAME = 'hello255';
final HELLO255_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello255'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello255Query extends GraphQLQuery<Hello255$Query, JsonSerializable> {
  Hello255Query();

  @override
  final DocumentNode document = HELLO255_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO255_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello255$Query parse(Map<String, dynamic> json) =>
      Hello255$Query.fromJson(json);
}

final HELLO256_QUERY_DOCUMENT_OPERATION_NAME = 'hello256';
final HELLO256_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello256'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello256Query extends GraphQLQuery<Hello256$Query, JsonSerializable> {
  Hello256Query();

  @override
  final DocumentNode document = HELLO256_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO256_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello256$Query parse(Map<String, dynamic> json) =>
      Hello256$Query.fromJson(json);
}

final HELLO257_QUERY_DOCUMENT_OPERATION_NAME = 'hello257';
final HELLO257_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello257'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello257Query extends GraphQLQuery<Hello257$Query, JsonSerializable> {
  Hello257Query();

  @override
  final DocumentNode document = HELLO257_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO257_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello257$Query parse(Map<String, dynamic> json) =>
      Hello257$Query.fromJson(json);
}

final HELLO258_QUERY_DOCUMENT_OPERATION_NAME = 'hello258';
final HELLO258_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello258'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello258Query extends GraphQLQuery<Hello258$Query, JsonSerializable> {
  Hello258Query();

  @override
  final DocumentNode document = HELLO258_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO258_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello258$Query parse(Map<String, dynamic> json) =>
      Hello258$Query.fromJson(json);
}

final HELLO259_QUERY_DOCUMENT_OPERATION_NAME = 'hello259';
final HELLO259_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello259'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello259Query extends GraphQLQuery<Hello259$Query, JsonSerializable> {
  Hello259Query();

  @override
  final DocumentNode document = HELLO259_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO259_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello259$Query parse(Map<String, dynamic> json) =>
      Hello259$Query.fromJson(json);
}

final HELLO260_QUERY_DOCUMENT_OPERATION_NAME = 'hello260';
final HELLO260_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello260'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello260Query extends GraphQLQuery<Hello260$Query, JsonSerializable> {
  Hello260Query();

  @override
  final DocumentNode document = HELLO260_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO260_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello260$Query parse(Map<String, dynamic> json) =>
      Hello260$Query.fromJson(json);
}

final HELLO261_QUERY_DOCUMENT_OPERATION_NAME = 'hello261';
final HELLO261_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello261'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello261Query extends GraphQLQuery<Hello261$Query, JsonSerializable> {
  Hello261Query();

  @override
  final DocumentNode document = HELLO261_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO261_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello261$Query parse(Map<String, dynamic> json) =>
      Hello261$Query.fromJson(json);
}

final HELLO262_QUERY_DOCUMENT_OPERATION_NAME = 'hello262';
final HELLO262_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello262'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello262Query extends GraphQLQuery<Hello262$Query, JsonSerializable> {
  Hello262Query();

  @override
  final DocumentNode document = HELLO262_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO262_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello262$Query parse(Map<String, dynamic> json) =>
      Hello262$Query.fromJson(json);
}

final HELLO263_QUERY_DOCUMENT_OPERATION_NAME = 'hello263';
final HELLO263_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello263'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello263Query extends GraphQLQuery<Hello263$Query, JsonSerializable> {
  Hello263Query();

  @override
  final DocumentNode document = HELLO263_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO263_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello263$Query parse(Map<String, dynamic> json) =>
      Hello263$Query.fromJson(json);
}

final HELLO264_QUERY_DOCUMENT_OPERATION_NAME = 'hello264';
final HELLO264_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello264'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello264Query extends GraphQLQuery<Hello264$Query, JsonSerializable> {
  Hello264Query();

  @override
  final DocumentNode document = HELLO264_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO264_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello264$Query parse(Map<String, dynamic> json) =>
      Hello264$Query.fromJson(json);
}

final HELLO265_QUERY_DOCUMENT_OPERATION_NAME = 'hello265';
final HELLO265_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello265'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello265Query extends GraphQLQuery<Hello265$Query, JsonSerializable> {
  Hello265Query();

  @override
  final DocumentNode document = HELLO265_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO265_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello265$Query parse(Map<String, dynamic> json) =>
      Hello265$Query.fromJson(json);
}

final HELLO266_QUERY_DOCUMENT_OPERATION_NAME = 'hello266';
final HELLO266_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello266'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello266Query extends GraphQLQuery<Hello266$Query, JsonSerializable> {
  Hello266Query();

  @override
  final DocumentNode document = HELLO266_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO266_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello266$Query parse(Map<String, dynamic> json) =>
      Hello266$Query.fromJson(json);
}

final HELLO267_QUERY_DOCUMENT_OPERATION_NAME = 'hello267';
final HELLO267_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello267'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello267Query extends GraphQLQuery<Hello267$Query, JsonSerializable> {
  Hello267Query();

  @override
  final DocumentNode document = HELLO267_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO267_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello267$Query parse(Map<String, dynamic> json) =>
      Hello267$Query.fromJson(json);
}

final HELLO268_QUERY_DOCUMENT_OPERATION_NAME = 'hello268';
final HELLO268_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello268'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello268Query extends GraphQLQuery<Hello268$Query, JsonSerializable> {
  Hello268Query();

  @override
  final DocumentNode document = HELLO268_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO268_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello268$Query parse(Map<String, dynamic> json) =>
      Hello268$Query.fromJson(json);
}

final HELLO269_QUERY_DOCUMENT_OPERATION_NAME = 'hello269';
final HELLO269_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello269'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello269Query extends GraphQLQuery<Hello269$Query, JsonSerializable> {
  Hello269Query();

  @override
  final DocumentNode document = HELLO269_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO269_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello269$Query parse(Map<String, dynamic> json) =>
      Hello269$Query.fromJson(json);
}

final HELLO270_QUERY_DOCUMENT_OPERATION_NAME = 'hello270';
final HELLO270_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello270'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello270Query extends GraphQLQuery<Hello270$Query, JsonSerializable> {
  Hello270Query();

  @override
  final DocumentNode document = HELLO270_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO270_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello270$Query parse(Map<String, dynamic> json) =>
      Hello270$Query.fromJson(json);
}

final HELLO271_QUERY_DOCUMENT_OPERATION_NAME = 'hello271';
final HELLO271_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello271'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello271Query extends GraphQLQuery<Hello271$Query, JsonSerializable> {
  Hello271Query();

  @override
  final DocumentNode document = HELLO271_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO271_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello271$Query parse(Map<String, dynamic> json) =>
      Hello271$Query.fromJson(json);
}

final HELLO272_QUERY_DOCUMENT_OPERATION_NAME = 'hello272';
final HELLO272_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello272'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello272Query extends GraphQLQuery<Hello272$Query, JsonSerializable> {
  Hello272Query();

  @override
  final DocumentNode document = HELLO272_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO272_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello272$Query parse(Map<String, dynamic> json) =>
      Hello272$Query.fromJson(json);
}

final HELLO273_QUERY_DOCUMENT_OPERATION_NAME = 'hello273';
final HELLO273_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello273'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello273Query extends GraphQLQuery<Hello273$Query, JsonSerializable> {
  Hello273Query();

  @override
  final DocumentNode document = HELLO273_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO273_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello273$Query parse(Map<String, dynamic> json) =>
      Hello273$Query.fromJson(json);
}

final HELLO274_QUERY_DOCUMENT_OPERATION_NAME = 'hello274';
final HELLO274_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello274'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello274Query extends GraphQLQuery<Hello274$Query, JsonSerializable> {
  Hello274Query();

  @override
  final DocumentNode document = HELLO274_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO274_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello274$Query parse(Map<String, dynamic> json) =>
      Hello274$Query.fromJson(json);
}

final HELLO275_QUERY_DOCUMENT_OPERATION_NAME = 'hello275';
final HELLO275_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello275'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello275Query extends GraphQLQuery<Hello275$Query, JsonSerializable> {
  Hello275Query();

  @override
  final DocumentNode document = HELLO275_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO275_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello275$Query parse(Map<String, dynamic> json) =>
      Hello275$Query.fromJson(json);
}

final HELLO276_QUERY_DOCUMENT_OPERATION_NAME = 'hello276';
final HELLO276_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello276'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello276Query extends GraphQLQuery<Hello276$Query, JsonSerializable> {
  Hello276Query();

  @override
  final DocumentNode document = HELLO276_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO276_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello276$Query parse(Map<String, dynamic> json) =>
      Hello276$Query.fromJson(json);
}

final HELLO277_QUERY_DOCUMENT_OPERATION_NAME = 'hello277';
final HELLO277_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello277'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello277Query extends GraphQLQuery<Hello277$Query, JsonSerializable> {
  Hello277Query();

  @override
  final DocumentNode document = HELLO277_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO277_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello277$Query parse(Map<String, dynamic> json) =>
      Hello277$Query.fromJson(json);
}

final HELLO278_QUERY_DOCUMENT_OPERATION_NAME = 'hello278';
final HELLO278_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello278'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello278Query extends GraphQLQuery<Hello278$Query, JsonSerializable> {
  Hello278Query();

  @override
  final DocumentNode document = HELLO278_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO278_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello278$Query parse(Map<String, dynamic> json) =>
      Hello278$Query.fromJson(json);
}

final HELLO279_QUERY_DOCUMENT_OPERATION_NAME = 'hello279';
final HELLO279_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello279'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello279Query extends GraphQLQuery<Hello279$Query, JsonSerializable> {
  Hello279Query();

  @override
  final DocumentNode document = HELLO279_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO279_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello279$Query parse(Map<String, dynamic> json) =>
      Hello279$Query.fromJson(json);
}

final HELLO280_QUERY_DOCUMENT_OPERATION_NAME = 'hello280';
final HELLO280_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello280'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello280Query extends GraphQLQuery<Hello280$Query, JsonSerializable> {
  Hello280Query();

  @override
  final DocumentNode document = HELLO280_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO280_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello280$Query parse(Map<String, dynamic> json) =>
      Hello280$Query.fromJson(json);
}

final HELLO281_QUERY_DOCUMENT_OPERATION_NAME = 'hello281';
final HELLO281_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello281'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello281Query extends GraphQLQuery<Hello281$Query, JsonSerializable> {
  Hello281Query();

  @override
  final DocumentNode document = HELLO281_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO281_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello281$Query parse(Map<String, dynamic> json) =>
      Hello281$Query.fromJson(json);
}

final HELLO282_QUERY_DOCUMENT_OPERATION_NAME = 'hello282';
final HELLO282_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello282'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello282Query extends GraphQLQuery<Hello282$Query, JsonSerializable> {
  Hello282Query();

  @override
  final DocumentNode document = HELLO282_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO282_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello282$Query parse(Map<String, dynamic> json) =>
      Hello282$Query.fromJson(json);
}

final HELLO283_QUERY_DOCUMENT_OPERATION_NAME = 'hello283';
final HELLO283_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello283'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello283Query extends GraphQLQuery<Hello283$Query, JsonSerializable> {
  Hello283Query();

  @override
  final DocumentNode document = HELLO283_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO283_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello283$Query parse(Map<String, dynamic> json) =>
      Hello283$Query.fromJson(json);
}

final HELLO284_QUERY_DOCUMENT_OPERATION_NAME = 'hello284';
final HELLO284_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello284'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello284Query extends GraphQLQuery<Hello284$Query, JsonSerializable> {
  Hello284Query();

  @override
  final DocumentNode document = HELLO284_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO284_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello284$Query parse(Map<String, dynamic> json) =>
      Hello284$Query.fromJson(json);
}

final HELLO285_QUERY_DOCUMENT_OPERATION_NAME = 'hello285';
final HELLO285_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello285'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello285Query extends GraphQLQuery<Hello285$Query, JsonSerializable> {
  Hello285Query();

  @override
  final DocumentNode document = HELLO285_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO285_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello285$Query parse(Map<String, dynamic> json) =>
      Hello285$Query.fromJson(json);
}

final HELLO286_QUERY_DOCUMENT_OPERATION_NAME = 'hello286';
final HELLO286_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello286'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello286Query extends GraphQLQuery<Hello286$Query, JsonSerializable> {
  Hello286Query();

  @override
  final DocumentNode document = HELLO286_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO286_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello286$Query parse(Map<String, dynamic> json) =>
      Hello286$Query.fromJson(json);
}

final HELLO287_QUERY_DOCUMENT_OPERATION_NAME = 'hello287';
final HELLO287_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello287'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello287Query extends GraphQLQuery<Hello287$Query, JsonSerializable> {
  Hello287Query();

  @override
  final DocumentNode document = HELLO287_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO287_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello287$Query parse(Map<String, dynamic> json) =>
      Hello287$Query.fromJson(json);
}

final HELLO288_QUERY_DOCUMENT_OPERATION_NAME = 'hello288';
final HELLO288_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello288'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello288Query extends GraphQLQuery<Hello288$Query, JsonSerializable> {
  Hello288Query();

  @override
  final DocumentNode document = HELLO288_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO288_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello288$Query parse(Map<String, dynamic> json) =>
      Hello288$Query.fromJson(json);
}

final HELLO289_QUERY_DOCUMENT_OPERATION_NAME = 'hello289';
final HELLO289_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello289'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello289Query extends GraphQLQuery<Hello289$Query, JsonSerializable> {
  Hello289Query();

  @override
  final DocumentNode document = HELLO289_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO289_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello289$Query parse(Map<String, dynamic> json) =>
      Hello289$Query.fromJson(json);
}

final HELLO290_QUERY_DOCUMENT_OPERATION_NAME = 'hello290';
final HELLO290_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello290'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello290Query extends GraphQLQuery<Hello290$Query, JsonSerializable> {
  Hello290Query();

  @override
  final DocumentNode document = HELLO290_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO290_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello290$Query parse(Map<String, dynamic> json) =>
      Hello290$Query.fromJson(json);
}

final HELLO291_QUERY_DOCUMENT_OPERATION_NAME = 'hello291';
final HELLO291_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello291'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello291Query extends GraphQLQuery<Hello291$Query, JsonSerializable> {
  Hello291Query();

  @override
  final DocumentNode document = HELLO291_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO291_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello291$Query parse(Map<String, dynamic> json) =>
      Hello291$Query.fromJson(json);
}

final HELLO292_QUERY_DOCUMENT_OPERATION_NAME = 'hello292';
final HELLO292_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello292'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello292Query extends GraphQLQuery<Hello292$Query, JsonSerializable> {
  Hello292Query();

  @override
  final DocumentNode document = HELLO292_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO292_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello292$Query parse(Map<String, dynamic> json) =>
      Hello292$Query.fromJson(json);
}

final HELLO293_QUERY_DOCUMENT_OPERATION_NAME = 'hello293';
final HELLO293_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello293'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello293Query extends GraphQLQuery<Hello293$Query, JsonSerializable> {
  Hello293Query();

  @override
  final DocumentNode document = HELLO293_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO293_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello293$Query parse(Map<String, dynamic> json) =>
      Hello293$Query.fromJson(json);
}

final HELLO294_QUERY_DOCUMENT_OPERATION_NAME = 'hello294';
final HELLO294_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello294'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello294Query extends GraphQLQuery<Hello294$Query, JsonSerializable> {
  Hello294Query();

  @override
  final DocumentNode document = HELLO294_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO294_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello294$Query parse(Map<String, dynamic> json) =>
      Hello294$Query.fromJson(json);
}

final HELLO295_QUERY_DOCUMENT_OPERATION_NAME = 'hello295';
final HELLO295_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello295'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello295Query extends GraphQLQuery<Hello295$Query, JsonSerializable> {
  Hello295Query();

  @override
  final DocumentNode document = HELLO295_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO295_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello295$Query parse(Map<String, dynamic> json) =>
      Hello295$Query.fromJson(json);
}

final HELLO296_QUERY_DOCUMENT_OPERATION_NAME = 'hello296';
final HELLO296_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello296'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello296Query extends GraphQLQuery<Hello296$Query, JsonSerializable> {
  Hello296Query();

  @override
  final DocumentNode document = HELLO296_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO296_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello296$Query parse(Map<String, dynamic> json) =>
      Hello296$Query.fromJson(json);
}

final HELLO297_QUERY_DOCUMENT_OPERATION_NAME = 'hello297';
final HELLO297_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello297'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello297Query extends GraphQLQuery<Hello297$Query, JsonSerializable> {
  Hello297Query();

  @override
  final DocumentNode document = HELLO297_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO297_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello297$Query parse(Map<String, dynamic> json) =>
      Hello297$Query.fromJson(json);
}

final HELLO298_QUERY_DOCUMENT_OPERATION_NAME = 'hello298';
final HELLO298_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello298'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello298Query extends GraphQLQuery<Hello298$Query, JsonSerializable> {
  Hello298Query();

  @override
  final DocumentNode document = HELLO298_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO298_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello298$Query parse(Map<String, dynamic> json) =>
      Hello298$Query.fromJson(json);
}

final HELLO299_QUERY_DOCUMENT_OPERATION_NAME = 'hello299';
final HELLO299_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello299'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello299Query extends GraphQLQuery<Hello299$Query, JsonSerializable> {
  Hello299Query();

  @override
  final DocumentNode document = HELLO299_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO299_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello299$Query parse(Map<String, dynamic> json) =>
      Hello299$Query.fromJson(json);
}

final HELLO300_QUERY_DOCUMENT_OPERATION_NAME = 'hello300';
final HELLO300_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello300'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello300Query extends GraphQLQuery<Hello300$Query, JsonSerializable> {
  Hello300Query();

  @override
  final DocumentNode document = HELLO300_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO300_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello300$Query parse(Map<String, dynamic> json) =>
      Hello300$Query.fromJson(json);
}

final HELLO301_QUERY_DOCUMENT_OPERATION_NAME = 'hello301';
final HELLO301_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello301'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello301Query extends GraphQLQuery<Hello301$Query, JsonSerializable> {
  Hello301Query();

  @override
  final DocumentNode document = HELLO301_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO301_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello301$Query parse(Map<String, dynamic> json) =>
      Hello301$Query.fromJson(json);
}

final HELLO302_QUERY_DOCUMENT_OPERATION_NAME = 'hello302';
final HELLO302_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello302'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello302Query extends GraphQLQuery<Hello302$Query, JsonSerializable> {
  Hello302Query();

  @override
  final DocumentNode document = HELLO302_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO302_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello302$Query parse(Map<String, dynamic> json) =>
      Hello302$Query.fromJson(json);
}

final HELLO303_QUERY_DOCUMENT_OPERATION_NAME = 'hello303';
final HELLO303_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello303'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello303Query extends GraphQLQuery<Hello303$Query, JsonSerializable> {
  Hello303Query();

  @override
  final DocumentNode document = HELLO303_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO303_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello303$Query parse(Map<String, dynamic> json) =>
      Hello303$Query.fromJson(json);
}

final HELLO304_QUERY_DOCUMENT_OPERATION_NAME = 'hello304';
final HELLO304_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello304'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello304Query extends GraphQLQuery<Hello304$Query, JsonSerializable> {
  Hello304Query();

  @override
  final DocumentNode document = HELLO304_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO304_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello304$Query parse(Map<String, dynamic> json) =>
      Hello304$Query.fromJson(json);
}

final HELLO305_QUERY_DOCUMENT_OPERATION_NAME = 'hello305';
final HELLO305_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello305'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello305Query extends GraphQLQuery<Hello305$Query, JsonSerializable> {
  Hello305Query();

  @override
  final DocumentNode document = HELLO305_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO305_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello305$Query parse(Map<String, dynamic> json) =>
      Hello305$Query.fromJson(json);
}

final HELLO306_QUERY_DOCUMENT_OPERATION_NAME = 'hello306';
final HELLO306_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello306'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello306Query extends GraphQLQuery<Hello306$Query, JsonSerializable> {
  Hello306Query();

  @override
  final DocumentNode document = HELLO306_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO306_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello306$Query parse(Map<String, dynamic> json) =>
      Hello306$Query.fromJson(json);
}

final HELLO307_QUERY_DOCUMENT_OPERATION_NAME = 'hello307';
final HELLO307_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello307'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello307Query extends GraphQLQuery<Hello307$Query, JsonSerializable> {
  Hello307Query();

  @override
  final DocumentNode document = HELLO307_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO307_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello307$Query parse(Map<String, dynamic> json) =>
      Hello307$Query.fromJson(json);
}

final HELLO308_QUERY_DOCUMENT_OPERATION_NAME = 'hello308';
final HELLO308_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello308'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello308Query extends GraphQLQuery<Hello308$Query, JsonSerializable> {
  Hello308Query();

  @override
  final DocumentNode document = HELLO308_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO308_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello308$Query parse(Map<String, dynamic> json) =>
      Hello308$Query.fromJson(json);
}

final HELLO309_QUERY_DOCUMENT_OPERATION_NAME = 'hello309';
final HELLO309_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello309'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello309Query extends GraphQLQuery<Hello309$Query, JsonSerializable> {
  Hello309Query();

  @override
  final DocumentNode document = HELLO309_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO309_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello309$Query parse(Map<String, dynamic> json) =>
      Hello309$Query.fromJson(json);
}

final HELLO310_QUERY_DOCUMENT_OPERATION_NAME = 'hello310';
final HELLO310_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello310'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello310Query extends GraphQLQuery<Hello310$Query, JsonSerializable> {
  Hello310Query();

  @override
  final DocumentNode document = HELLO310_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO310_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello310$Query parse(Map<String, dynamic> json) =>
      Hello310$Query.fromJson(json);
}

final HELLO311_QUERY_DOCUMENT_OPERATION_NAME = 'hello311';
final HELLO311_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello311'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello311Query extends GraphQLQuery<Hello311$Query, JsonSerializable> {
  Hello311Query();

  @override
  final DocumentNode document = HELLO311_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO311_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello311$Query parse(Map<String, dynamic> json) =>
      Hello311$Query.fromJson(json);
}

final HELLO312_QUERY_DOCUMENT_OPERATION_NAME = 'hello312';
final HELLO312_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello312'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello312Query extends GraphQLQuery<Hello312$Query, JsonSerializable> {
  Hello312Query();

  @override
  final DocumentNode document = HELLO312_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO312_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello312$Query parse(Map<String, dynamic> json) =>
      Hello312$Query.fromJson(json);
}

final HELLO313_QUERY_DOCUMENT_OPERATION_NAME = 'hello313';
final HELLO313_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello313'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello313Query extends GraphQLQuery<Hello313$Query, JsonSerializable> {
  Hello313Query();

  @override
  final DocumentNode document = HELLO313_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO313_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello313$Query parse(Map<String, dynamic> json) =>
      Hello313$Query.fromJson(json);
}

final HELLO314_QUERY_DOCUMENT_OPERATION_NAME = 'hello314';
final HELLO314_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello314'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello314Query extends GraphQLQuery<Hello314$Query, JsonSerializable> {
  Hello314Query();

  @override
  final DocumentNode document = HELLO314_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO314_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello314$Query parse(Map<String, dynamic> json) =>
      Hello314$Query.fromJson(json);
}

final HELLO315_QUERY_DOCUMENT_OPERATION_NAME = 'hello315';
final HELLO315_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello315'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello315Query extends GraphQLQuery<Hello315$Query, JsonSerializable> {
  Hello315Query();

  @override
  final DocumentNode document = HELLO315_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO315_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello315$Query parse(Map<String, dynamic> json) =>
      Hello315$Query.fromJson(json);
}

final HELLO316_QUERY_DOCUMENT_OPERATION_NAME = 'hello316';
final HELLO316_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello316'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello316Query extends GraphQLQuery<Hello316$Query, JsonSerializable> {
  Hello316Query();

  @override
  final DocumentNode document = HELLO316_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO316_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello316$Query parse(Map<String, dynamic> json) =>
      Hello316$Query.fromJson(json);
}

final HELLO317_QUERY_DOCUMENT_OPERATION_NAME = 'hello317';
final HELLO317_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello317'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello317Query extends GraphQLQuery<Hello317$Query, JsonSerializable> {
  Hello317Query();

  @override
  final DocumentNode document = HELLO317_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO317_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello317$Query parse(Map<String, dynamic> json) =>
      Hello317$Query.fromJson(json);
}

final HELLO318_QUERY_DOCUMENT_OPERATION_NAME = 'hello318';
final HELLO318_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello318'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello318Query extends GraphQLQuery<Hello318$Query, JsonSerializable> {
  Hello318Query();

  @override
  final DocumentNode document = HELLO318_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO318_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello318$Query parse(Map<String, dynamic> json) =>
      Hello318$Query.fromJson(json);
}

final HELLO319_QUERY_DOCUMENT_OPERATION_NAME = 'hello319';
final HELLO319_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello319'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello319Query extends GraphQLQuery<Hello319$Query, JsonSerializable> {
  Hello319Query();

  @override
  final DocumentNode document = HELLO319_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO319_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello319$Query parse(Map<String, dynamic> json) =>
      Hello319$Query.fromJson(json);
}

final HELLO320_QUERY_DOCUMENT_OPERATION_NAME = 'hello320';
final HELLO320_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello320'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello320Query extends GraphQLQuery<Hello320$Query, JsonSerializable> {
  Hello320Query();

  @override
  final DocumentNode document = HELLO320_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO320_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello320$Query parse(Map<String, dynamic> json) =>
      Hello320$Query.fromJson(json);
}

final HELLO321_QUERY_DOCUMENT_OPERATION_NAME = 'hello321';
final HELLO321_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello321'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello321Query extends GraphQLQuery<Hello321$Query, JsonSerializable> {
  Hello321Query();

  @override
  final DocumentNode document = HELLO321_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO321_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello321$Query parse(Map<String, dynamic> json) =>
      Hello321$Query.fromJson(json);
}

final HELLO322_QUERY_DOCUMENT_OPERATION_NAME = 'hello322';
final HELLO322_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello322'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello322Query extends GraphQLQuery<Hello322$Query, JsonSerializable> {
  Hello322Query();

  @override
  final DocumentNode document = HELLO322_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO322_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello322$Query parse(Map<String, dynamic> json) =>
      Hello322$Query.fromJson(json);
}

final HELLO323_QUERY_DOCUMENT_OPERATION_NAME = 'hello323';
final HELLO323_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello323'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello323Query extends GraphQLQuery<Hello323$Query, JsonSerializable> {
  Hello323Query();

  @override
  final DocumentNode document = HELLO323_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO323_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello323$Query parse(Map<String, dynamic> json) =>
      Hello323$Query.fromJson(json);
}

final HELLO324_QUERY_DOCUMENT_OPERATION_NAME = 'hello324';
final HELLO324_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello324'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello324Query extends GraphQLQuery<Hello324$Query, JsonSerializable> {
  Hello324Query();

  @override
  final DocumentNode document = HELLO324_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO324_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello324$Query parse(Map<String, dynamic> json) =>
      Hello324$Query.fromJson(json);
}

final HELLO325_QUERY_DOCUMENT_OPERATION_NAME = 'hello325';
final HELLO325_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello325'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello325Query extends GraphQLQuery<Hello325$Query, JsonSerializable> {
  Hello325Query();

  @override
  final DocumentNode document = HELLO325_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO325_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello325$Query parse(Map<String, dynamic> json) =>
      Hello325$Query.fromJson(json);
}

final HELLO326_QUERY_DOCUMENT_OPERATION_NAME = 'hello326';
final HELLO326_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello326'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello326Query extends GraphQLQuery<Hello326$Query, JsonSerializable> {
  Hello326Query();

  @override
  final DocumentNode document = HELLO326_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO326_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello326$Query parse(Map<String, dynamic> json) =>
      Hello326$Query.fromJson(json);
}

final HELLO327_QUERY_DOCUMENT_OPERATION_NAME = 'hello327';
final HELLO327_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello327'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello327Query extends GraphQLQuery<Hello327$Query, JsonSerializable> {
  Hello327Query();

  @override
  final DocumentNode document = HELLO327_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO327_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello327$Query parse(Map<String, dynamic> json) =>
      Hello327$Query.fromJson(json);
}

final HELLO328_QUERY_DOCUMENT_OPERATION_NAME = 'hello328';
final HELLO328_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello328'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello328Query extends GraphQLQuery<Hello328$Query, JsonSerializable> {
  Hello328Query();

  @override
  final DocumentNode document = HELLO328_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO328_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello328$Query parse(Map<String, dynamic> json) =>
      Hello328$Query.fromJson(json);
}

final HELLO329_QUERY_DOCUMENT_OPERATION_NAME = 'hello329';
final HELLO329_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello329'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello329Query extends GraphQLQuery<Hello329$Query, JsonSerializable> {
  Hello329Query();

  @override
  final DocumentNode document = HELLO329_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO329_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello329$Query parse(Map<String, dynamic> json) =>
      Hello329$Query.fromJson(json);
}

final HELLO330_QUERY_DOCUMENT_OPERATION_NAME = 'hello330';
final HELLO330_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello330'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello330Query extends GraphQLQuery<Hello330$Query, JsonSerializable> {
  Hello330Query();

  @override
  final DocumentNode document = HELLO330_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO330_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello330$Query parse(Map<String, dynamic> json) =>
      Hello330$Query.fromJson(json);
}

final HELLO331_QUERY_DOCUMENT_OPERATION_NAME = 'hello331';
final HELLO331_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello331'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello331Query extends GraphQLQuery<Hello331$Query, JsonSerializable> {
  Hello331Query();

  @override
  final DocumentNode document = HELLO331_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO331_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello331$Query parse(Map<String, dynamic> json) =>
      Hello331$Query.fromJson(json);
}

final HELLO332_QUERY_DOCUMENT_OPERATION_NAME = 'hello332';
final HELLO332_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello332'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello332Query extends GraphQLQuery<Hello332$Query, JsonSerializable> {
  Hello332Query();

  @override
  final DocumentNode document = HELLO332_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO332_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello332$Query parse(Map<String, dynamic> json) =>
      Hello332$Query.fromJson(json);
}

final HELLO333_QUERY_DOCUMENT_OPERATION_NAME = 'hello333';
final HELLO333_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello333'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello333Query extends GraphQLQuery<Hello333$Query, JsonSerializable> {
  Hello333Query();

  @override
  final DocumentNode document = HELLO333_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO333_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello333$Query parse(Map<String, dynamic> json) =>
      Hello333$Query.fromJson(json);
}

final HELLO334_QUERY_DOCUMENT_OPERATION_NAME = 'hello334';
final HELLO334_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello334'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello334Query extends GraphQLQuery<Hello334$Query, JsonSerializable> {
  Hello334Query();

  @override
  final DocumentNode document = HELLO334_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO334_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello334$Query parse(Map<String, dynamic> json) =>
      Hello334$Query.fromJson(json);
}

final HELLO335_QUERY_DOCUMENT_OPERATION_NAME = 'hello335';
final HELLO335_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello335'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello335Query extends GraphQLQuery<Hello335$Query, JsonSerializable> {
  Hello335Query();

  @override
  final DocumentNode document = HELLO335_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO335_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello335$Query parse(Map<String, dynamic> json) =>
      Hello335$Query.fromJson(json);
}

final HELLO336_QUERY_DOCUMENT_OPERATION_NAME = 'hello336';
final HELLO336_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello336'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello336Query extends GraphQLQuery<Hello336$Query, JsonSerializable> {
  Hello336Query();

  @override
  final DocumentNode document = HELLO336_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO336_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello336$Query parse(Map<String, dynamic> json) =>
      Hello336$Query.fromJson(json);
}

final HELLO337_QUERY_DOCUMENT_OPERATION_NAME = 'hello337';
final HELLO337_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello337'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello337Query extends GraphQLQuery<Hello337$Query, JsonSerializable> {
  Hello337Query();

  @override
  final DocumentNode document = HELLO337_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO337_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello337$Query parse(Map<String, dynamic> json) =>
      Hello337$Query.fromJson(json);
}

final HELLO338_QUERY_DOCUMENT_OPERATION_NAME = 'hello338';
final HELLO338_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello338'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello338Query extends GraphQLQuery<Hello338$Query, JsonSerializable> {
  Hello338Query();

  @override
  final DocumentNode document = HELLO338_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO338_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello338$Query parse(Map<String, dynamic> json) =>
      Hello338$Query.fromJson(json);
}

final HELLO339_QUERY_DOCUMENT_OPERATION_NAME = 'hello339';
final HELLO339_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello339'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello339Query extends GraphQLQuery<Hello339$Query, JsonSerializable> {
  Hello339Query();

  @override
  final DocumentNode document = HELLO339_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO339_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello339$Query parse(Map<String, dynamic> json) =>
      Hello339$Query.fromJson(json);
}

final HELLO340_QUERY_DOCUMENT_OPERATION_NAME = 'hello340';
final HELLO340_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello340'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello340Query extends GraphQLQuery<Hello340$Query, JsonSerializable> {
  Hello340Query();

  @override
  final DocumentNode document = HELLO340_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO340_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello340$Query parse(Map<String, dynamic> json) =>
      Hello340$Query.fromJson(json);
}

final HELLO341_QUERY_DOCUMENT_OPERATION_NAME = 'hello341';
final HELLO341_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello341'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello341Query extends GraphQLQuery<Hello341$Query, JsonSerializable> {
  Hello341Query();

  @override
  final DocumentNode document = HELLO341_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO341_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello341$Query parse(Map<String, dynamic> json) =>
      Hello341$Query.fromJson(json);
}

final HELLO342_QUERY_DOCUMENT_OPERATION_NAME = 'hello342';
final HELLO342_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello342'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello342Query extends GraphQLQuery<Hello342$Query, JsonSerializable> {
  Hello342Query();

  @override
  final DocumentNode document = HELLO342_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO342_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello342$Query parse(Map<String, dynamic> json) =>
      Hello342$Query.fromJson(json);
}

final HELLO343_QUERY_DOCUMENT_OPERATION_NAME = 'hello343';
final HELLO343_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello343'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello343Query extends GraphQLQuery<Hello343$Query, JsonSerializable> {
  Hello343Query();

  @override
  final DocumentNode document = HELLO343_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO343_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello343$Query parse(Map<String, dynamic> json) =>
      Hello343$Query.fromJson(json);
}

final HELLO344_QUERY_DOCUMENT_OPERATION_NAME = 'hello344';
final HELLO344_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello344'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello344Query extends GraphQLQuery<Hello344$Query, JsonSerializable> {
  Hello344Query();

  @override
  final DocumentNode document = HELLO344_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO344_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello344$Query parse(Map<String, dynamic> json) =>
      Hello344$Query.fromJson(json);
}

final HELLO345_QUERY_DOCUMENT_OPERATION_NAME = 'hello345';
final HELLO345_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello345'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello345Query extends GraphQLQuery<Hello345$Query, JsonSerializable> {
  Hello345Query();

  @override
  final DocumentNode document = HELLO345_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO345_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello345$Query parse(Map<String, dynamic> json) =>
      Hello345$Query.fromJson(json);
}

final HELLO346_QUERY_DOCUMENT_OPERATION_NAME = 'hello346';
final HELLO346_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello346'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello346Query extends GraphQLQuery<Hello346$Query, JsonSerializable> {
  Hello346Query();

  @override
  final DocumentNode document = HELLO346_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO346_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello346$Query parse(Map<String, dynamic> json) =>
      Hello346$Query.fromJson(json);
}

final HELLO347_QUERY_DOCUMENT_OPERATION_NAME = 'hello347';
final HELLO347_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello347'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello347Query extends GraphQLQuery<Hello347$Query, JsonSerializable> {
  Hello347Query();

  @override
  final DocumentNode document = HELLO347_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO347_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello347$Query parse(Map<String, dynamic> json) =>
      Hello347$Query.fromJson(json);
}

final HELLO348_QUERY_DOCUMENT_OPERATION_NAME = 'hello348';
final HELLO348_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello348'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello348Query extends GraphQLQuery<Hello348$Query, JsonSerializable> {
  Hello348Query();

  @override
  final DocumentNode document = HELLO348_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO348_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello348$Query parse(Map<String, dynamic> json) =>
      Hello348$Query.fromJson(json);
}

final HELLO349_QUERY_DOCUMENT_OPERATION_NAME = 'hello349';
final HELLO349_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello349'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello349Query extends GraphQLQuery<Hello349$Query, JsonSerializable> {
  Hello349Query();

  @override
  final DocumentNode document = HELLO349_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO349_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello349$Query parse(Map<String, dynamic> json) =>
      Hello349$Query.fromJson(json);
}

final HELLO350_QUERY_DOCUMENT_OPERATION_NAME = 'hello350';
final HELLO350_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello350'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello350Query extends GraphQLQuery<Hello350$Query, JsonSerializable> {
  Hello350Query();

  @override
  final DocumentNode document = HELLO350_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO350_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello350$Query parse(Map<String, dynamic> json) =>
      Hello350$Query.fromJson(json);
}

final HELLO351_QUERY_DOCUMENT_OPERATION_NAME = 'hello351';
final HELLO351_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello351'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello351Query extends GraphQLQuery<Hello351$Query, JsonSerializable> {
  Hello351Query();

  @override
  final DocumentNode document = HELLO351_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO351_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello351$Query parse(Map<String, dynamic> json) =>
      Hello351$Query.fromJson(json);
}

final HELLO352_QUERY_DOCUMENT_OPERATION_NAME = 'hello352';
final HELLO352_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello352'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello352Query extends GraphQLQuery<Hello352$Query, JsonSerializable> {
  Hello352Query();

  @override
  final DocumentNode document = HELLO352_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO352_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello352$Query parse(Map<String, dynamic> json) =>
      Hello352$Query.fromJson(json);
}

final HELLO353_QUERY_DOCUMENT_OPERATION_NAME = 'hello353';
final HELLO353_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello353'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello353Query extends GraphQLQuery<Hello353$Query, JsonSerializable> {
  Hello353Query();

  @override
  final DocumentNode document = HELLO353_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO353_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello353$Query parse(Map<String, dynamic> json) =>
      Hello353$Query.fromJson(json);
}

final HELLO354_QUERY_DOCUMENT_OPERATION_NAME = 'hello354';
final HELLO354_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello354'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello354Query extends GraphQLQuery<Hello354$Query, JsonSerializable> {
  Hello354Query();

  @override
  final DocumentNode document = HELLO354_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO354_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello354$Query parse(Map<String, dynamic> json) =>
      Hello354$Query.fromJson(json);
}

final HELLO355_QUERY_DOCUMENT_OPERATION_NAME = 'hello355';
final HELLO355_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello355'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello355Query extends GraphQLQuery<Hello355$Query, JsonSerializable> {
  Hello355Query();

  @override
  final DocumentNode document = HELLO355_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO355_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello355$Query parse(Map<String, dynamic> json) =>
      Hello355$Query.fromJson(json);
}

final HELLO356_QUERY_DOCUMENT_OPERATION_NAME = 'hello356';
final HELLO356_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello356'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello356Query extends GraphQLQuery<Hello356$Query, JsonSerializable> {
  Hello356Query();

  @override
  final DocumentNode document = HELLO356_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO356_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello356$Query parse(Map<String, dynamic> json) =>
      Hello356$Query.fromJson(json);
}

final HELLO357_QUERY_DOCUMENT_OPERATION_NAME = 'hello357';
final HELLO357_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello357'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello357Query extends GraphQLQuery<Hello357$Query, JsonSerializable> {
  Hello357Query();

  @override
  final DocumentNode document = HELLO357_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO357_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello357$Query parse(Map<String, dynamic> json) =>
      Hello357$Query.fromJson(json);
}

final HELLO358_QUERY_DOCUMENT_OPERATION_NAME = 'hello358';
final HELLO358_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello358'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello358Query extends GraphQLQuery<Hello358$Query, JsonSerializable> {
  Hello358Query();

  @override
  final DocumentNode document = HELLO358_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO358_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello358$Query parse(Map<String, dynamic> json) =>
      Hello358$Query.fromJson(json);
}

final HELLO359_QUERY_DOCUMENT_OPERATION_NAME = 'hello359';
final HELLO359_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello359'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello359Query extends GraphQLQuery<Hello359$Query, JsonSerializable> {
  Hello359Query();

  @override
  final DocumentNode document = HELLO359_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO359_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello359$Query parse(Map<String, dynamic> json) =>
      Hello359$Query.fromJson(json);
}

final HELLO360_QUERY_DOCUMENT_OPERATION_NAME = 'hello360';
final HELLO360_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello360'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello360Query extends GraphQLQuery<Hello360$Query, JsonSerializable> {
  Hello360Query();

  @override
  final DocumentNode document = HELLO360_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO360_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello360$Query parse(Map<String, dynamic> json) =>
      Hello360$Query.fromJson(json);
}

final HELLO361_QUERY_DOCUMENT_OPERATION_NAME = 'hello361';
final HELLO361_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello361'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello361Query extends GraphQLQuery<Hello361$Query, JsonSerializable> {
  Hello361Query();

  @override
  final DocumentNode document = HELLO361_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO361_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello361$Query parse(Map<String, dynamic> json) =>
      Hello361$Query.fromJson(json);
}

final HELLO362_QUERY_DOCUMENT_OPERATION_NAME = 'hello362';
final HELLO362_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello362'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello362Query extends GraphQLQuery<Hello362$Query, JsonSerializable> {
  Hello362Query();

  @override
  final DocumentNode document = HELLO362_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO362_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello362$Query parse(Map<String, dynamic> json) =>
      Hello362$Query.fromJson(json);
}

final HELLO363_QUERY_DOCUMENT_OPERATION_NAME = 'hello363';
final HELLO363_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello363'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello363Query extends GraphQLQuery<Hello363$Query, JsonSerializable> {
  Hello363Query();

  @override
  final DocumentNode document = HELLO363_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO363_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello363$Query parse(Map<String, dynamic> json) =>
      Hello363$Query.fromJson(json);
}

final HELLO364_QUERY_DOCUMENT_OPERATION_NAME = 'hello364';
final HELLO364_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello364'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello364Query extends GraphQLQuery<Hello364$Query, JsonSerializable> {
  Hello364Query();

  @override
  final DocumentNode document = HELLO364_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO364_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello364$Query parse(Map<String, dynamic> json) =>
      Hello364$Query.fromJson(json);
}

final HELLO365_QUERY_DOCUMENT_OPERATION_NAME = 'hello365';
final HELLO365_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello365'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello365Query extends GraphQLQuery<Hello365$Query, JsonSerializable> {
  Hello365Query();

  @override
  final DocumentNode document = HELLO365_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO365_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello365$Query parse(Map<String, dynamic> json) =>
      Hello365$Query.fromJson(json);
}

final HELLO366_QUERY_DOCUMENT_OPERATION_NAME = 'hello366';
final HELLO366_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello366'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello366Query extends GraphQLQuery<Hello366$Query, JsonSerializable> {
  Hello366Query();

  @override
  final DocumentNode document = HELLO366_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO366_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello366$Query parse(Map<String, dynamic> json) =>
      Hello366$Query.fromJson(json);
}

final HELLO367_QUERY_DOCUMENT_OPERATION_NAME = 'hello367';
final HELLO367_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello367'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello367Query extends GraphQLQuery<Hello367$Query, JsonSerializable> {
  Hello367Query();

  @override
  final DocumentNode document = HELLO367_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO367_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello367$Query parse(Map<String, dynamic> json) =>
      Hello367$Query.fromJson(json);
}

final HELLO368_QUERY_DOCUMENT_OPERATION_NAME = 'hello368';
final HELLO368_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello368'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello368Query extends GraphQLQuery<Hello368$Query, JsonSerializable> {
  Hello368Query();

  @override
  final DocumentNode document = HELLO368_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO368_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello368$Query parse(Map<String, dynamic> json) =>
      Hello368$Query.fromJson(json);
}

final HELLO369_QUERY_DOCUMENT_OPERATION_NAME = 'hello369';
final HELLO369_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello369'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello369Query extends GraphQLQuery<Hello369$Query, JsonSerializable> {
  Hello369Query();

  @override
  final DocumentNode document = HELLO369_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO369_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello369$Query parse(Map<String, dynamic> json) =>
      Hello369$Query.fromJson(json);
}

final HELLO370_QUERY_DOCUMENT_OPERATION_NAME = 'hello370';
final HELLO370_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello370'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello370Query extends GraphQLQuery<Hello370$Query, JsonSerializable> {
  Hello370Query();

  @override
  final DocumentNode document = HELLO370_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO370_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello370$Query parse(Map<String, dynamic> json) =>
      Hello370$Query.fromJson(json);
}

final HELLO371_QUERY_DOCUMENT_OPERATION_NAME = 'hello371';
final HELLO371_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello371'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello371Query extends GraphQLQuery<Hello371$Query, JsonSerializable> {
  Hello371Query();

  @override
  final DocumentNode document = HELLO371_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO371_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello371$Query parse(Map<String, dynamic> json) =>
      Hello371$Query.fromJson(json);
}

final HELLO372_QUERY_DOCUMENT_OPERATION_NAME = 'hello372';
final HELLO372_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello372'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello372Query extends GraphQLQuery<Hello372$Query, JsonSerializable> {
  Hello372Query();

  @override
  final DocumentNode document = HELLO372_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO372_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello372$Query parse(Map<String, dynamic> json) =>
      Hello372$Query.fromJson(json);
}

final HELLO373_QUERY_DOCUMENT_OPERATION_NAME = 'hello373';
final HELLO373_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello373'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello373Query extends GraphQLQuery<Hello373$Query, JsonSerializable> {
  Hello373Query();

  @override
  final DocumentNode document = HELLO373_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO373_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello373$Query parse(Map<String, dynamic> json) =>
      Hello373$Query.fromJson(json);
}

final HELLO374_QUERY_DOCUMENT_OPERATION_NAME = 'hello374';
final HELLO374_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello374'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello374Query extends GraphQLQuery<Hello374$Query, JsonSerializable> {
  Hello374Query();

  @override
  final DocumentNode document = HELLO374_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO374_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello374$Query parse(Map<String, dynamic> json) =>
      Hello374$Query.fromJson(json);
}

final HELLO375_QUERY_DOCUMENT_OPERATION_NAME = 'hello375';
final HELLO375_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello375'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello375Query extends GraphQLQuery<Hello375$Query, JsonSerializable> {
  Hello375Query();

  @override
  final DocumentNode document = HELLO375_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO375_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello375$Query parse(Map<String, dynamic> json) =>
      Hello375$Query.fromJson(json);
}

final HELLO376_QUERY_DOCUMENT_OPERATION_NAME = 'hello376';
final HELLO376_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello376'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello376Query extends GraphQLQuery<Hello376$Query, JsonSerializable> {
  Hello376Query();

  @override
  final DocumentNode document = HELLO376_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO376_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello376$Query parse(Map<String, dynamic> json) =>
      Hello376$Query.fromJson(json);
}

final HELLO377_QUERY_DOCUMENT_OPERATION_NAME = 'hello377';
final HELLO377_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello377'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello377Query extends GraphQLQuery<Hello377$Query, JsonSerializable> {
  Hello377Query();

  @override
  final DocumentNode document = HELLO377_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO377_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello377$Query parse(Map<String, dynamic> json) =>
      Hello377$Query.fromJson(json);
}

final HELLO378_QUERY_DOCUMENT_OPERATION_NAME = 'hello378';
final HELLO378_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello378'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello378Query extends GraphQLQuery<Hello378$Query, JsonSerializable> {
  Hello378Query();

  @override
  final DocumentNode document = HELLO378_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO378_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello378$Query parse(Map<String, dynamic> json) =>
      Hello378$Query.fromJson(json);
}

final HELLO379_QUERY_DOCUMENT_OPERATION_NAME = 'hello379';
final HELLO379_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello379'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello379Query extends GraphQLQuery<Hello379$Query, JsonSerializable> {
  Hello379Query();

  @override
  final DocumentNode document = HELLO379_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO379_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello379$Query parse(Map<String, dynamic> json) =>
      Hello379$Query.fromJson(json);
}

final HELLO380_QUERY_DOCUMENT_OPERATION_NAME = 'hello380';
final HELLO380_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello380'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello380Query extends GraphQLQuery<Hello380$Query, JsonSerializable> {
  Hello380Query();

  @override
  final DocumentNode document = HELLO380_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO380_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello380$Query parse(Map<String, dynamic> json) =>
      Hello380$Query.fromJson(json);
}

final HELLO381_QUERY_DOCUMENT_OPERATION_NAME = 'hello381';
final HELLO381_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello381'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello381Query extends GraphQLQuery<Hello381$Query, JsonSerializable> {
  Hello381Query();

  @override
  final DocumentNode document = HELLO381_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO381_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello381$Query parse(Map<String, dynamic> json) =>
      Hello381$Query.fromJson(json);
}

final HELLO382_QUERY_DOCUMENT_OPERATION_NAME = 'hello382';
final HELLO382_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello382'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello382Query extends GraphQLQuery<Hello382$Query, JsonSerializable> {
  Hello382Query();

  @override
  final DocumentNode document = HELLO382_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO382_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello382$Query parse(Map<String, dynamic> json) =>
      Hello382$Query.fromJson(json);
}

final HELLO383_QUERY_DOCUMENT_OPERATION_NAME = 'hello383';
final HELLO383_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello383'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello383Query extends GraphQLQuery<Hello383$Query, JsonSerializable> {
  Hello383Query();

  @override
  final DocumentNode document = HELLO383_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO383_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello383$Query parse(Map<String, dynamic> json) =>
      Hello383$Query.fromJson(json);
}

final HELLO384_QUERY_DOCUMENT_OPERATION_NAME = 'hello384';
final HELLO384_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello384'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello384Query extends GraphQLQuery<Hello384$Query, JsonSerializable> {
  Hello384Query();

  @override
  final DocumentNode document = HELLO384_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO384_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello384$Query parse(Map<String, dynamic> json) =>
      Hello384$Query.fromJson(json);
}

final HELLO385_QUERY_DOCUMENT_OPERATION_NAME = 'hello385';
final HELLO385_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello385'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello385Query extends GraphQLQuery<Hello385$Query, JsonSerializable> {
  Hello385Query();

  @override
  final DocumentNode document = HELLO385_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO385_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello385$Query parse(Map<String, dynamic> json) =>
      Hello385$Query.fromJson(json);
}

final HELLO386_QUERY_DOCUMENT_OPERATION_NAME = 'hello386';
final HELLO386_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello386'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello386Query extends GraphQLQuery<Hello386$Query, JsonSerializable> {
  Hello386Query();

  @override
  final DocumentNode document = HELLO386_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO386_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello386$Query parse(Map<String, dynamic> json) =>
      Hello386$Query.fromJson(json);
}

final HELLO387_QUERY_DOCUMENT_OPERATION_NAME = 'hello387';
final HELLO387_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello387'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello387Query extends GraphQLQuery<Hello387$Query, JsonSerializable> {
  Hello387Query();

  @override
  final DocumentNode document = HELLO387_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO387_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello387$Query parse(Map<String, dynamic> json) =>
      Hello387$Query.fromJson(json);
}

final HELLO388_QUERY_DOCUMENT_OPERATION_NAME = 'hello388';
final HELLO388_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello388'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello388Query extends GraphQLQuery<Hello388$Query, JsonSerializable> {
  Hello388Query();

  @override
  final DocumentNode document = HELLO388_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO388_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello388$Query parse(Map<String, dynamic> json) =>
      Hello388$Query.fromJson(json);
}

final HELLO389_QUERY_DOCUMENT_OPERATION_NAME = 'hello389';
final HELLO389_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello389'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello389Query extends GraphQLQuery<Hello389$Query, JsonSerializable> {
  Hello389Query();

  @override
  final DocumentNode document = HELLO389_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO389_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello389$Query parse(Map<String, dynamic> json) =>
      Hello389$Query.fromJson(json);
}

final HELLO390_QUERY_DOCUMENT_OPERATION_NAME = 'hello390';
final HELLO390_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello390'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello390Query extends GraphQLQuery<Hello390$Query, JsonSerializable> {
  Hello390Query();

  @override
  final DocumentNode document = HELLO390_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO390_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello390$Query parse(Map<String, dynamic> json) =>
      Hello390$Query.fromJson(json);
}

final HELLO391_QUERY_DOCUMENT_OPERATION_NAME = 'hello391';
final HELLO391_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello391'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello391Query extends GraphQLQuery<Hello391$Query, JsonSerializable> {
  Hello391Query();

  @override
  final DocumentNode document = HELLO391_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO391_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello391$Query parse(Map<String, dynamic> json) =>
      Hello391$Query.fromJson(json);
}

final HELLO392_QUERY_DOCUMENT_OPERATION_NAME = 'hello392';
final HELLO392_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello392'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello392Query extends GraphQLQuery<Hello392$Query, JsonSerializable> {
  Hello392Query();

  @override
  final DocumentNode document = HELLO392_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO392_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello392$Query parse(Map<String, dynamic> json) =>
      Hello392$Query.fromJson(json);
}

final HELLO393_QUERY_DOCUMENT_OPERATION_NAME = 'hello393';
final HELLO393_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello393'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello393Query extends GraphQLQuery<Hello393$Query, JsonSerializable> {
  Hello393Query();

  @override
  final DocumentNode document = HELLO393_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO393_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello393$Query parse(Map<String, dynamic> json) =>
      Hello393$Query.fromJson(json);
}

final HELLO394_QUERY_DOCUMENT_OPERATION_NAME = 'hello394';
final HELLO394_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello394'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello394Query extends GraphQLQuery<Hello394$Query, JsonSerializable> {
  Hello394Query();

  @override
  final DocumentNode document = HELLO394_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO394_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello394$Query parse(Map<String, dynamic> json) =>
      Hello394$Query.fromJson(json);
}

final HELLO395_QUERY_DOCUMENT_OPERATION_NAME = 'hello395';
final HELLO395_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello395'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello395Query extends GraphQLQuery<Hello395$Query, JsonSerializable> {
  Hello395Query();

  @override
  final DocumentNode document = HELLO395_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO395_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello395$Query parse(Map<String, dynamic> json) =>
      Hello395$Query.fromJson(json);
}

final HELLO396_QUERY_DOCUMENT_OPERATION_NAME = 'hello396';
final HELLO396_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello396'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello396Query extends GraphQLQuery<Hello396$Query, JsonSerializable> {
  Hello396Query();

  @override
  final DocumentNode document = HELLO396_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO396_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello396$Query parse(Map<String, dynamic> json) =>
      Hello396$Query.fromJson(json);
}

final HELLO397_QUERY_DOCUMENT_OPERATION_NAME = 'hello397';
final HELLO397_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello397'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello397Query extends GraphQLQuery<Hello397$Query, JsonSerializable> {
  Hello397Query();

  @override
  final DocumentNode document = HELLO397_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO397_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello397$Query parse(Map<String, dynamic> json) =>
      Hello397$Query.fromJson(json);
}

final HELLO398_QUERY_DOCUMENT_OPERATION_NAME = 'hello398';
final HELLO398_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello398'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello398Query extends GraphQLQuery<Hello398$Query, JsonSerializable> {
  Hello398Query();

  @override
  final DocumentNode document = HELLO398_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO398_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello398$Query parse(Map<String, dynamic> json) =>
      Hello398$Query.fromJson(json);
}

final HELLO399_QUERY_DOCUMENT_OPERATION_NAME = 'hello399';
final HELLO399_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello399'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello399Query extends GraphQLQuery<Hello399$Query, JsonSerializable> {
  Hello399Query();

  @override
  final DocumentNode document = HELLO399_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO399_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello399$Query parse(Map<String, dynamic> json) =>
      Hello399$Query.fromJson(json);
}

final HELLO400_QUERY_DOCUMENT_OPERATION_NAME = 'hello400';
final HELLO400_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello400'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello400Query extends GraphQLQuery<Hello400$Query, JsonSerializable> {
  Hello400Query();

  @override
  final DocumentNode document = HELLO400_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO400_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello400$Query parse(Map<String, dynamic> json) =>
      Hello400$Query.fromJson(json);
}

final HELLO401_QUERY_DOCUMENT_OPERATION_NAME = 'hello401';
final HELLO401_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello401'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello401Query extends GraphQLQuery<Hello401$Query, JsonSerializable> {
  Hello401Query();

  @override
  final DocumentNode document = HELLO401_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO401_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello401$Query parse(Map<String, dynamic> json) =>
      Hello401$Query.fromJson(json);
}

final HELLO402_QUERY_DOCUMENT_OPERATION_NAME = 'hello402';
final HELLO402_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello402'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello402Query extends GraphQLQuery<Hello402$Query, JsonSerializable> {
  Hello402Query();

  @override
  final DocumentNode document = HELLO402_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO402_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello402$Query parse(Map<String, dynamic> json) =>
      Hello402$Query.fromJson(json);
}

final HELLO403_QUERY_DOCUMENT_OPERATION_NAME = 'hello403';
final HELLO403_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello403'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello403Query extends GraphQLQuery<Hello403$Query, JsonSerializable> {
  Hello403Query();

  @override
  final DocumentNode document = HELLO403_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO403_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello403$Query parse(Map<String, dynamic> json) =>
      Hello403$Query.fromJson(json);
}

final HELLO404_QUERY_DOCUMENT_OPERATION_NAME = 'hello404';
final HELLO404_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello404'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello404Query extends GraphQLQuery<Hello404$Query, JsonSerializable> {
  Hello404Query();

  @override
  final DocumentNode document = HELLO404_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO404_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello404$Query parse(Map<String, dynamic> json) =>
      Hello404$Query.fromJson(json);
}

final HELLO405_QUERY_DOCUMENT_OPERATION_NAME = 'hello405';
final HELLO405_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello405'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello405Query extends GraphQLQuery<Hello405$Query, JsonSerializable> {
  Hello405Query();

  @override
  final DocumentNode document = HELLO405_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO405_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello405$Query parse(Map<String, dynamic> json) =>
      Hello405$Query.fromJson(json);
}

final HELLO406_QUERY_DOCUMENT_OPERATION_NAME = 'hello406';
final HELLO406_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello406'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello406Query extends GraphQLQuery<Hello406$Query, JsonSerializable> {
  Hello406Query();

  @override
  final DocumentNode document = HELLO406_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO406_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello406$Query parse(Map<String, dynamic> json) =>
      Hello406$Query.fromJson(json);
}

final HELLO407_QUERY_DOCUMENT_OPERATION_NAME = 'hello407';
final HELLO407_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello407'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello407Query extends GraphQLQuery<Hello407$Query, JsonSerializable> {
  Hello407Query();

  @override
  final DocumentNode document = HELLO407_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO407_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello407$Query parse(Map<String, dynamic> json) =>
      Hello407$Query.fromJson(json);
}

final HELLO408_QUERY_DOCUMENT_OPERATION_NAME = 'hello408';
final HELLO408_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello408'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello408Query extends GraphQLQuery<Hello408$Query, JsonSerializable> {
  Hello408Query();

  @override
  final DocumentNode document = HELLO408_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO408_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello408$Query parse(Map<String, dynamic> json) =>
      Hello408$Query.fromJson(json);
}

final HELLO409_QUERY_DOCUMENT_OPERATION_NAME = 'hello409';
final HELLO409_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello409'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello409Query extends GraphQLQuery<Hello409$Query, JsonSerializable> {
  Hello409Query();

  @override
  final DocumentNode document = HELLO409_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO409_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello409$Query parse(Map<String, dynamic> json) =>
      Hello409$Query.fromJson(json);
}

final HELLO410_QUERY_DOCUMENT_OPERATION_NAME = 'hello410';
final HELLO410_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello410'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello410Query extends GraphQLQuery<Hello410$Query, JsonSerializable> {
  Hello410Query();

  @override
  final DocumentNode document = HELLO410_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO410_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello410$Query parse(Map<String, dynamic> json) =>
      Hello410$Query.fromJson(json);
}

final HELLO411_QUERY_DOCUMENT_OPERATION_NAME = 'hello411';
final HELLO411_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello411'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello411Query extends GraphQLQuery<Hello411$Query, JsonSerializable> {
  Hello411Query();

  @override
  final DocumentNode document = HELLO411_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO411_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello411$Query parse(Map<String, dynamic> json) =>
      Hello411$Query.fromJson(json);
}

final HELLO412_QUERY_DOCUMENT_OPERATION_NAME = 'hello412';
final HELLO412_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello412'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello412Query extends GraphQLQuery<Hello412$Query, JsonSerializable> {
  Hello412Query();

  @override
  final DocumentNode document = HELLO412_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO412_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello412$Query parse(Map<String, dynamic> json) =>
      Hello412$Query.fromJson(json);
}

final HELLO413_QUERY_DOCUMENT_OPERATION_NAME = 'hello413';
final HELLO413_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello413'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello413Query extends GraphQLQuery<Hello413$Query, JsonSerializable> {
  Hello413Query();

  @override
  final DocumentNode document = HELLO413_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO413_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello413$Query parse(Map<String, dynamic> json) =>
      Hello413$Query.fromJson(json);
}

final HELLO414_QUERY_DOCUMENT_OPERATION_NAME = 'hello414';
final HELLO414_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello414'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello414Query extends GraphQLQuery<Hello414$Query, JsonSerializable> {
  Hello414Query();

  @override
  final DocumentNode document = HELLO414_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO414_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello414$Query parse(Map<String, dynamic> json) =>
      Hello414$Query.fromJson(json);
}

final HELLO415_QUERY_DOCUMENT_OPERATION_NAME = 'hello415';
final HELLO415_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello415'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello415Query extends GraphQLQuery<Hello415$Query, JsonSerializable> {
  Hello415Query();

  @override
  final DocumentNode document = HELLO415_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO415_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello415$Query parse(Map<String, dynamic> json) =>
      Hello415$Query.fromJson(json);
}

final HELLO416_QUERY_DOCUMENT_OPERATION_NAME = 'hello416';
final HELLO416_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello416'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello416Query extends GraphQLQuery<Hello416$Query, JsonSerializable> {
  Hello416Query();

  @override
  final DocumentNode document = HELLO416_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO416_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello416$Query parse(Map<String, dynamic> json) =>
      Hello416$Query.fromJson(json);
}

final HELLO417_QUERY_DOCUMENT_OPERATION_NAME = 'hello417';
final HELLO417_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello417'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello417Query extends GraphQLQuery<Hello417$Query, JsonSerializable> {
  Hello417Query();

  @override
  final DocumentNode document = HELLO417_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO417_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello417$Query parse(Map<String, dynamic> json) =>
      Hello417$Query.fromJson(json);
}

final HELLO418_QUERY_DOCUMENT_OPERATION_NAME = 'hello418';
final HELLO418_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello418'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello418Query extends GraphQLQuery<Hello418$Query, JsonSerializable> {
  Hello418Query();

  @override
  final DocumentNode document = HELLO418_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO418_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello418$Query parse(Map<String, dynamic> json) =>
      Hello418$Query.fromJson(json);
}

final HELLO419_QUERY_DOCUMENT_OPERATION_NAME = 'hello419';
final HELLO419_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello419'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello419Query extends GraphQLQuery<Hello419$Query, JsonSerializable> {
  Hello419Query();

  @override
  final DocumentNode document = HELLO419_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO419_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello419$Query parse(Map<String, dynamic> json) =>
      Hello419$Query.fromJson(json);
}

final HELLO420_QUERY_DOCUMENT_OPERATION_NAME = 'hello420';
final HELLO420_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello420'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello420Query extends GraphQLQuery<Hello420$Query, JsonSerializable> {
  Hello420Query();

  @override
  final DocumentNode document = HELLO420_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO420_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello420$Query parse(Map<String, dynamic> json) =>
      Hello420$Query.fromJson(json);
}

final HELLO421_QUERY_DOCUMENT_OPERATION_NAME = 'hello421';
final HELLO421_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello421'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello421Query extends GraphQLQuery<Hello421$Query, JsonSerializable> {
  Hello421Query();

  @override
  final DocumentNode document = HELLO421_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO421_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello421$Query parse(Map<String, dynamic> json) =>
      Hello421$Query.fromJson(json);
}

final HELLO422_QUERY_DOCUMENT_OPERATION_NAME = 'hello422';
final HELLO422_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello422'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello422Query extends GraphQLQuery<Hello422$Query, JsonSerializable> {
  Hello422Query();

  @override
  final DocumentNode document = HELLO422_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO422_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello422$Query parse(Map<String, dynamic> json) =>
      Hello422$Query.fromJson(json);
}

final HELLO423_QUERY_DOCUMENT_OPERATION_NAME = 'hello423';
final HELLO423_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello423'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello423Query extends GraphQLQuery<Hello423$Query, JsonSerializable> {
  Hello423Query();

  @override
  final DocumentNode document = HELLO423_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO423_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello423$Query parse(Map<String, dynamic> json) =>
      Hello423$Query.fromJson(json);
}

final HELLO424_QUERY_DOCUMENT_OPERATION_NAME = 'hello424';
final HELLO424_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello424'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello424Query extends GraphQLQuery<Hello424$Query, JsonSerializable> {
  Hello424Query();

  @override
  final DocumentNode document = HELLO424_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO424_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello424$Query parse(Map<String, dynamic> json) =>
      Hello424$Query.fromJson(json);
}

final HELLO425_QUERY_DOCUMENT_OPERATION_NAME = 'hello425';
final HELLO425_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello425'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello425Query extends GraphQLQuery<Hello425$Query, JsonSerializable> {
  Hello425Query();

  @override
  final DocumentNode document = HELLO425_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO425_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello425$Query parse(Map<String, dynamic> json) =>
      Hello425$Query.fromJson(json);
}

final HELLO426_QUERY_DOCUMENT_OPERATION_NAME = 'hello426';
final HELLO426_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello426'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello426Query extends GraphQLQuery<Hello426$Query, JsonSerializable> {
  Hello426Query();

  @override
  final DocumentNode document = HELLO426_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO426_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello426$Query parse(Map<String, dynamic> json) =>
      Hello426$Query.fromJson(json);
}

final HELLO427_QUERY_DOCUMENT_OPERATION_NAME = 'hello427';
final HELLO427_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello427'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello427Query extends GraphQLQuery<Hello427$Query, JsonSerializable> {
  Hello427Query();

  @override
  final DocumentNode document = HELLO427_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO427_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello427$Query parse(Map<String, dynamic> json) =>
      Hello427$Query.fromJson(json);
}

final HELLO428_QUERY_DOCUMENT_OPERATION_NAME = 'hello428';
final HELLO428_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello428'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello428Query extends GraphQLQuery<Hello428$Query, JsonSerializable> {
  Hello428Query();

  @override
  final DocumentNode document = HELLO428_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO428_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello428$Query parse(Map<String, dynamic> json) =>
      Hello428$Query.fromJson(json);
}

final HELLO429_QUERY_DOCUMENT_OPERATION_NAME = 'hello429';
final HELLO429_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello429'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello429Query extends GraphQLQuery<Hello429$Query, JsonSerializable> {
  Hello429Query();

  @override
  final DocumentNode document = HELLO429_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO429_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello429$Query parse(Map<String, dynamic> json) =>
      Hello429$Query.fromJson(json);
}

final HELLO430_QUERY_DOCUMENT_OPERATION_NAME = 'hello430';
final HELLO430_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello430'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello430Query extends GraphQLQuery<Hello430$Query, JsonSerializable> {
  Hello430Query();

  @override
  final DocumentNode document = HELLO430_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO430_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello430$Query parse(Map<String, dynamic> json) =>
      Hello430$Query.fromJson(json);
}

final HELLO431_QUERY_DOCUMENT_OPERATION_NAME = 'hello431';
final HELLO431_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello431'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello431Query extends GraphQLQuery<Hello431$Query, JsonSerializable> {
  Hello431Query();

  @override
  final DocumentNode document = HELLO431_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO431_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello431$Query parse(Map<String, dynamic> json) =>
      Hello431$Query.fromJson(json);
}

final HELLO432_QUERY_DOCUMENT_OPERATION_NAME = 'hello432';
final HELLO432_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello432'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello432Query extends GraphQLQuery<Hello432$Query, JsonSerializable> {
  Hello432Query();

  @override
  final DocumentNode document = HELLO432_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO432_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello432$Query parse(Map<String, dynamic> json) =>
      Hello432$Query.fromJson(json);
}

final HELLO433_QUERY_DOCUMENT_OPERATION_NAME = 'hello433';
final HELLO433_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello433'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello433Query extends GraphQLQuery<Hello433$Query, JsonSerializable> {
  Hello433Query();

  @override
  final DocumentNode document = HELLO433_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO433_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello433$Query parse(Map<String, dynamic> json) =>
      Hello433$Query.fromJson(json);
}

final HELLO434_QUERY_DOCUMENT_OPERATION_NAME = 'hello434';
final HELLO434_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello434'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello434Query extends GraphQLQuery<Hello434$Query, JsonSerializable> {
  Hello434Query();

  @override
  final DocumentNode document = HELLO434_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO434_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello434$Query parse(Map<String, dynamic> json) =>
      Hello434$Query.fromJson(json);
}

final HELLO435_QUERY_DOCUMENT_OPERATION_NAME = 'hello435';
final HELLO435_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello435'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello435Query extends GraphQLQuery<Hello435$Query, JsonSerializable> {
  Hello435Query();

  @override
  final DocumentNode document = HELLO435_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO435_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello435$Query parse(Map<String, dynamic> json) =>
      Hello435$Query.fromJson(json);
}

final HELLO436_QUERY_DOCUMENT_OPERATION_NAME = 'hello436';
final HELLO436_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello436'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello436Query extends GraphQLQuery<Hello436$Query, JsonSerializable> {
  Hello436Query();

  @override
  final DocumentNode document = HELLO436_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO436_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello436$Query parse(Map<String, dynamic> json) =>
      Hello436$Query.fromJson(json);
}

final HELLO437_QUERY_DOCUMENT_OPERATION_NAME = 'hello437';
final HELLO437_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello437'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello437Query extends GraphQLQuery<Hello437$Query, JsonSerializable> {
  Hello437Query();

  @override
  final DocumentNode document = HELLO437_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO437_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello437$Query parse(Map<String, dynamic> json) =>
      Hello437$Query.fromJson(json);
}

final HELLO438_QUERY_DOCUMENT_OPERATION_NAME = 'hello438';
final HELLO438_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello438'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello438Query extends GraphQLQuery<Hello438$Query, JsonSerializable> {
  Hello438Query();

  @override
  final DocumentNode document = HELLO438_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO438_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello438$Query parse(Map<String, dynamic> json) =>
      Hello438$Query.fromJson(json);
}

final HELLO439_QUERY_DOCUMENT_OPERATION_NAME = 'hello439';
final HELLO439_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello439'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello439Query extends GraphQLQuery<Hello439$Query, JsonSerializable> {
  Hello439Query();

  @override
  final DocumentNode document = HELLO439_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO439_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello439$Query parse(Map<String, dynamic> json) =>
      Hello439$Query.fromJson(json);
}

final HELLO440_QUERY_DOCUMENT_OPERATION_NAME = 'hello440';
final HELLO440_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello440'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello440Query extends GraphQLQuery<Hello440$Query, JsonSerializable> {
  Hello440Query();

  @override
  final DocumentNode document = HELLO440_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO440_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello440$Query parse(Map<String, dynamic> json) =>
      Hello440$Query.fromJson(json);
}

final HELLO441_QUERY_DOCUMENT_OPERATION_NAME = 'hello441';
final HELLO441_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello441'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello441Query extends GraphQLQuery<Hello441$Query, JsonSerializable> {
  Hello441Query();

  @override
  final DocumentNode document = HELLO441_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO441_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello441$Query parse(Map<String, dynamic> json) =>
      Hello441$Query.fromJson(json);
}

final HELLO442_QUERY_DOCUMENT_OPERATION_NAME = 'hello442';
final HELLO442_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello442'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello442Query extends GraphQLQuery<Hello442$Query, JsonSerializable> {
  Hello442Query();

  @override
  final DocumentNode document = HELLO442_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO442_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello442$Query parse(Map<String, dynamic> json) =>
      Hello442$Query.fromJson(json);
}

final HELLO443_QUERY_DOCUMENT_OPERATION_NAME = 'hello443';
final HELLO443_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello443'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello443Query extends GraphQLQuery<Hello443$Query, JsonSerializable> {
  Hello443Query();

  @override
  final DocumentNode document = HELLO443_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO443_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello443$Query parse(Map<String, dynamic> json) =>
      Hello443$Query.fromJson(json);
}

final HELLO444_QUERY_DOCUMENT_OPERATION_NAME = 'hello444';
final HELLO444_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello444'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello444Query extends GraphQLQuery<Hello444$Query, JsonSerializable> {
  Hello444Query();

  @override
  final DocumentNode document = HELLO444_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO444_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello444$Query parse(Map<String, dynamic> json) =>
      Hello444$Query.fromJson(json);
}

final HELLO445_QUERY_DOCUMENT_OPERATION_NAME = 'hello445';
final HELLO445_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello445'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello445Query extends GraphQLQuery<Hello445$Query, JsonSerializable> {
  Hello445Query();

  @override
  final DocumentNode document = HELLO445_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO445_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello445$Query parse(Map<String, dynamic> json) =>
      Hello445$Query.fromJson(json);
}

final HELLO446_QUERY_DOCUMENT_OPERATION_NAME = 'hello446';
final HELLO446_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello446'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello446Query extends GraphQLQuery<Hello446$Query, JsonSerializable> {
  Hello446Query();

  @override
  final DocumentNode document = HELLO446_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO446_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello446$Query parse(Map<String, dynamic> json) =>
      Hello446$Query.fromJson(json);
}

final HELLO447_QUERY_DOCUMENT_OPERATION_NAME = 'hello447';
final HELLO447_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello447'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello447Query extends GraphQLQuery<Hello447$Query, JsonSerializable> {
  Hello447Query();

  @override
  final DocumentNode document = HELLO447_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO447_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello447$Query parse(Map<String, dynamic> json) =>
      Hello447$Query.fromJson(json);
}

final HELLO448_QUERY_DOCUMENT_OPERATION_NAME = 'hello448';
final HELLO448_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello448'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello448Query extends GraphQLQuery<Hello448$Query, JsonSerializable> {
  Hello448Query();

  @override
  final DocumentNode document = HELLO448_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO448_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello448$Query parse(Map<String, dynamic> json) =>
      Hello448$Query.fromJson(json);
}

final HELLO449_QUERY_DOCUMENT_OPERATION_NAME = 'hello449';
final HELLO449_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello449'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello449Query extends GraphQLQuery<Hello449$Query, JsonSerializable> {
  Hello449Query();

  @override
  final DocumentNode document = HELLO449_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO449_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello449$Query parse(Map<String, dynamic> json) =>
      Hello449$Query.fromJson(json);
}

final HELLO450_QUERY_DOCUMENT_OPERATION_NAME = 'hello450';
final HELLO450_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello450'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello450Query extends GraphQLQuery<Hello450$Query, JsonSerializable> {
  Hello450Query();

  @override
  final DocumentNode document = HELLO450_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO450_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello450$Query parse(Map<String, dynamic> json) =>
      Hello450$Query.fromJson(json);
}

final HELLO451_QUERY_DOCUMENT_OPERATION_NAME = 'hello451';
final HELLO451_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello451'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello451Query extends GraphQLQuery<Hello451$Query, JsonSerializable> {
  Hello451Query();

  @override
  final DocumentNode document = HELLO451_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO451_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello451$Query parse(Map<String, dynamic> json) =>
      Hello451$Query.fromJson(json);
}

final HELLO452_QUERY_DOCUMENT_OPERATION_NAME = 'hello452';
final HELLO452_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello452'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello452Query extends GraphQLQuery<Hello452$Query, JsonSerializable> {
  Hello452Query();

  @override
  final DocumentNode document = HELLO452_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO452_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello452$Query parse(Map<String, dynamic> json) =>
      Hello452$Query.fromJson(json);
}

final HELLO453_QUERY_DOCUMENT_OPERATION_NAME = 'hello453';
final HELLO453_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello453'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello453Query extends GraphQLQuery<Hello453$Query, JsonSerializable> {
  Hello453Query();

  @override
  final DocumentNode document = HELLO453_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO453_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello453$Query parse(Map<String, dynamic> json) =>
      Hello453$Query.fromJson(json);
}

final HELLO454_QUERY_DOCUMENT_OPERATION_NAME = 'hello454';
final HELLO454_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello454'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello454Query extends GraphQLQuery<Hello454$Query, JsonSerializable> {
  Hello454Query();

  @override
  final DocumentNode document = HELLO454_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO454_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello454$Query parse(Map<String, dynamic> json) =>
      Hello454$Query.fromJson(json);
}

final HELLO455_QUERY_DOCUMENT_OPERATION_NAME = 'hello455';
final HELLO455_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello455'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello455Query extends GraphQLQuery<Hello455$Query, JsonSerializable> {
  Hello455Query();

  @override
  final DocumentNode document = HELLO455_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO455_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello455$Query parse(Map<String, dynamic> json) =>
      Hello455$Query.fromJson(json);
}

final HELLO456_QUERY_DOCUMENT_OPERATION_NAME = 'hello456';
final HELLO456_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello456'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello456Query extends GraphQLQuery<Hello456$Query, JsonSerializable> {
  Hello456Query();

  @override
  final DocumentNode document = HELLO456_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO456_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello456$Query parse(Map<String, dynamic> json) =>
      Hello456$Query.fromJson(json);
}

final HELLO457_QUERY_DOCUMENT_OPERATION_NAME = 'hello457';
final HELLO457_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello457'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello457Query extends GraphQLQuery<Hello457$Query, JsonSerializable> {
  Hello457Query();

  @override
  final DocumentNode document = HELLO457_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO457_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello457$Query parse(Map<String, dynamic> json) =>
      Hello457$Query.fromJson(json);
}

final HELLO458_QUERY_DOCUMENT_OPERATION_NAME = 'hello458';
final HELLO458_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello458'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello458Query extends GraphQLQuery<Hello458$Query, JsonSerializable> {
  Hello458Query();

  @override
  final DocumentNode document = HELLO458_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO458_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello458$Query parse(Map<String, dynamic> json) =>
      Hello458$Query.fromJson(json);
}

final HELLO459_QUERY_DOCUMENT_OPERATION_NAME = 'hello459';
final HELLO459_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello459'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello459Query extends GraphQLQuery<Hello459$Query, JsonSerializable> {
  Hello459Query();

  @override
  final DocumentNode document = HELLO459_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO459_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello459$Query parse(Map<String, dynamic> json) =>
      Hello459$Query.fromJson(json);
}

final HELLO460_QUERY_DOCUMENT_OPERATION_NAME = 'hello460';
final HELLO460_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello460'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello460Query extends GraphQLQuery<Hello460$Query, JsonSerializable> {
  Hello460Query();

  @override
  final DocumentNode document = HELLO460_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO460_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello460$Query parse(Map<String, dynamic> json) =>
      Hello460$Query.fromJson(json);
}

final HELLO461_QUERY_DOCUMENT_OPERATION_NAME = 'hello461';
final HELLO461_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello461'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello461Query extends GraphQLQuery<Hello461$Query, JsonSerializable> {
  Hello461Query();

  @override
  final DocumentNode document = HELLO461_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO461_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello461$Query parse(Map<String, dynamic> json) =>
      Hello461$Query.fromJson(json);
}

final HELLO462_QUERY_DOCUMENT_OPERATION_NAME = 'hello462';
final HELLO462_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello462'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello462Query extends GraphQLQuery<Hello462$Query, JsonSerializable> {
  Hello462Query();

  @override
  final DocumentNode document = HELLO462_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO462_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello462$Query parse(Map<String, dynamic> json) =>
      Hello462$Query.fromJson(json);
}

final HELLO463_QUERY_DOCUMENT_OPERATION_NAME = 'hello463';
final HELLO463_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello463'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello463Query extends GraphQLQuery<Hello463$Query, JsonSerializable> {
  Hello463Query();

  @override
  final DocumentNode document = HELLO463_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO463_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello463$Query parse(Map<String, dynamic> json) =>
      Hello463$Query.fromJson(json);
}

final HELLO464_QUERY_DOCUMENT_OPERATION_NAME = 'hello464';
final HELLO464_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello464'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello464Query extends GraphQLQuery<Hello464$Query, JsonSerializable> {
  Hello464Query();

  @override
  final DocumentNode document = HELLO464_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO464_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello464$Query parse(Map<String, dynamic> json) =>
      Hello464$Query.fromJson(json);
}

final HELLO465_QUERY_DOCUMENT_OPERATION_NAME = 'hello465';
final HELLO465_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello465'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello465Query extends GraphQLQuery<Hello465$Query, JsonSerializable> {
  Hello465Query();

  @override
  final DocumentNode document = HELLO465_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO465_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello465$Query parse(Map<String, dynamic> json) =>
      Hello465$Query.fromJson(json);
}

final HELLO466_QUERY_DOCUMENT_OPERATION_NAME = 'hello466';
final HELLO466_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello466'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello466Query extends GraphQLQuery<Hello466$Query, JsonSerializable> {
  Hello466Query();

  @override
  final DocumentNode document = HELLO466_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO466_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello466$Query parse(Map<String, dynamic> json) =>
      Hello466$Query.fromJson(json);
}

final HELLO467_QUERY_DOCUMENT_OPERATION_NAME = 'hello467';
final HELLO467_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello467'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello467Query extends GraphQLQuery<Hello467$Query, JsonSerializable> {
  Hello467Query();

  @override
  final DocumentNode document = HELLO467_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO467_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello467$Query parse(Map<String, dynamic> json) =>
      Hello467$Query.fromJson(json);
}

final HELLO468_QUERY_DOCUMENT_OPERATION_NAME = 'hello468';
final HELLO468_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello468'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello468Query extends GraphQLQuery<Hello468$Query, JsonSerializable> {
  Hello468Query();

  @override
  final DocumentNode document = HELLO468_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO468_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello468$Query parse(Map<String, dynamic> json) =>
      Hello468$Query.fromJson(json);
}

final HELLO469_QUERY_DOCUMENT_OPERATION_NAME = 'hello469';
final HELLO469_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello469'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello469Query extends GraphQLQuery<Hello469$Query, JsonSerializable> {
  Hello469Query();

  @override
  final DocumentNode document = HELLO469_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO469_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello469$Query parse(Map<String, dynamic> json) =>
      Hello469$Query.fromJson(json);
}

final HELLO470_QUERY_DOCUMENT_OPERATION_NAME = 'hello470';
final HELLO470_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello470'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello470Query extends GraphQLQuery<Hello470$Query, JsonSerializable> {
  Hello470Query();

  @override
  final DocumentNode document = HELLO470_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO470_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello470$Query parse(Map<String, dynamic> json) =>
      Hello470$Query.fromJson(json);
}

final HELLO471_QUERY_DOCUMENT_OPERATION_NAME = 'hello471';
final HELLO471_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello471'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello471Query extends GraphQLQuery<Hello471$Query, JsonSerializable> {
  Hello471Query();

  @override
  final DocumentNode document = HELLO471_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO471_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello471$Query parse(Map<String, dynamic> json) =>
      Hello471$Query.fromJson(json);
}

final HELLO472_QUERY_DOCUMENT_OPERATION_NAME = 'hello472';
final HELLO472_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello472'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello472Query extends GraphQLQuery<Hello472$Query, JsonSerializable> {
  Hello472Query();

  @override
  final DocumentNode document = HELLO472_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO472_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello472$Query parse(Map<String, dynamic> json) =>
      Hello472$Query.fromJson(json);
}

final HELLO473_QUERY_DOCUMENT_OPERATION_NAME = 'hello473';
final HELLO473_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello473'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello473Query extends GraphQLQuery<Hello473$Query, JsonSerializable> {
  Hello473Query();

  @override
  final DocumentNode document = HELLO473_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO473_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello473$Query parse(Map<String, dynamic> json) =>
      Hello473$Query.fromJson(json);
}

final HELLO474_QUERY_DOCUMENT_OPERATION_NAME = 'hello474';
final HELLO474_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello474'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello474Query extends GraphQLQuery<Hello474$Query, JsonSerializable> {
  Hello474Query();

  @override
  final DocumentNode document = HELLO474_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO474_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello474$Query parse(Map<String, dynamic> json) =>
      Hello474$Query.fromJson(json);
}

final HELLO475_QUERY_DOCUMENT_OPERATION_NAME = 'hello475';
final HELLO475_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello475'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello475Query extends GraphQLQuery<Hello475$Query, JsonSerializable> {
  Hello475Query();

  @override
  final DocumentNode document = HELLO475_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO475_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello475$Query parse(Map<String, dynamic> json) =>
      Hello475$Query.fromJson(json);
}

final HELLO476_QUERY_DOCUMENT_OPERATION_NAME = 'hello476';
final HELLO476_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello476'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello476Query extends GraphQLQuery<Hello476$Query, JsonSerializable> {
  Hello476Query();

  @override
  final DocumentNode document = HELLO476_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO476_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello476$Query parse(Map<String, dynamic> json) =>
      Hello476$Query.fromJson(json);
}

final HELLO477_QUERY_DOCUMENT_OPERATION_NAME = 'hello477';
final HELLO477_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello477'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello477Query extends GraphQLQuery<Hello477$Query, JsonSerializable> {
  Hello477Query();

  @override
  final DocumentNode document = HELLO477_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO477_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello477$Query parse(Map<String, dynamic> json) =>
      Hello477$Query.fromJson(json);
}

final HELLO478_QUERY_DOCUMENT_OPERATION_NAME = 'hello478';
final HELLO478_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello478'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello478Query extends GraphQLQuery<Hello478$Query, JsonSerializable> {
  Hello478Query();

  @override
  final DocumentNode document = HELLO478_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO478_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello478$Query parse(Map<String, dynamic> json) =>
      Hello478$Query.fromJson(json);
}

final HELLO479_QUERY_DOCUMENT_OPERATION_NAME = 'hello479';
final HELLO479_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello479'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello479Query extends GraphQLQuery<Hello479$Query, JsonSerializable> {
  Hello479Query();

  @override
  final DocumentNode document = HELLO479_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO479_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello479$Query parse(Map<String, dynamic> json) =>
      Hello479$Query.fromJson(json);
}

final HELLO480_QUERY_DOCUMENT_OPERATION_NAME = 'hello480';
final HELLO480_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello480'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello480Query extends GraphQLQuery<Hello480$Query, JsonSerializable> {
  Hello480Query();

  @override
  final DocumentNode document = HELLO480_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO480_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello480$Query parse(Map<String, dynamic> json) =>
      Hello480$Query.fromJson(json);
}

final HELLO481_QUERY_DOCUMENT_OPERATION_NAME = 'hello481';
final HELLO481_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello481'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello481Query extends GraphQLQuery<Hello481$Query, JsonSerializable> {
  Hello481Query();

  @override
  final DocumentNode document = HELLO481_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO481_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello481$Query parse(Map<String, dynamic> json) =>
      Hello481$Query.fromJson(json);
}

final HELLO482_QUERY_DOCUMENT_OPERATION_NAME = 'hello482';
final HELLO482_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello482'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello482Query extends GraphQLQuery<Hello482$Query, JsonSerializable> {
  Hello482Query();

  @override
  final DocumentNode document = HELLO482_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO482_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello482$Query parse(Map<String, dynamic> json) =>
      Hello482$Query.fromJson(json);
}

final HELLO483_QUERY_DOCUMENT_OPERATION_NAME = 'hello483';
final HELLO483_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello483'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello483Query extends GraphQLQuery<Hello483$Query, JsonSerializable> {
  Hello483Query();

  @override
  final DocumentNode document = HELLO483_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO483_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello483$Query parse(Map<String, dynamic> json) =>
      Hello483$Query.fromJson(json);
}

final HELLO484_QUERY_DOCUMENT_OPERATION_NAME = 'hello484';
final HELLO484_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello484'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello484Query extends GraphQLQuery<Hello484$Query, JsonSerializable> {
  Hello484Query();

  @override
  final DocumentNode document = HELLO484_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO484_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello484$Query parse(Map<String, dynamic> json) =>
      Hello484$Query.fromJson(json);
}

final HELLO485_QUERY_DOCUMENT_OPERATION_NAME = 'hello485';
final HELLO485_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello485'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello485Query extends GraphQLQuery<Hello485$Query, JsonSerializable> {
  Hello485Query();

  @override
  final DocumentNode document = HELLO485_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO485_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello485$Query parse(Map<String, dynamic> json) =>
      Hello485$Query.fromJson(json);
}

final HELLO486_QUERY_DOCUMENT_OPERATION_NAME = 'hello486';
final HELLO486_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello486'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello486Query extends GraphQLQuery<Hello486$Query, JsonSerializable> {
  Hello486Query();

  @override
  final DocumentNode document = HELLO486_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO486_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello486$Query parse(Map<String, dynamic> json) =>
      Hello486$Query.fromJson(json);
}

final HELLO487_QUERY_DOCUMENT_OPERATION_NAME = 'hello487';
final HELLO487_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello487'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello487Query extends GraphQLQuery<Hello487$Query, JsonSerializable> {
  Hello487Query();

  @override
  final DocumentNode document = HELLO487_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO487_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello487$Query parse(Map<String, dynamic> json) =>
      Hello487$Query.fromJson(json);
}

final HELLO488_QUERY_DOCUMENT_OPERATION_NAME = 'hello488';
final HELLO488_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello488'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello488Query extends GraphQLQuery<Hello488$Query, JsonSerializable> {
  Hello488Query();

  @override
  final DocumentNode document = HELLO488_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO488_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello488$Query parse(Map<String, dynamic> json) =>
      Hello488$Query.fromJson(json);
}

final HELLO489_QUERY_DOCUMENT_OPERATION_NAME = 'hello489';
final HELLO489_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello489'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello489Query extends GraphQLQuery<Hello489$Query, JsonSerializable> {
  Hello489Query();

  @override
  final DocumentNode document = HELLO489_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO489_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello489$Query parse(Map<String, dynamic> json) =>
      Hello489$Query.fromJson(json);
}

final HELLO490_QUERY_DOCUMENT_OPERATION_NAME = 'hello490';
final HELLO490_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello490'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello490Query extends GraphQLQuery<Hello490$Query, JsonSerializable> {
  Hello490Query();

  @override
  final DocumentNode document = HELLO490_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO490_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello490$Query parse(Map<String, dynamic> json) =>
      Hello490$Query.fromJson(json);
}

final HELLO491_QUERY_DOCUMENT_OPERATION_NAME = 'hello491';
final HELLO491_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello491'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello491Query extends GraphQLQuery<Hello491$Query, JsonSerializable> {
  Hello491Query();

  @override
  final DocumentNode document = HELLO491_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO491_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello491$Query parse(Map<String, dynamic> json) =>
      Hello491$Query.fromJson(json);
}

final HELLO492_QUERY_DOCUMENT_OPERATION_NAME = 'hello492';
final HELLO492_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello492'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello492Query extends GraphQLQuery<Hello492$Query, JsonSerializable> {
  Hello492Query();

  @override
  final DocumentNode document = HELLO492_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO492_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello492$Query parse(Map<String, dynamic> json) =>
      Hello492$Query.fromJson(json);
}

final HELLO493_QUERY_DOCUMENT_OPERATION_NAME = 'hello493';
final HELLO493_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello493'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello493Query extends GraphQLQuery<Hello493$Query, JsonSerializable> {
  Hello493Query();

  @override
  final DocumentNode document = HELLO493_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO493_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello493$Query parse(Map<String, dynamic> json) =>
      Hello493$Query.fromJson(json);
}

final HELLO494_QUERY_DOCUMENT_OPERATION_NAME = 'hello494';
final HELLO494_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello494'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello494Query extends GraphQLQuery<Hello494$Query, JsonSerializable> {
  Hello494Query();

  @override
  final DocumentNode document = HELLO494_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO494_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello494$Query parse(Map<String, dynamic> json) =>
      Hello494$Query.fromJson(json);
}

final HELLO495_QUERY_DOCUMENT_OPERATION_NAME = 'hello495';
final HELLO495_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello495'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello495Query extends GraphQLQuery<Hello495$Query, JsonSerializable> {
  Hello495Query();

  @override
  final DocumentNode document = HELLO495_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO495_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello495$Query parse(Map<String, dynamic> json) =>
      Hello495$Query.fromJson(json);
}

final HELLO496_QUERY_DOCUMENT_OPERATION_NAME = 'hello496';
final HELLO496_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello496'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello496Query extends GraphQLQuery<Hello496$Query, JsonSerializable> {
  Hello496Query();

  @override
  final DocumentNode document = HELLO496_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO496_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello496$Query parse(Map<String, dynamic> json) =>
      Hello496$Query.fromJson(json);
}

final HELLO497_QUERY_DOCUMENT_OPERATION_NAME = 'hello497';
final HELLO497_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello497'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello497Query extends GraphQLQuery<Hello497$Query, JsonSerializable> {
  Hello497Query();

  @override
  final DocumentNode document = HELLO497_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO497_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello497$Query parse(Map<String, dynamic> json) =>
      Hello497$Query.fromJson(json);
}

final HELLO498_QUERY_DOCUMENT_OPERATION_NAME = 'hello498';
final HELLO498_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello498'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello498Query extends GraphQLQuery<Hello498$Query, JsonSerializable> {
  Hello498Query();

  @override
  final DocumentNode document = HELLO498_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO498_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello498$Query parse(Map<String, dynamic> json) =>
      Hello498$Query.fromJson(json);
}

final HELLO499_QUERY_DOCUMENT_OPERATION_NAME = 'hello499';
final HELLO499_QUERY_DOCUMENT = DocumentNode(definitions: [
  OperationDefinitionNode(
    type: OperationType.query,
    name: NameNode(value: 'hello499'),
    variableDefinitions: [],
    directives: [],
    selectionSet: SelectionSetNode(selections: [
      FieldNode(
        name: NameNode(value: 'launchesPast'),
        alias: null,
        arguments: [
          ArgumentNode(
            name: NameNode(value: 'limit'),
            value: IntValueNode(value: '10'),
          )
        ],
        directives: [],
        selectionSet: SelectionSetNode(selections: [
          FieldNode(
            name: NameNode(value: 'mission_name'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_date_local'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: null,
          ),
          FieldNode(
            name: NameNode(value: 'launch_site'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'site_name_long'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'links'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'article_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
              FieldNode(
                name: NameNode(value: 'video_link'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              ),
            ]),
          ),
          FieldNode(
            name: NameNode(value: 'rocket'),
            alias: null,
            arguments: [],
            directives: [],
            selectionSet: SelectionSetNode(selections: [
              FieldNode(
                name: NameNode(value: 'rocket_name'),
                alias: null,
                arguments: [],
                directives: [],
                selectionSet: null,
              )
            ]),
          ),
        ]),
      )
    ]),
  )
]);

class Hello499Query extends GraphQLQuery<Hello499$Query, JsonSerializable> {
  Hello499Query();

  @override
  final DocumentNode document = HELLO499_QUERY_DOCUMENT;

  @override
  final String operationName = HELLO499_QUERY_DOCUMENT_OPERATION_NAME;

  @override
  List<Object?> get props => [document, operationName];
  @override
  Hello499$Query parse(Map<String, dynamic> json) =>
      Hello499$Query.fromJson(json);
}
